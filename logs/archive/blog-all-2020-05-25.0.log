2020-05-25 12:40:36.553 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:40:36.560 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:40:36.560 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:40:36.560 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:40:36.561 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:40:36.623 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:40:36.626 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 20(Integer), 20(Integer)
2020-05-25 12:40:36.629 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 12:40:36.630 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:40:36.631 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:40:36.634 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:40:36.636 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 83
2020-05-25 12:40:36.636 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:40:36.641 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:40:36.642 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 83(Long), {"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:40:36.648 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:12.203 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:45:12.207 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:45:12.207 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:12.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:45:12.210 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:45:12.219 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:45:12.220 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:45:12.226 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:45:12.228 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:45:12.228 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:45:12.230 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:45:12.232 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-25 12:45:12.232 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:45:12.236 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:12.237 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 29(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:12.246 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:16.679 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:45:16.679 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:45:16.680 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:16.680 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:45:16.680 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:45:16.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 12:45:16.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:45:16.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:16.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 12:45:16.682 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 12:45:16.683 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:45:16.683 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:45:16.683 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:16.683 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 12:45:16.684 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:45:16.686 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:45:16.687 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:45:16.689 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:45:16.692 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:45:16.693 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:45:16.695 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:45:16.696 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 12:45:16.697 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:45:16.701 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 12:45:16.701 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 12:45:16.702 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 12:45:16.703 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 12:45:16.703 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}
2020-05-25 12:45:16.714 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 12:45:16.715 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 12:45:16.719 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:16.719 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:16.720 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 12:45:16.722 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 40
2020-05-25 12:45:16.724 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 12:45:16.727 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:16.728 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:16.734 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:16.738 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:16.741 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:16.742 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:16.748 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:16.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 12:45:16.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:45:16.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:16.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 12:45:16.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:45:16.917 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 12:45:16.918 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 12:45:16.920 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 12:45:16.922 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 12:45:16.922 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 12:45:16.926 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:16.927 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:16.931 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:20.786 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:45:20.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:45:20.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:20.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:45:20.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:45:20.792 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:45:20.793 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 20(Integer), 20(Integer)
2020-05-25 12:45:20.796 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 12:45:20.796 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:45:20.797 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:45:20.798 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:45:20.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 12:45:20.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:45:20.802 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:20.802 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:20.809 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:45:23.118 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:45:23.119 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:45:23.119 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:45:23.119 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:45:23.119 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:45:23.126 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:45:23.128 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:45:23.130 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:45:23.131 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:45:23.131 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:45:23.132 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:45:23.133 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 12:45:23.133 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:45:23.136 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:45:23.137 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:45:23.142 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:44.462 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:47:44.463 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:47:44.463 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:44.464 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:47:44.464 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:47:44.471 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:47:44.471 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:47:44.473 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:47:44.474 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:47:44.475 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:47:44.476 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:47:44.477 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 12:47:44.477 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:47:44.481 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:44.483 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:44.488 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:48.199 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:47:48.199 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:47:48.200 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:48.200 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:47:48.200 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:47:48.205 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:47:48.205 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:47:48.207 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:47:48.208 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:47:48.208 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 12:47:48.208 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 12:47:48.208 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:48.209 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:47:48.209 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:47:48.211 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:47:48.217 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 12:47:48.217 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:47:48.222 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 12:47:48.223 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 12:47:48.224 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:48.225 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.226 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 12:47:48.227 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 12:47:48.227 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 12:47:48.228 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 12:47:48.228 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 12:47:48.231 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:48.231 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:48.232 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.239 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:48.240 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 12:47:48.240 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-25 12:47:48.241 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}
2020-05-25 12:47:48.247 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:48.248 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.254 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:48.431 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 12:47:48.431 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:47:48.431 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:48.432 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 12:47:48.432 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:47:48.435 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 12:47:48.435 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 12:47:48.438 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 12:47:48.439 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-25 12:47:48.439 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 12:47:48.443 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:48.444 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.449 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:57.278 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:47:57.278 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:47:57.278 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:47:57.279 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:47:57.279 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:47:57.284 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:47:57.284 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 20(Integer), 20(Integer)
2020-05-25 12:47:57.285 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 12:47:57.286 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:47:57.286 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:47:57.287 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:47:57.288 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 12:47:57.288 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:47:57.380 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:57.381 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:57.388 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:51:37.315 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:51:37.315 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:51:37.315 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:51:37.315 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:51:37.316 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:51:37.326 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:51:37.327 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:51:37.331 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:51:37.332 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:51:37.332 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:51:37.335 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:51:37.337 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 12:51:37.337 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:51:37.345 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:51:37.347 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:51:37.353 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:51:39.799 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:51:39.799 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:51:39.799 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:51:39.799 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:51:39.800 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:51:39.807 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:51:39.807 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 20(Integer), 20(Integer)
2020-05-25 12:51:39.808 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 12:51:39.809 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:51:39.809 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:51:39.810 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:51:39.811 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 12:51:39.812 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:51:39.817 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:51:39.818 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:51:39.825 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:51:41.993 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:51:41.994 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:51:41.994 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:51:41.995 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:51:41.995 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:51:42.004 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:51:42.005 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-05-25 12:51:42.007 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 11
2020-05-25 12:51:42.008 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:51:42.008 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:51:42.009 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:51:42.011 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 12:51:42.012 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:51:42.019 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:51:42.020 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=1, totalCount=11, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:51:42.025 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:51:53.083 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:51:53.084 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:51:53.084 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:51:53.085 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:51:53.085 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 12:51:53.090 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 12:51:53.091 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 20(Integer), 20(Integer)
2020-05-25 12:51:53.092 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 12:51:53.093 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:51:53.093 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:51:53.095 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:51:53.097 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 12:51:53.097 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}
2020-05-25 12:51:53.105 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:51:53.106 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=20, totalPage=1, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":2,"index":20,"list":[],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:51:53.111 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:44.148 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:53:44.149 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:53:44.149 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:44.149 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:53:44.150 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 12:53:44.165 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 12:53:44.167 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 12:53:44.171 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 12:53:44.172 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:53:44.173 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:53:44.174 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:53:44.175 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-25 12:53:44.176 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 12:53:44.182 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:44.184 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:44.191 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:49.441 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 12:53:49.441 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:53:49.442 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:49.442 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 12:53:49.442 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:53:49.450 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:53:49.450 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 12:53:49.450 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:53:49.450 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:53:49.451 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 12:53:49.454 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 12:53:49.454 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 12:53:49.456 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 12:53:49.457 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 12:53:49.457 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}
2020-05-25 12:53:49.463 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 12:53:49.463 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 12:53:49.465 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 12:53:49.465 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:49.466 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 12:53:49.466 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:49.467 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 12:53:49.469 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 12:53:49.470 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 12:53:49.471 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:49.472 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 12:53:49.473 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:53:49.473 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:53:49.475 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:53:49.476 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 12:53:49.477 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:49.477 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 12:53:49.478 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:49.481 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:49.482 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:49.482 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:49.490 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:49.664 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 12:53:49.664 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 12:53:49.664 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:49.664 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 12:53:49.665 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 12:53:49.677 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 12:53:49.677 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 12:53:49.679 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 12:53:49.679 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 12:53:49.680 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 12:53:49.687 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:49.688 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:49.693 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:54.257 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:53:54.257 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:53:54.257 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:54.257 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:53:54.258 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 12:53:54.266 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 12:53:54.267 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 10(Integer), 10(Integer)
2020-05-25 12:53:54.268 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 12:53:54.269 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:53:54.270 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:53:54.271 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:53:54.273 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 12:53:54.274 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 12:53:54.280 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:54.280 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-22 20:57:45), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-22 20:45:11), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-22 20:45:05), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-22 20:44:59), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-22 20:44:54), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-22 20:44:50), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-22 20:44:45), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-22 20:44:40), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-22 20:44:35), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-22 20:44:15)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1","blogRead":0,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-23 14:22:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:54.286 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:53:56.763 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 12:53:56.763 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 12:53:56.764 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 12:53:56.764 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 12:53:56.764 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 12:53:56.773 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 12:53:56.774 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 12:53:56.776 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 12:53:56.777 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 12:53:56.777 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 12:53:56.779 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 12:53:56.780 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 12:53:56.780 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 12:53:56.787 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:53:56.787 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-23 14:22:26)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:53:56.793 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:02:06.358 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:02:06.359 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:02:06.360 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:02:06.360 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:02:06.361 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:02:06.369 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:02:06.370 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:02:06.372 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:02:06.375 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:02:06.376 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:02:06.378 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:02:06.380 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 13:02:06.381 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:02:06.386 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:02:06.387 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263816317509591040","blogRead":0,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-22 20:57:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813156384301056","blogRead":0,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-22 20:45:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813131239448576","blogRead":0,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-22 20:45:05"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813104932773888","blogRead":0,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-22 20:44:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813085076938752","blogRead":0,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-22 20:44:54"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813067829960704","blogRead":0,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-22 20:44:50"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813046816497664","blogRead":0,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-22 20:44:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813025689788416","blogRead":0,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-22 20:44:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263813005695541248","blogRead":0,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-22 20:44:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1263812922329554944","blogRead":0,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-22 20:44:15"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:02:06.393 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:00.350 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:00.351 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:00.351 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:00.351 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:00.352 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:04:00.352 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:04:00.352 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:04:00.352 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:04:00.352 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:04:00.353 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:04:00.374 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:04:00.375 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:00.376 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:04:00.377 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:04:00.377 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:00.378 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:00.379 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:00.379 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:04:00.379 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:04:00.380 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 13:04:00.380 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:00.380 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:04:00.380 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:04:00.381 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 13:04:00.381 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:04:00.382 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:00.382 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 13:04:00.383 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:04:00.393 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:00.394 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:00.396 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:00.397 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 31(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:00.399 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:00.400 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:00.401 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:00.404 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:00.408 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:00.566 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:04:00.566 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:04:00.566 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:00.566 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:04:00.567 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:04:00.576 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:04:00.576 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:04:00.576 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:04:00.577 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:04:00.577 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:04:00.585 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:00.586 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:00.592 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:12.477 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:12.477 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:12.478 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:12.478 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:12.478 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:04:12.487 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:04:12.489 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:12.493 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:12.494 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:12.494 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:12.495 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:12.496 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 13:04:12.497 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:12.503 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:12.504 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:12.511 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:27.924 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:27.925 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:27.926 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:27.927 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:27.927 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-05-25 13:04:27.944 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-05-25 13:04:27.945 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:27.947 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:27.948 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:27.948 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:27.949 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:27.950 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 13:04:27.951 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:27.958 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:27.959 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:27.967 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:35.303 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:35.304 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:35.304 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:35.304 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:35.305 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2020-05-25 13:04:35.313 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-05-25 13:04:35.314 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:35.317 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:35.318 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:35.318 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:35.321 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:35.322 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 13:04:35.322 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:35.330 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:35.331 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:35.337 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:40.549 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:40.549 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:40.549 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:40.549 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:40.550 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_read, sortMethod=desc)]
2020-05-25 13:04:40.581 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-05-25 13:04:40.582 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:40.584 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:40.585 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:40.586 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:40.587 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:40.588 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 13:04:40.589 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:40.596 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:40.598 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 39(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:40.603 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:43.114 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:43.115 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:43.115 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:43.115 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:43.116 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_collection, sortMethod=desc)]
2020-05-25 13:04:43.133 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection desc limit ?, ? 
2020-05-25 13:04:43.133 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:43.136 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:43.137 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:43.138 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:43.139 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:43.141 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-25 13:04:43.142 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:43.149 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:43.149 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:43.156 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:46.401 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:46.403 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:46.404 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:46.404 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:46.405 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_read, sortMethod=desc)]
2020-05-25 13:04:46.422 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-05-25 13:04:46.431 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:46.433 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:46.434 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:46.434 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:46.436 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:46.437 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-25 13:04:46.438 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:46.446 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:46.447 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 36(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:46.453 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:46.647 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:46.647 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:46.647 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:46.648 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:46.648 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2020-05-25 13:04:46.654 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-05-25 13:04:46.655 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:46.660 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:46.660 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:46.661 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:46.662 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:46.663 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 13:04:46.663 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:46.670 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:46.671 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:46.678 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:46.798 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:46.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:46.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:46.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:46.799 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-05-25 13:04:46.807 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-05-25 13:04:46.808 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:46.810 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:46.811 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:46.811 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:46.812 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:46.813 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 13:04:46.814 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:46.821 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:46.822 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:46.828 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:04:47.464 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:04:47.465 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:04:47.465 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:04:47.465 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:04:47.466 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:04:47.489 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:04:47.490 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:04:47.493 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:04:47.493 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:04:47.494 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:04:47.495 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:04:47.496 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-25 13:04:47.496 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:04:47.504 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:04:47.505 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11116, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:03:47), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=13, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 13:03:53), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=234, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 13:03:55), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 32(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:04:47.512 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:09:14.883 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:09:14.884 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:09:14.886 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:09:14.884 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:09:14.887 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:09:14.893 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:09:14.893 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:09:14.894 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:09:14.894 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:09:14.907 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:09:14.908 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:09:14.909 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:09:14.910 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:09:14.911 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:09:14.912 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:09:14.913 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:09:14.913 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:09:14.914 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:09:14.914 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:09:14.917 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 13:09:14.917 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:09:14.918 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:09:14.918 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:09:14.919 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-25 13:09:14.919 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 33
2020-05-25 13:09:14.919 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:09:14.919 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:09:14.932 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:09:14.933 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:09:14.934 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:09:14.935 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 51
2020-05-25 13:09:14.936 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:09:14.936 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:09:14.937 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:09:14.945 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:09:14.949 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:09:14.952 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:09:14.960 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:09:14.963 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:09:14.964 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 36(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:09:14.969 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:09:14.971 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:09:14.972 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:09:14.979 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:10:26.421 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:10:26.421 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:10:26.421 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:10:26.421 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:10:26.422 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:10:26.423 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:10:26.433 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:10:26.433 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:10:26.433 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:10:26.433 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:10:26.435 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:10:26.444 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:10:26.445 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:10:26.447 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:10:26.448 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:10:26.449 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:10:26.450 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 13:10:26.450 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:10:26.452 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:10:26.452 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:10:26.452 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:10:26.453 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:10:26.453 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:10:26.454 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:10:26.454 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:10:26.454 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 13:10:26.455 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:10:26.455 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:10:26.455 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 13:10:26.455 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:10:26.456 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:10:26.457 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:10:26.457 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 13:10:26.458 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:10:26.470 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:10:26.470 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:10:26.472 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:10:26.473 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:10:26.474 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:10:26.475 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:10:26.476 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:10:26.480 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:10:26.481 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:10:26.482 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:10:26.483 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:10:26.487 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:15:33.844 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:15:33.845 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:15:33.845 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:15:33.846 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:15:33.846 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:15:33.862 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:15:33.863 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:15:33.897 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:15:33.897 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:15:33.898 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:15:33.899 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:15:33.900 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 56
2020-05-25 13:15:33.901 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:15:33.907 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:15:33.909 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 56(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:15:33.915 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:16:57.397 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:16:57.398 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:16:57.398 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:16:57.398 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:16:57.398 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:16:57.404 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:16:57.404 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:16:57.407 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:16:57.408 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:16:57.409 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:16:57.414 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:16:57.415 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:16:57.420 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:04.695 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:17:04.695 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:17:04.696 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:04.696 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:17:04.696 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:17:04.701 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:17:04.702 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:17:04.704 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:17:04.705 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:17:04.705 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:17:04.706 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:17:04.707 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 13:17:04.708 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:17:04.715 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:04.715 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:04.720 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:09.043 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:17:09.044 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:17:09.044 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:09.045 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:17:09.045 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:17:09.051 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:17:09.051 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:17:09.052 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:17:09.053 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:17:09.053 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:17:09.077 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:09.078 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:09.083 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:11.263 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:17:11.263 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:17:11.264 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:11.265 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:17:11.265 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:17:11.272 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:17:11.273 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:17:11.275 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:17:11.276 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:17:11.276 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:17:11.277 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:17:11.279 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 13:17:11.279 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:17:11.286 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:11.287 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:11.292 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:21.627 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:17:21.627 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:17:21.627 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:21.628 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:17:21.628 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:17:21.632 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:17:21.633 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:17:21.634 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:17:21.634 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 7
2020-05-25 13:17:21.634 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:17:21.639 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:21.640 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:21.653 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:24.002 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:17:24.002 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:17:24.002 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:24.002 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:17:24.003 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:17:24.008 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:17:24.008 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:17:24.010 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:17:24.011 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:17:24.011 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:17:24.012 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:17:24.014 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 13:17:24.014 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:17:24.018 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:24.018 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:24.031 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:48.966 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:17:48.967 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:17:48.975 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:48.976 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:17:48.976 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:17:48.981 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:17:48.981 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:17:48.982 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:17:48.983 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 13:17:48.983 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:17:48.988 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:48.989 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:48.993 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:17:51.409 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:17:51.409 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:17:51.409 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:17:51.409 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:17:51.410 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:17:51.415 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:17:51.415 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:17:51.418 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:17:51.418 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:17:51.419 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:17:51.420 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:17:51.421 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 13:17:51.421 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:17:51.428 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:17:51.429 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:17:51.439 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:01.493 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:18:01.493 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:01.494 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:01.494 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:18:01.494 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:01.502 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:18:01.503 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:18:01.505 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:18:01.506 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 13:18:01.507 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:18:01.523 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:01.524 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:01.531 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:03.141 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:18:03.141 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:18:03.141 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:03.141 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:18:03.142 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:18:03.149 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:18:03.149 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:18:03.152 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:18:03.152 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:18:03.153 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:18:03.154 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:18:03.155 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:18:03.155 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:18:03.162 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:03.165 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:03.176 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:28.942 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:18:28.943 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:28.943 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:28.943 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:18:28.944 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:28.951 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:18:28.951 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:18:28.952 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:18:28.952 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:18:28.953 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:18:28.970 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:28.971 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:28.976 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:40.585 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:18:40.585 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:40.585 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:18:40.586 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:40.587 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:40.594 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:18:40.595 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:18:40.597 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:18:40.598 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:18:40.598 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:18:40.599 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:18:40.599 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:18:40.601 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:18:40.601 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:18:40.601 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:18:40.602 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 13:18:40.602 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:18:40.604 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:18:40.605 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 13:18:40.605 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:18:40.614 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:40.614 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:40.617 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:40.618 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:40.619 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:40.621 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:40.622 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:40.622 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:40.627 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:40.871 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:18:40.871 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:40.871 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:40.871 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:18:40.872 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:40.877 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:18:40.877 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:18:40.877 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:18:40.878 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 7
2020-05-25 13:18:40.880 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:18:40.883 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:40.884 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:40.888 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:42.437 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:18:42.438 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:42.438 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:42.438 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:18:42.438 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:42.438 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:42.439 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:42.440 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:42.440 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:18:42.440 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:42.450 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:18:42.451 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:18:42.453 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:18:42.453 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 13:18:42.453 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:18:42.454 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:18:42.454 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:18:42.456 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:18:42.457 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 13:18:42.457 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:18:42.457 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:18:42.458 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:18:42.459 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:18:42.460 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 13:18:42.460 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:18:42.467 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:42.468 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:42.469 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:42.470 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:42.472 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:42.474 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:42.475 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:42.476 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:42.480 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:42.756 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:18:42.756 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:42.757 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:42.757 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:18:42.757 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:42.762 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:18:42.763 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:18:42.766 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:18:42.766 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:18:42.767 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:18:42.773 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:42.773 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:42.779 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:43.944 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:18:43.945 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:18:43.945 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:43.945 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:18:43.945 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:18:43.950 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:18:43.951 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:18:43.952 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:18:43.953 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:18:43.953 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:18:43.954 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:18:43.955 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:18:43.955 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:18:43.960 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:43.960 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:43.965 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:18:44.961 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:18:44.961 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:18:44.972 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:18:44.972 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:18:44.973 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:18:44.979 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:18:44.981 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:18:44.983 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:18:44.984 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 13:18:44.984 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:18:44.990 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:18:44.990 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:18:44.995 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:35.714 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:35.714 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:35.714 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:19:35.715 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:35.715 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:35.715 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:35.715 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:35.725 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:35.725 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:19:35.725 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:35.732 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:35.732 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:35.734 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:35.734 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 13:19:35.735 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:35.735 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:19:35.735 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:19:35.741 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:19:35.742 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:35.742 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 13:19:35.742 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:35.742 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:19:35.747 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:35.750 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:35.751 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:35.755 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:36.016 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:19:36.016 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:36.017 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:36.017 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:19:36.018 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:36.026 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:19:36.026 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:19:36.027 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:19:36.026 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:19:36.029 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:19:36.029 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:36.029 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:36.029 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:19:36.029 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:19:36.030 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:36.048 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:36.049 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:36.052 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:19:36.053 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:19:36.054 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:36.055 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:19:36.056 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 13:19:36.056 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:19:36.063 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:36.064 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:36.068 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:37.847 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:37.848 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:37.848 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:19:37.848 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:37.848 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:37.849 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:19:37.850 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:37.860 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:37.861 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:37.863 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:37.863 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:19:37.863 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:37.863 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:37.864 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:19:37.864 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:37.863 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 13:19:37.873 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:37.874 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:19:37.874 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:19:37.876 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:19:37.876 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 13:19:37.877 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:19:37.878 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:19:37.879 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:19:37.881 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:19:37.882 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 13:19:37.882 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:19:37.883 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:19:37.883 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:19:37.885 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:19:37.885 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 13:19:37.885 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:19:37.889 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:37.890 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:37.895 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:37.896 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:37.897 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:37.899 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:37.900 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:37.901 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:37.902 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:37.903 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:37.906 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:37.908 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:40.400 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:19:40.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:19:40.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:40.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:19:40.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:19:40.405 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:19:40.406 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:19:40.418 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:19:40.419 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:19:40.419 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:19:40.420 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:40.422 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 13:19:40.422 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:19:40.426 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:40.427 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:40.431 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:41.240 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:41.240 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:41.240 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:41.247 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:41.247 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:41.255 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:41.255 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:41.257 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:41.258 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 13:19:41.258 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:41.263 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:41.263 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:41.267 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:43.016 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:19:43.016 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:19:43.017 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:43.017 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:19:43.017 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:19:43.042 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? order by created_time desc limit ?, ? 
2020-05-25 13:19:43.043 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 7(String), 0(Integer), 10(Integer)
2020-05-25 13:19:43.046 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:43.047 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-05-25 13:19:43.047 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 7(String)
2020-05-25 13:19:43.048 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:43.050 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 13:19:43.052 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"}],"pageSize":10,"params":{"typeId":"7"},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-05-25 13:19:43.057 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:43.058 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"}],"pageSize":10,"params":{"typeId":"7"},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:43.062 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:45.357 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:45.358 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:45.358 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:45.358 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:45.359 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:45.365 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:45.365 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:45.367 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:45.368 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:19:45.369 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:45.374 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:45.375 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:45.379 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:46.591 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:19:46.591 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:19:46.592 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:46.592 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:19:46.592 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=2}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:19:46.598 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? order by created_time desc limit ?, ? 
2020-05-25 13:19:46.598 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2020-05-25 13:19:46.601 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 9
2020-05-25 13:19:46.601 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-05-25 13:19:46.602 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 2(String)
2020-05-25 13:19:46.603 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:46.604 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 13:19:46.605 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{"typeId":"2"},"sortColumn":"created_time","sortMethod":"desc","totalCount":9,"totalPage":1},"msg":"操作成功！"}
2020-05-25 13:19:46.609 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:46.609 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=2}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{"typeId":"2"},"sortColumn":"created_time","sortMethod":"desc","totalCount":9,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:46.613 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:50.430 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:50.431 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:50.431 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:50.431 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:50.431 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:50.435 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:50.436 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:50.438 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:50.438 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-25 13:19:50.439 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:50.443 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:50.444 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:50.448 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:52.381 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:19:52.381 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:19:52.381 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:52.381 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:19:52.382 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:19:52.387 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? order by created_time desc limit ?, ? 
2020-05-25 13:19:52.387 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 7(String), 0(Integer), 10(Integer)
2020-05-25 13:19:52.389 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:52.390 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-05-25 13:19:52.390 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 7(String)
2020-05-25 13:19:52.391 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:52.392 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:19:52.393 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"}],"pageSize":10,"params":{"typeId":"7"},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-05-25 13:19:52.397 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:52.398 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"}],"pageSize":10,"params":{"typeId":"7"},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:52.402 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:53.649 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 13:19:53.650 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:19:53.650 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:53.651 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 13:19:53.651 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:19:53.657 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 13:19:53.657 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 13:19:53.658 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 13:19:53.659 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:19:53.659 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 13:19:53.663 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:53.664 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:53.668 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:19:54.392 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:19:54.392 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:19:54.392 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:19:54.393 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:19:54.393 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:19:54.397 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:19:54.398 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:19:54.399 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:19:54.400 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:19:54.400 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:19:54.402 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:19:54.403 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:19:54.403 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:19:54.408 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:19:54.409 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:19:54.413 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:34:56.757 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:34:56.757 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:34:56.757 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:34:56.757 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:34:56.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:34:56.783 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:34:56.784 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:34:56.786 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:34:56.787 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 13:34:56.787 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:34:56.787 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:34:56.787 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:34:56.789 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:34:56.789 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:34:56.790 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:34:56.791 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:34:56.791 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:34:56.791 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 13:34:56.791 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:34:56.791 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:34:56.793 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:34:56.795 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 38
2020-05-25 13:34:56.795 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:34:56.795 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:34:56.796 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:34:56.802 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:34:56.805 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:34:56.805 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:34:56.807 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:34:56.808 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 38(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":234,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:03:55"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:34:56.810 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:34:56.815 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:34:57.056 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:34:57.056 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:34:57.057 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:34:57.057 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:34:57.057 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:34:57.064 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:34:57.065 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:34:57.067 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:34:57.068 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 13:34:57.068 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:34:57.072 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:34:57.073 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:34:57.077 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:35:02.733 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:35:02.733 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:35:02.734 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:35:02.734 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:35:02.734 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:35:02.739 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:35:02.740 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:35:02.741 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:35:02.746 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:35:02.746 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 235(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 1(Integer)
2020-05-25 13:35:02.749 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:35:02.766 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:35:02.766 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:35:02.767 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:35:02.772 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 13:35:02.772 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":235,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:35:02.778 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:35:02.778 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":235,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:35:02.784 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:35:08.961 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:35:08.962 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:35:08.962 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:35:08.962 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:35:08.962 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:35:08.969 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:35:08.970 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:35:08.971 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:35:08.971 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:35:08.972 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:35:08.973 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:35:08.974 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 13:35:08.974 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":235,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:35:02"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:35:08.978 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:35:08.978 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":235,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:35:02"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:35:08.983 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:35:10.051 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:35:10.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:35:10.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:35:10.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:35:10.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:35:10.057 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:35:10.058 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:35:10.059 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:35:10.060 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:35:10.061 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 236(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 2(Integer)
2020-05-25 13:35:10.064 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:35:10.065 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:35:10.065 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:35:10.067 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:35:10.092 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 41
2020-05-25 13:35:10.093 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":236,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:35:10.115 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:35:10.116 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":236,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:35:10.119 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:09.658 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:42:09.658 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:42:09.658 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:42:09.659 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:42:09.660 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:09.660 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:42:09.660 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:09.675 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:42:09.675 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:42:09.677 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:42:09.678 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:42:09.678 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:42:09.679 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 13:42:09.679 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:42:09.679 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":236,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:42:09.679 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 13:42:09.680 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:42:09.681 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:42:09.682 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:42:09.684 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:09.685 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:42:09.686 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 237(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 3(Integer)
2020-05-25 13:42:09.688 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:42:09.688 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:09.689 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:42:09.689 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":236,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:09.689 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:42:09.690 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:09.690 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:09.691 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:09.694 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:09.698 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:09.698 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 40
2020-05-25 13:42:09.699 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":237,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:42:09.705 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:09.706 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":237,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:09.709 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:09.932 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:42:09.933 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:09.933 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:09.934 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:42:09.934 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:09.940 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:42:09.941 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:42:09.966 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:42:09.967 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-25 13:42:09.968 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:42:09.975 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:09.975 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:09.979 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:14.921 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:42:14.922 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:42:14.922 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:14.922 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:42:14.922 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:42:14.929 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:42:14.930 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:42:14.932 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:42:14.932 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:42:14.933 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:42:14.934 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:42:14.935 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:42:14.935 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":237,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:09"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:42:14.942 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:14.943 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":237,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:09"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:14.947 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:17.630 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:42:17.630 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:17.631 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:17.631 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:42:17.631 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:42:17.639 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:42:17.640 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:42:17.641 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:17.642 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:42:17.642 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 238(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 4(Integer)
2020-05-25 13:42:17.644 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:42:17.645 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:42:17.645 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:42:17.646 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:17.650 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 13:42:17.651 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":238,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:42:17.657 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:17.657 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":238,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:17.662 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:22.821 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:42:22.821 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:42:22.821 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:22.822 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:42:22.822 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:42:22.828 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:42:22.829 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:42:22.831 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:42:22.832 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:42:22.832 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:42:22.833 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:42:22.835 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:42:22.835 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":238,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:17"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:42:22.840 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:22.841 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":238,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:17"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:22.845 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:32.194 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:42:32.194 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:32.194 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:32.195 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:42:32.195 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:42:32.200 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:42:32.201 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:42:32.202 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:32.211 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:42:32.211 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 239(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 5(Integer)
2020-05-25 13:42:32.221 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:42:32.222 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:42:32.222 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:42:32.223 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:32.227 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 33
2020-05-25 13:42:32.228 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":239,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:42:32.232 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:32.233 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":239,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:32.237 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:34.222 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:42:34.222 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:42:34.222 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:34.223 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:34.234 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:42:34.234 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:42:34.248 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:42:34.248 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 13:42:34.249 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":239,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:42:34.250 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:42:34.250 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:42:34.252 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:34.252 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:42:34.252 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:42:34.254 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:42:34.254 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-25 13:42:34.255 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:42:34.257 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:34.257 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":239,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:34.262 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:34.262 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:34.266 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:34.268 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:34.277 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:42:34.277 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 240(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 6(Integer)
2020-05-25 13:42:34.279 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:42:34.280 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:42:34.280 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:42:34.281 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:42:34.285 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 63
2020-05-25 13:42:34.286 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:42:34.290 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:34.291 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 63(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:34.306 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:34.539 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:42:34.539 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:42:34.539 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:34.540 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:42:34.540 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:42:34.544 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:42:34.544 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:42:34.545 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:42:34.546 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 7
2020-05-25 13:42:34.546 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:42:34.551 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:34.552 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:34.563 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:42:36.054 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:42:36.054 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:42:36.054 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:42:36.055 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:42:36.055 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:42:36.062 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:42:36.062 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:42:36.064 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:42:36.065 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:42:36.065 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:42:36.066 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:42:36.068 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 13:42:36.068 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:42:36.075 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:42:36.076 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:42:36.080 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:43:08.719 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:43:08.720 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:43:08.720 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:43:08.720 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:43:08.720 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:43:08.721 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:43:08.721 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:43:08.721 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:43:08.722 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:43:08.722 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:43:08.721 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:43:08.722 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:43:08.722 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:43:08.722 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:43:08.723 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:43:08.750 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:43:08.751 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:43:08.752 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:43:08.753 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:43:08.753 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:43:08.754 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:43:08.755 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:43:08.756 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:43:08.757 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:43:08.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 13:43:08.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 37
2020-05-25 13:43:08.758 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:43:08.758 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:43:08.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:43:08.758 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:43:08.760 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:43:08.761 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 40
2020-05-25 13:43:08.761 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:43:08.768 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:43:08.769 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 39(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":13,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:03:53"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:43:08.773 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:43:08.774 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:43:08.775 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:43:08.776 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:43:08.777 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:43:08.780 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:43:08.784 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:43:09.023 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:43:09.023 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:43:09.024 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:43:09.024 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:43:09.024 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:43:09.029 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:43:09.030 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:43:09.032 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:43:09.033 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:43:09.034 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:43:09.047 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:43:09.048 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:43:09.053 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:43:16.071 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813156384301056
2020-05-25 13:43:16.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:43:16.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:43:16.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:43:16.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813156384301056]
2020-05-25 13:43:16.079 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:43:16.080 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813156384301056(String)
2020-05-25 13:43:16.081 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:43:16.083 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:43:16.084 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试11(String), <p>阿三大苏打</p>(String), 345(Integer), 14(Integer), 234(Integer), 2(Integer), 0(Integer), 1263813156384301056(String), 1(Integer)
2020-05-25 13:43:16.089 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:43:16.090 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:43:16.090 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 13:43:16.091 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:43:16.096 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 13:43:16.096 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":14,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}
2020-05-25 13:43:16.104 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:43:16.104 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813156384301056(String), [1263813156384301056](String), 1(Integer), null, GET(String), 25(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":14,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:43:16.108 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:05.942 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813156384301056
2020-05-25 13:47:05.942 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:05.942 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:05.942 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:47:05.942 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813156384301056]
2020-05-25 13:47:05.947 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:47:05.947 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813156384301056(String)
2020-05-25 13:47:05.949 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:47:05.949 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:47:05.953 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试11(String), <p>阿三大苏打</p>(String), 345(Integer), 15(Integer), 234(Integer), 2(Integer), 0(Integer), 1263813156384301056(String), 2(Integer)
2020-05-25 13:47:05.955 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:47:05.956 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:47:05.956 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 13:47:05.957 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:47:05.961 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 13:47:05.962 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":15,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}
2020-05-25 13:47:05.964 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:05.965 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813156384301056(String), [1263813156384301056](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":15,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:05.969 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:09.065 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813156384301056
2020-05-25 13:47:09.066 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:09.067 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:09.067 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:47:09.067 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813156384301056]
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:09.068 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:09.069 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:47:09.069 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:09.069 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:47:09.069 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:09.080 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:47:09.081 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813156384301056(String)
2020-05-25 13:47:09.083 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:47:09.084 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:47:09.084 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:47:09.085 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:47:09.085 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试11(String), <p>阿三大苏打</p>(String), 345(Integer), 16(Integer), 234(Integer), 2(Integer), 0(Integer), 1263813156384301056(String), 3(Integer)
2020-05-25 13:47:09.086 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:47:09.087 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 13:47:09.087 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:47:09.087 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:47:09.087 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:47:09.088 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:47:09.088 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:47:09.088 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 13:47:09.089 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:47:09.089 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:47:09.090 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 13:47:09.090 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:47:09.093 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 13:47:09.093 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}
2020-05-25 13:47:09.104 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:09.104 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:09.107 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:09.108 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813156384301056(String), [1263813156384301056](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:09.108 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:09.111 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:09.112 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:09.112 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:09.116 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:09.388 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:47:09.388 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:09.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:09.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:47:09.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:09.397 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:47:09.397 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:47:09.398 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:47:09.399 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 13:47:09.399 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:47:09.404 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:09.405 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:09.409 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:36.222 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:47:36.223 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:47:36.223 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:36.223 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:47:36.223 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:47:36.240 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:47:36.241 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:47:36.244 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:47:36.244 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:47:36.245 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:47:36.246 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:47:36.248 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 13:47:36.248 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:47:36.254 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:36.255 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:36.259 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:38.149 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:47:38.149 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:47:38.149 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:38.150 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:47:38.151 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:47:38.152 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:47:38.152 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:47:38.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:38.154 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:38.164 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:47:38.164 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:47:38.166 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:47:38.167 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:47:38.167 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:47:38.168 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:47:38.168 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:47:38.168 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:47:38.169 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 13:47:38.169 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:47:38.170 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:47:38.170 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:47:38.170 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:47:38.171 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 13:47:38.172 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:47:38.172 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:47:38.174 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 13:47:38.174 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:47:38.183 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:38.184 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:38.187 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:38.188 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:38.188 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:38.192 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:38.192 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 23(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:38.193 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:38.198 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:54.096 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 13:47:54.097 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 13:47:54.097 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:54.097 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 13:47:54.097 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 13:47:54.098 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 13:47:54.098 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:54.098 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 13:47:54.099 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:54.099 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:54.099 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:54.099 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 13:47:54.100 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:54.100 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 13:47:54.100 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:54.111 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 13:47:54.111 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 13:47:54.113 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 13:47:54.113 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 13:47:54.114 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 13:47:54.115 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 13:47:54.115 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 13:47:54.115 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 13:47:54.115 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 13:47:54.116 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 13:47:54.117 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 13:47:54.117 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 13:47:54.118 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 13:47:54.120 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 13:47:54.120 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 13:47:54.121 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 13:47:54.121 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 13:47:54.122 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 13:47:54.124 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:54.125 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:54.129 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:54.134 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:54.135 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:54.138 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:54.138 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":240,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:42:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11116,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:03:47"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:54.140 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:54.143 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:47:54.369 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 13:47:54.369 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:47:54.370 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:47:54.370 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 13:47:54.370 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 13:47:54.376 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 13:47:54.377 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 13:47:54.378 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 13:47:54.379 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 13:47:54.379 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 13:47:54.387 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:47:54.387 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:47:54.392 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:48:07.096 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 13:48:07.097 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:48:07.097 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:48:07.097 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:48:07.097 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 13:48:07.103 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:48:07.104 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 13:48:07.106 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:48:07.107 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:48:07.108 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 241(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 7(Integer)
2020-05-25 13:48:07.119 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:48:07.120 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:48:07.121 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 13:48:07.122 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:48:07.127 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 13:48:07.127 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 13:48:07.132 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:48:07.132 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:48:07.137 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 13:48:12.868 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813104932773888
2020-05-25 13:48:12.868 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 13:48:12.868 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 13:48:12.869 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 13:48:12.869 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813104932773888]
2020-05-25 13:48:12.876 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 13:48:12.877 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813104932773888(String)
2020-05-25 13:48:12.880 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:48:12.881 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 13:48:12.882 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试9(String), <p>阿三大苏打</p>(String), 435(Integer), 11117(Integer), 567(Integer), 2(Integer), 0(Integer), 1263813104932773888(String), 1(Integer)
2020-05-25 13:48:12.885 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 13:48:12.886 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 13:48:12.886 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 13:48:12.888 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 13:48:12.894 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 13:48:12.894 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":567,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},"msg":"操作成功！"}
2020-05-25 13:48:12.901 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 13:48:12.901 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813104932773888(String), [1263813104932773888](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":{"blogCollection":567,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 13:48:12.906 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:09:52.602 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 15:09:52.615 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:09:52.616 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:09:52.617 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 15:09:52.617 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:09:52.653 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:09:52.661 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:09:52.672 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:09:52.676 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 74
2020-05-25 15:09:52.678 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 15:09:52.688 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:09:52.691 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 74(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:09:52.699 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:09:54.987 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 15:09:54.988 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:09:54.989 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:09:54.998 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 15:09:54.998 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:09:55.007 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:09:55.008 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:09:55.010 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:09:55.011 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 15:09:55.011 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 15:09:55.018 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:09:55.019 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:09:55.024 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:09:57.883 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 15:09:57.884 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:09:57.885 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:09:57.886 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 15:09:57.886 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:09:57.899 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:09:57.900 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:09:57.902 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:09:57.913 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 15:09:57.915 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 15:09:57.930 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:09:57.933 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:09:57.940 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:09:58.132 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 15:09:58.132 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:09:58.132 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:09:58.133 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 15:09:58.133 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 15:09:58.142 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 15:09:58.143 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:09:58.146 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 15:09:58.147 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 15:09:58.148 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:09:58.149 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:09:58.153 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 15:09:58.153 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 15:09:58.160 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:09:58.160 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 21(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:09:58.164 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:09:59.020 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 15:09:59.021 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:09:59.022 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:09:59.023 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 15:09:59.023 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:09:59.038 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:09:59.039 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:09:59.041 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:09:59.042 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 15:09:59.043 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 15:09:59.056 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:09:59.059 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:09:59.064 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:10:00.539 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /about/read
2020-05-25 15:10:00.541 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:10:00.541 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:10:00.542 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AboutController.read
2020-05-25 15:10:00.542 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:10:00.565 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-05-25 15:10:00.566 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 15:10:00.612 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 15:10:00.622 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-05-25 15:10:00.624 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 关于染柒(String), <p>sdf</p>(String), 11(Integer), 1(Integer), 13(Integer)
2020-05-25 15:10:00.628 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-05-25 15:10:00.634 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 95
2020-05-25 15:10:00.636 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":11,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-24 22:21:49","version":13},"msg":"操作成功！"}
2020-05-25 15:10:00.649 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:10:00.651 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":11,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-24 22:21:49","version":13},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:10:00.656 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:11:28.175 WARN  [http-nio-8090-exec-1]org.springframework.web.servlet.PageNotFound.noHandlerFound:1251 -No mapping for GET /blog/getTimeLine
2020-05-25 15:11:28.346 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:11:28.360 ERROR [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-05-25 15:19:28.738 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-25 15:19:28.759 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-25 15:19:43.148 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 24524 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-25 15:19:43.152 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 15:19:43.153 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-25 15:19:44.931 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$23123500] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:44.969 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:44.979 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$65a69f55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:44.983 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4c7e4397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:44.987 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-25 15:19:45.038 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:45.053 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:45.074 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.229 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-25 15:19:46.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.286 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.585 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.592 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.596 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.598 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.600 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.602 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.604 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.606 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.638 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.661 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 15:19:46.976 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-25 15:19:46.987 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-25 15:19:46.987 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-25 15:19:46.987 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-25 15:19:46.989 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 15:19:46.989 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 15:19:46.989 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 15:19:47.000 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 15:19:47.109 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-25 15:19:47.110 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3912 ms
2020-05-25 15:19:48.535 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-25 15:19:48.553 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-25 15:19:48.556 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 6.001 seconds (JVM running for 7.506)
2020-05-25 15:20:06.478 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 15:20:06.478 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-25 15:20:06.494 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-05-25 15:20:06.533 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 15:20:06.533 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 15:20:06.533 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 15:20:06.536 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:06.536 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:06.536 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:06.537 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:06.537 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:06.537 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:06.540 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:06.587 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 15:20:06.587 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 15:20:06.588 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:20:06.612 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 15:20:06.612 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:20:06.612 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 15:20:06.640 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:20:06.643 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 15:20:06.643 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 110
2020-05-25 15:20:06.643 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 110
2020-05-25 15:20:06.644 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 15:20:06.645 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 112
2020-05-25 15:20:06.651 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 15:20:06.651 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:06.651 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:06.651 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 15:20:06.652 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:06.659 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 15:20:06.660 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 15:20:06.664 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 15:20:06.665 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 15:20:06.708 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 15:20:06.713 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 15:20:06.713 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 15:20:06.715 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 15:20:06.720 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:06.722 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:06.723 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:06.723 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:06.724 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:06.726 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:06.726 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:06.727 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:06.731 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:06.735 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:06.743 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:06.750 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:11.441 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 15:20:11.442 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:20:11.442 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:11.442 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 15:20:11.443 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 15:20:11.488 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 15:20:11.489 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:20:11.499 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 15:20:11.501 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 15:20:11.502 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:20:11.506 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:20:11.509 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 68
2020-05-25 15:20:11.517 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 15:20:11.528 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:11.531 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 68(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:11.540 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:13.079 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 15:20:13.080 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:13.081 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:13.081 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 15:20:13.082 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:13.091 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:20:13.092 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:20:13.101 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:20:13.102 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 15:20:13.105 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 15:20:13.110 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:13.111 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:13.116 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:14.734 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 15:20:14.735 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:14.736 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:14.737 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 15:20:14.738 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:14.744 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 15:20:14.746 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 15:20:14.752 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 15:20:14.754 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 15:20:14.755 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 15:20:14.759 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:14.760 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:14.766 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:24.931 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 15:20:24.932 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:24.933 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:24.934 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 15:20:24.934 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 15:20:24.955 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 15:20:24.957 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 15:20:24.966 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 15:20:24.971 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 15:20:24.972 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 242(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 8(Integer)
2020-05-25 15:20:24.976 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 15:20:24.986 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 15:20:24.988 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 15:20:24.991 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 15:20:24.998 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 67
2020-05-25 15:20:24.998 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 15:20:25.007 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:25.009 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 67(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:25.016 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:26.909 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 15:20:26.910 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:26.910 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:26.911 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 15:20:26.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:26.919 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 15:20:26.921 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 15:20:26.928 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 15:20:26.929 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 15:20:26.930 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 15:20:26.937 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:26.939 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:26.945 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:28.359 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813156384301056
2020-05-25 15:20:28.360 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:28.360 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:28.361 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 15:20:28.361 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813156384301056]
2020-05-25 15:20:28.372 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 15:20:28.374 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813156384301056(String)
2020-05-25 15:20:28.378 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 15:20:28.380 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 15:20:28.381 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试11(String), <p>阿三大苏打</p>(String), 345(Integer), 17(Integer), 234(Integer), 2(Integer), 0(Integer), 1263813156384301056(String), 4(Integer)
2020-05-25 15:20:28.385 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 15:20:28.387 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 15:20:28.388 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 15:20:28.390 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 15:20:28.397 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 15:20:28.397 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}
2020-05-25 15:20:28.402 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:28.403 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813156384301056(String), [1263813156384301056](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:28.408 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:30.837 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 15:20:30.838 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 15:20:30.839 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:30.839 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 15:20:30.840 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 15:20:30.852 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 15:20:30.853 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 15:20:30.860 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 15:20:30.861 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 15:20:30.862 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 15:20:30.871 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:30.873 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:30.880 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:20:35.584 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 15:20:35.585 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:20:35.586 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:20:35.587 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 15:20:35.587 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 15:20:35.599 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 15:20:35.600 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:20:35.610 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 15:20:35.612 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 15:20:35.613 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:20:35.616 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:20:35.619 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-25 15:20:35.621 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 15:20:35.628 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:20:35.630 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:20:35.645 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:51.433 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:51.442 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:51.442 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:51.442 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:51.444 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:51.495 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:51.500 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:51.515 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:51.535 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:51.538 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:51.555 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:51.588 ERROR [http-nio-8090-exec-4]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:44:51.804 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:51.804 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:51.804 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:51.805 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:51.805 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:51.814 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:51.815 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:51.821 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:51.832 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:51.833 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:51.841 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:51.843 ERROR [http-nio-8090-exec-3]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:44:52.681 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:52.682 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:52.683 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:52.684 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:52.684 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:52.698 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:52.700 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:52.711 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:52.726 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:52.729 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:52.739 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:52.740 ERROR [http-nio-8090-exec-5]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:44:52.887 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:52.888 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:52.890 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:52.891 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:52.892 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:52.912 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:52.914 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:52.924 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:52.932 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:52.932 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:52.933 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:52.934 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:52.934 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:52.940 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:52.947 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:52.949 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:52.950 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:52.954 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:52.955 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:52.955 ERROR [http-nio-8090-exec-6]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:44:52.975 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:52.978 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:52.988 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:52.989 ERROR [http-nio-8090-exec-7]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:44:53.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:44:53.052 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:44:53.053 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:44:53.054 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:44:53.054 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:44:53.067 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:44:53.069 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:44:53.072 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:44:53.088 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:44:53.090 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:44:53.101 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:44:53.103 ERROR [http-nio-8090-exec-8]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:39.127 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:39.128 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:39.128 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:39.130 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:39.130 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:39.139 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:39.140 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:39.142 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:39.154 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:39.157 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:39.165 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:39.166 ERROR [http-nio-8090-exec-10]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:40.277 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:40.278 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:40.278 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:40.279 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:40.280 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:40.294 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:40.296 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:40.303 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:40.312 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:40.314 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=1, header=null, nickname=123456, userEmail=wq, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:40.320 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:40.322 ERROR [http-nio-8090-exec-9]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:54.539 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:54.539 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:54.539 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:54.539 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:54.540 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:54.551 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:54.552 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:54.554 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:54.570 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:54.572 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:54.578 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:54.580 ERROR [http-nio-8090-exec-2]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:55.178 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:55.178 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:55.179 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:55.180 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:55.180 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:55.197 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:55.198 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:55.202 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:55.219 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:55.221 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:55.231 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:55.233 ERROR [http-nio-8090-exec-1]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:55.879 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:55.881 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:55.882 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:55.883 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:55.884 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:55.903 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:55.904 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:55.907 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:55.925 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:55.927 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:55.934 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:55.935 ERROR [http-nio-8090-exec-4]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:50:56.060 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:50:56.061 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:50:56.063 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:50:56.063 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:50:56.064 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:50:56.102 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:50:56.104 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:50:56.112 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:50:56.150 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:50:56.154 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=38d7355701b6f3760ee49852904319c1, name=null, sex=1, header=null, nickname=dfgd, userEmail=dfg, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:50:56.166 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:50:56.170 ERROR [http-nio-8090-exec-3]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:53:01.474 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:53:01.475 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:53:01.475 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:53:01.475 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:53:01.476 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=asd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:53:01.489 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:53:01.489 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:53:01.491 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:53:01.508 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:53:01.511 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=asd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:53:01.519 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:53:01.521 ERROR [http-nio-8090-exec-5]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:53:02.457 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:53:02.458 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:53:02.460 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:53:02.461 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:53:02.462 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=asd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:53:02.489 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:53:02.492 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:53:02.496 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:53:02.531 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:53:02.534 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=asd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:53:02.548 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:53:02.550 ERROR [http-nio-8090-exec-6]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:58:56.070 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:58:56.072 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:58:56.073 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:58:56.075 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:58:56.076 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:58:56.095 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:58:56.096 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:58:56.100 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:58:56.119 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:58:56.121 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:58:56.128 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:58:56.130 ERROR [http-nio-8090-exec-7]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:58:56.355 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:58:56.355 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:58:56.356 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:58:56.356 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:58:56.357 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:58:56.367 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:58:56.368 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 15:58:56.372 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:58:56.384 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:58:56.386 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzs, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:58:56.392 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:58:56.393 ERROR [http-nio-8090-exec-8]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:08.726 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:59:08.727 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:59:08.728 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:59:08.729 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:59:08.730 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whz, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:59:08.752 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:59:08.753 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whz(String)
2020-05-25 15:59:08.756 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 15:59:08.768 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:08.770 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: whz(String), 7815696ecbf1c96e6894b779456d330e(String), null, 1(Integer), null, dfgd(String), asd(String)
2020-05-25 15:59:09.152 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:09.154 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whz, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:09.160 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:09.197 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into bl_user(             username, password, name, sex, header, nickname, user_email         ) values (             ?, ?, ?, ?,             ?, ?, ?         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null] with root cause
java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy97.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.save(Unknown Source)
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:09.226 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:09.228 ERROR [http-nio-8090-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 15:59:56.659 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:59:56.661 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:59:56.665 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:59:56.666 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:59:56.667 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzff, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:59:56.689 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:59:56.690 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzff(String)
2020-05-25 15:59:56.692 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 15:59:56.704 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:56.706 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: whzff(String), 7815696ecbf1c96e6894b779456d330e(String), null, 1(Integer), null, dfgd(String), asd(String)
2020-05-25 15:59:56.721 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:56.723 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzff, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":234,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:56.728 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:56.730 ERROR [http-nio-8090-exec-9]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into bl_user(             username, password, name, sex, header, nickname, user_email         ) values (             ?, ?, ?, ?,             ?, ?, ?         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null] with root cause
java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy97.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.save(Unknown Source)
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:56.733 ERROR [http-nio-8090-exec-9]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:56.734 ERROR [http-nio-8090-exec-9]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 15:59:57.651 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 15:59:57.651 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 15:59:57.651 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 15:59:57.652 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 15:59:57.652 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzff, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 15:59:57.663 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 15:59:57.664 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzff(String)
2020-05-25 15:59:57.666 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 15:59:57.674 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:57.675 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: whzff(String), 7815696ecbf1c96e6894b779456d330e(String), null, 1(Integer), null, dfgd(String), asd(String)
2020-05-25 15:59:57.691 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:57.693 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=whzff, password=7815696ecbf1c96e6894b779456d330e, name=null, sex=1, header=null, nickname=dfgd, userEmail=asd, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:57.700 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:57.702 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into bl_user(             username, password, name, sex, header, nickname, user_email         ) values (             ?, ?, ?, ?,             ?, ?, ?         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null] with root cause
java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy97.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.save(Unknown Source)
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:57.706 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 15:59:57.707 ERROR [http-nio-8090-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 16:00:34.573 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:00:34.574 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:00:34.575 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:00:34.575 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:00:34.576 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:00:34.592 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:00:34.594 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:00:34.597 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 16:00:34.612 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:00:34.614 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: 1916024110(String), d9729feb74992cc3482b350163a1a010(String), null, 1(Integer), null, sdf(String), sdf(String)
2020-05-25 16:00:34.634 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:00:34.636 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:00:34.645 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:00:34.646 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.whz.shiro.mapper.UserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into bl_user(             username, password, name, sex, header, nickname, user_email         ) values (             ?, ?, ?, ?,             ?, ?, ?         )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null] with root cause
java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy97.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy71.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.save(Unknown Source)
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:80)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:00:34.650 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:00:34.652 ERROR [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 16:05:54.343 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:05:54.345 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:05:54.347 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:05:54.347 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:05:54.348 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:06:39.446 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:06:39.447 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:06:39.448 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:06:39.448 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:06:39.448 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:06:39.453 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:06:39.454 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:06:39.458 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 16:06:39.475 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:06:39.475 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:06:39.477 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 16:06:39.479 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.480 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: 1916024110(String), d9729feb74992cc3482b350163a1a010(String), null, 1(Integer), null, sdf(String), sdf(String)
2020-05-25 16:06:39.485 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.486 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 45143
2020-05-25 16:06:39.487 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"msg":"注册成功！"}
2020-05-25 16:06:39.487 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:06:39.488 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:06:39.490 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:06:39.491 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 16:06:39.491 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:06:39.494 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 16:06:39.496 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.497 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: 1916024110(String), d9729feb74992cc3482b350163a1a010(String), null, 1(Integer), null, sdf(String), sdf(String)
2020-05-25 16:06:39.502 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.503 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 57
2020-05-25 16:06:39.504 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.504 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"msg":"注册成功！"}
2020-05-25 16:06:39.505 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 45143(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-05-25 16:06:39.507 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.508 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:06:39.511 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.512 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.515 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:39.515 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":241,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 13:48:07"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":16,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 13:47:09"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:06:39.519 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
(String), POST(String), 57(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-05-25 16:06:39.530 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.533 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.535 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:39.531 ERROR [http-nio-8090-exec-3]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:06:39.535 ERROR [http-nio-8090-exec-5]com.whz.shiro.advice.BlogExceptionAdvice.exceptionHandler:26 -统一异常处理：
com.whz.shiro.exception.BlogException: 用户已存在！
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:77)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e9c62927.register(<generated>)
	at sun.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:06:39.552 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-25 16:06:39.565 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-25 16:06:44.504 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 21756 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-25 16:06:44.508 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 16:06:44.508 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-25 16:06:45.447 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$1b33dfce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.486 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5dc84a23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$449fee65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.502 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-25 16:06:45.551 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:45.588 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:46.847 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-25 16:06:46.848 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:46.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.190 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.202 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.206 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.207 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.210 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.211 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.214 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.216 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.246 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 16:06:47.597 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-25 16:06:47.607 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-25 16:06:47.608 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-25 16:06:47.609 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-25 16:06:47.610 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 16:06:47.611 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 16:06:47.611 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 16:06:47.619 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 16:06:47.723 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-25 16:06:47.723 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3168 ms
2020-05-25 16:06:49.132 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-25 16:06:49.153 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-25 16:06:49.155 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.293 seconds (JVM running for 6.631)
2020-05-25 16:10:08.760 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 16:10:08.761 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-25 16:10:08.784 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 23 ms
2020-05-25 16:10:08.974 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:10:08.977 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:10:08.978 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:10:08.982 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:10:08.982 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:10:09.035 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:10:09.073 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:10:09.108 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 2
2020-05-25 16:10:09.120 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:10:09.127 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-25 16:10:09.135 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:10:09.156 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2] with root cause
org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy71.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.getByUsername(Unknown Source)
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:10:09.168 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 16:10:09.168 ERROR [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 16:10:58.975 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/register
2020-05-25 16:10:58.977 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:10:58.979 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:10:58.980 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.register
2020-05-25 16:10:58.982 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:10:58.999 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:10:59.002 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: 1916024110(String)
2020-05-25 16:10:59.004 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-05-25 16:10:59.011 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:10:59.013 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -==> Parameters: 1916024110(String), d9729feb74992cc3482b350163a1a010(String), null, 1(Integer), null, sdf(String), sdf(String)
2020-05-25 16:10:59.028 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:10:59.030 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 55
2020-05-25 16:10:59.112 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"msg":"注册成功！"}
2020-05-25 16:10:59.116 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:10:59.117 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=1916024110, password=d9729feb74992cc3482b350163a1a010, name=null, sex=1, header=null, nickname=sdf, userEmail=sdf, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 55(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-05-25 16:10:59.121 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:25:57.283 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 16:25:57.284 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:25:57.285 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:25:57.286 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 16:25:57.287 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:25:57.305 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:25:57.306 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 16:25:57.308 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 16:25:57.317 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 16:25:57.325 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 16:25:57.329 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:25:57.329 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:25:57.335 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:26:02.131 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 16:26:02.132 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:26:02.132 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:26:02.133 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 16:26:02.133 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:26:02.141 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:26:02.143 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 16:26:02.147 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 16:26:02.149 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 16:26:02.150 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 16:26:02.157 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:26:02.159 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:26:02.175 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:34:54.549 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:34:54.549 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:34:54.551 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:34:54.551 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:34:54.551 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:34:54.551 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:34:54.552 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:34:54.552 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:34:54.552 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:34:54.552 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:34:54.582 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:34:54.583 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:34:54.590 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:34:54.591 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 42
2020-05-25 16:34:54.598 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:34:54.602 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:34:54.602 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:34:54.602 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:34:54.604 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:34:54.604 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:34:54.604 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:34:54.604 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:34:54.610 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:34:54.612 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:34:54.622 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:34:54.623 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:34:54.624 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 75
2020-05-25 16:34:54.632 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:34:54.641 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:34:54.642 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 75(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:34:54.647 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:34:54.685 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:34:54.685 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:34:54.685 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:34:54.686 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:34:54.686 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:34:54.693 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:34:54.694 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:34:54.702 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:34:54.703 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:34:54.706 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:34:54.706 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:34:54.707 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:34:54.708 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:34:54.710 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 16:34:54.713 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:34:54.715 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:34:54.719 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 117
2020-05-25 16:34:54.725 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:34:54.726 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:34:54.726 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 25(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:34:54.731 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:34:54.735 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:34:54.736 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 117(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:34:54.743 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:39:28.128 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 16:39:28.129 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:39:28.129 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:39:28.129 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 16:39:28.130 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 16:39:28.139 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 16:39:28.140 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 16:39:28.143 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 16:39:28.144 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 16:39:28.145 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 16:39:28.153 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:39:28.154 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:39:28.160 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:08.184 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:43:08.186 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:43:08.186 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:08.187 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:43:08.187 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:43:08.188 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:43:08.188 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:08.189 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:08.189 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:43:08.190 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:08.207 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:43:08.208 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:43:08.208 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:43:08.208 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:43:08.210 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:43:08.211 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 16:43:08.212 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:43:08.226 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:08.228 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 24(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:08.233 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:43:08.237 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:08.237 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:43:08.239 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:43:08.244 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:43:08.247 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 63
2020-05-25 16:43:08.248 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:43:08.263 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:08.267 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 63(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:08.275 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:08.296 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:43:08.297 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:08.297 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:08.298 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:43:08.298 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:08.310 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:43:08.311 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:43:08.315 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:43:08.315 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 16:43:08.316 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:43:08.327 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:08.328 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:08.335 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:08.664 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:43:08.666 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:08.666 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:08.668 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:43:08.668 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:08.686 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:43:08.687 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:43:08.698 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:43:08.700 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 37
2020-05-25 16:43:08.701 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:43:08.718 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:08.721 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:08.728 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:27.443 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:43:27.444 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:43:27.444 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:27.445 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:43:27.446 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:43:27.467 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:43:27.468 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:43:27.479 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:43:27.483 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:43:27.484 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:43:27.487 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:43:27.489 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 46
2020-05-25 16:43:27.490 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:43:27.490 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:43:27.491 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:27.491 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:27.491 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:43:27.492 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:27.504 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:27.507 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 46(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:27.510 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:43:27.511 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:43:27.513 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:43:27.515 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 16:43:27.515 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:27.515 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:43:27.527 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:27.529 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 25(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:27.536 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:27.779 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:43:27.780 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:27.782 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:27.783 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:43:27.784 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:27.787 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:43:27.789 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:27.791 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:27.792 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:43:27.793 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:27.805 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:43:27.806 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:43:27.809 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:43:27.810 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-25 16:43:27.810 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:43:27.810 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:43:27.811 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:43:27.814 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:43:27.815 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 16:43:27.816 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:43:27.817 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:27.820 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:27.824 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:27.825 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:27.825 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:27.831 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:31.703 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:43:31.704 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:43:31.704 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:31.705 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:43:31.707 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:43:31.707 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:43:31.707 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:43:31.708 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:31.708 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:31.708 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:31.709 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:43:31.709 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:31.709 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:31.709 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:43:31.710 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:31.724 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:43:31.725 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:43:31.726 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:43:31.727 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:43:31.730 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:43:31.731 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:43:31.731 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:43:31.732 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 16:43:31.732 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:43:31.741 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:43:31.741 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:43:31.742 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-25 16:43:31.742 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:43:31.743 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:43:31.743 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:43:31.745 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:31.745 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:43:31.747 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 25(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:31.748 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 45
2020-05-25 16:43:31.749 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:43:31.752 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:31.753 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:31.754 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:31.760 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:31.761 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:31.763 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 45(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:31.771 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:43:31.936 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:43:31.936 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:43:31.936 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:43:31.937 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:43:31.937 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:43:31.943 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:43:31.944 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:43:31.947 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:43:31.948 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 16:43:31.948 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:43:31.956 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:43:31.957 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:43:31.962 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:44:43.543 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:44:43.543 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:44:43.545 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:44:43.545 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:44:43.544 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:44:43.552 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:44:43.552 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:44:43.553 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:44:43.554 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:44:43.555 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:44:43.557 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:44:43.558 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 16:44:43.559 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:44:43.562 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:44:43.563 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:44:43.566 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:44:43.566 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:44:43.567 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:44:43.567 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:44:43.568 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:44:43.570 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:44:43.572 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:44:43.572 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:44:43.573 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-25 16:44:43.573 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 16:44:43.573 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:44:43.574 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:44:43.574 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:44:43.578 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:44:43.584 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:44:43.586 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:44:43.587 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:44:43.589 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:44:43.591 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:44:43.595 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:44:43.787 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:44:43.788 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:44:43.788 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:44:43.789 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:44:43.789 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:44:43.795 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:44:43.795 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:44:43.808 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:44:43.810 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 16:44:43.811 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:44:43.826 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:44:43.827 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:44:43.835 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:46:27.100 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:46:27.101 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:46:27.101 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:46:27.101 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:46:27.103 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:46:27.103 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:46:27.102 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:46:27.103 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:46:27.123 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:46:27.124 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:46:27.126 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:46:27.126 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:46:27.128 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:46:27.129 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 16:46:27.129 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:46:27.129 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:46:27.130 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:46:27.130 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:46:27.131 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:46:27.132 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:46:27.132 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:46:27.133 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 33
2020-05-25 16:46:27.133 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:46:27.136 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:46:27.137 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-25 16:46:27.137 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:46:27.138 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:46:27.139 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:46:27.146 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:46:27.151 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:46:27.151 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 33(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:46:27.155 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:46:27.157 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:46:27.157 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 36(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:46:27.164 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:46:27.405 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:46:27.405 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:46:27.405 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:46:27.406 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:46:27.406 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:46:27.415 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:46:27.416 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:46:27.419 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:46:27.421 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 16:46:27.421 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:46:27.429 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:46:27.429 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:46:27.434 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:48:09.491 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:48:09.491 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:48:09.492 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:48:09.492 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:48:09.493 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:48:09.493 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:48:09.492 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:48:09.496 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:48:09.497 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:48:09.497 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:48:09.498 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:48:09.498 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:48:09.498 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:48:09.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:48:09.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:48:09.509 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:48:09.510 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:48:09.512 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:48:09.513 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:48:09.513 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:48:09.514 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 16:48:09.514 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:48:09.517 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:48:09.517 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:48:09.518 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-25 16:48:09.518 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:48:09.518 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:48:09.521 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:48:09.522 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:48:09.523 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:48:09.525 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:48:09.526 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 16:48:09.527 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:48:09.527 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:48:09.528 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:48:09.532 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:48:09.532 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:48:09.533 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:48:09.539 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:48:09.542 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:48:09.544 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 28(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:48:09.549 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:48:09.794 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:48:09.794 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:48:09.794 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:48:09.794 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:48:09.795 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:48:09.812 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:48:09.812 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:48:09.815 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:48:09.816 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 16:48:09.817 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:48:09.828 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:48:09.829 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:48:09.834 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:49:51.952 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:49:51.952 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:49:51.952 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:49:51.952 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:49:51.953 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:49:51.954 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:49:51.954 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:49:51.988 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:49:51.989 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:49:51.991 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:49:51.991 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 16:49:51.991 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:49:51.992 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:49:51.992 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:49:51.994 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:49:51.995 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-25 16:49:51.996 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:49:51.997 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:49:51.998 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:49:52.004 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:49:52.006 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:49:52.007 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:49:52.009 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:49:52.009 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:49:52.010 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:49:52.012 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 60
2020-05-25 16:49:52.012 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:49:52.012 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:49:52.012 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:49:52.015 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:49:52.018 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:49:52.022 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:49:52.024 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 60(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:49:52.033 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:49:52.255 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:49:52.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:49:52.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:49:52.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:49:52.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:49:52.265 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:49:52.266 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:49:52.269 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:49:52.270 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 16:49:52.271 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:49:52.281 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:49:52.282 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:49:52.304 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:50:37.220 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:50:37.221 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:50:37.222 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:50:37.222 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:50:37.222 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:50:37.222 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:50:37.257 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:50:37.257 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:50:37.259 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:50:37.259 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:50:37.259 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:50:37.259 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 38
2020-05-25 16:50:37.260 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:50:37.262 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:50:37.263 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 42
2020-05-25 16:50:37.263 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:50:37.264 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:50:37.264 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:50:37.268 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:50:37.268 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:50:37.268 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:50:37.268 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:50:37.269 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:50:37.270 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:50:37.271 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:50:37.272 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 52
2020-05-25 16:50:37.272 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:50:37.272 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:50:37.273 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:50:37.277 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:50:37.284 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:50:37.285 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), POST(String), 52(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:50:37.292 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:50:37.523 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:50:37.523 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:50:37.523 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:50:37.524 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:50:37.524 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:50:37.532 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:50:37.533 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:50:37.537 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:50:37.538 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 16:50:37.539 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:50:37.546 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:50:37.546 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:50:37.551 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:50.943 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:52:50.944 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:52:50.945 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:52:50.946 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:52:50.948 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=242, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 15:20:24), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-05-25 16:52:50.968 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-05-25 16:52:50.970 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:52:50.975 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:52:50.976 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:52:50.978 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:52:50.981 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:50.984 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 41
2020-05-25 16:52:50.985 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:52:50.998 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:50.999 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=242, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 15:20:24), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 41(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:51.010 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:52.075 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:52:52.075 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:52:52.075 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:52:52.076 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:52:52.077 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=242, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 15:20:24), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:52:52.096 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:52:52.098 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:52:52.102 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:52:52.103 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:52:52.106 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:52:52.108 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:52.110 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-25 16:52:52.111 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:52:52.121 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:52.124 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=242, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 15:20:24), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:52.135 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:55.236 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:54:55.236 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:54:55.238 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:54:55.237 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:54:55.246 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:54:55.246 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:54:55.259 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:54:55.259 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:54:55.261 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:54:55.262 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:54:55.265 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:54:55.265 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:54:55.266 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-25 16:54:55.265 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:54:55.266 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:54:55.266 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:54:55.266 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:54:55.267 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:54:55.268 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:54:55.269 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:54:55.270 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 16:54:55.270 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 33
2020-05-25 16:54:55.270 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:54:55.270 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:54:55.272 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:55.274 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:55.279 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:55.285 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:55.287 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:55.288 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:55.289 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:55.293 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:55.297 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:55.541 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:54:55.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:54:55.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:54:55.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:54:55.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:54:55.555 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:54:55.556 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:54:55.558 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:54:55.559 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 16:54:55.560 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:54:55.570 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:55.571 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:55.577 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:46.387 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:55:46.388 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:55:46.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:55:46.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:55:46.389 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:55:46.415 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:55:46.417 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:55:46.422 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:55:46.424 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:55:46.425 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:55:46.427 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:55:46.430 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-25 16:55:46.430 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:55:46.438 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:55:46.438 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:55:46.439 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:55:46.440 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:55:46.440 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:55:46.444 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:46.446 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 43(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:46.451 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:55:46.452 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:55:46.453 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:46.454 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:55:46.455 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 16:55:46.456 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:55:46.462 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:46.463 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:46.468 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:46.727 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:55:46.727 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:55:46.728 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:55:46.730 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:55:46.730 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:55:46.730 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:55:46.730 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:55:46.731 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:55:46.733 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:55:46.733 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:55:46.747 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:55:46.749 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:55:46.753 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:55:46.754 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:55:46.754 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:55:46.757 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 16:55:46.757 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:55:46.759 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:55:46.761 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 16:55:46.762 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:55:46.771 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:46.773 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 30(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:46.774 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:46.776 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:46.779 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:46.782 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:04.309 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:56:04.310 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:56:04.310 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:04.311 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:56:04.311 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:56:04.330 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:56:04.331 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:56:04.334 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:56:04.336 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:56:04.336 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:56:04.338 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:56:04.340 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 16:56:04.341 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:56:04.345 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:04.346 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 31(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:04.354 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:56:04.354 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:04.354 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:04.355 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:04.355 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:56:04.356 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:04.363 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:56:04.364 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:56:04.365 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:56:04.366 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 16:56:04.366 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:56:04.370 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:04.371 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:04.376 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:04.633 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:56:04.633 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:04.633 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:04.634 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:56:04.634 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:04.634 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:56:04.635 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:04.635 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:04.635 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:56:04.635 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:04.643 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:56:04.644 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:56:04.644 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:56:04.645 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:56:04.645 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:56:04.646 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 16:56:04.646 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:56:04.647 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:56:04.647 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 16:56:04.648 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:56:04.652 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:04.652 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:04.653 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:04.654 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:04.658 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:04.661 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:10.678 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:56:10.679 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:56:10.679 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:10.681 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:10.681 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:56:10.681 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:10.680 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:56:10.696 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:56:10.696 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:56:10.698 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:56:10.699 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:56:10.701 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:56:10.701 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 16:56:10.701 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:56:10.701 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:56:10.702 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 16:56:10.703 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:56:10.704 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:56:10.705 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:56:10.708 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:56:10.709 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:56:10.709 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:10.709 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:56:10.710 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:10.711 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:10.711 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:56:10.712 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:10.712 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 16:56:10.713 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:56:10.714 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:10.718 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:10.719 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:10.721 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:10.727 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:56:10.983 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:56:10.983 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:56:10.983 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:56:10.983 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:56:10.984 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:56:10.988 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:56:10.989 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:56:10.991 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:56:10.991 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-25 16:56:10.992 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:56:10.995 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:56:10.996 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:56:11.000 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:08.467 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:58:08.467 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:08.468 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:08.469 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:58:08.469 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:58:08.473 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:58:08.473 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:08.473 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:08.474 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:58:08.474 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:08.476 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:58:08.476 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:58:08.476 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:08.476 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:08.476 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:58:08.476 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:58:08.477 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:08.478 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:58:08.479 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 16:58:08.479 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:58:08.480 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:58:08.480 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:58:08.481 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:58:08.481 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:58:08.483 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:58:08.483 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:58:08.484 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 16:58:08.485 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:58:08.485 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:58:08.485 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:58:08.486 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:08.486 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:58:08.487 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:08.488 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 16:58:08.488 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:58:08.490 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:58:08.490 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:58:08.492 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:08.493 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:08.494 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:08.494 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:58:08.495 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 16:58:08.495 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:58:08.495 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:08.496 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:08.499 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:08.501 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:08.502 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:08.502 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:08.564 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:15.681 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:58:15.682 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:58:15.682 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:15.683 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:58:15.683 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:15.684 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:15.685 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:15.685 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:15.685 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:58:15.685 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:58:15.686 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:15.686 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:15.692 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:58:15.693 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:58:15.693 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:58:15.693 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:58:15.695 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:58:15.695 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:58:15.695 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 16:58:15.695 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:58:15.695 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:58:15.697 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:58:15.697 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:58:15.697 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:58:15.697 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 16:58:15.697 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:58:15.698 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:58:15.698 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:58:15.699 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:58:15.700 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:58:15.701 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 16:58:15.701 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:58:15.701 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:58:15.703 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 16:58:15.704 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:15.704 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:58:15.704 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:15.708 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:15.711 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:15.712 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:15.715 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:15.716 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:15.717 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:15.718 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:15.719 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:15.723 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:15.725 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:33.141 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 16:58:33.142 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 16:58:33.142 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:33.142 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 16:58:33.145 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 16:58:33.145 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 16:58:33.144 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 16:58:33.145 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:33.145 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:33.145 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 16:58:33.160 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 16:58:33.160 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:58:33.161 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 16:58:33.162 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 16:58:33.164 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 16:58:33.164 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 16:58:33.164 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 16:58:33.164 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 16:58:33.164 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 16:58:33.165 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 16:58:33.165 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 16:58:33.166 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:58:33.167 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 16:58:33.168 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 16:58:33.168 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:58:33.169 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 16:58:33.169 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 16:58:33.169 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 16:58:33.171 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 16:58:33.171 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 16:58:33.174 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 16:58:33.174 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 30
2020-05-25 16:58:33.174 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 16:58:33.178 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:33.179 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:33.183 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:33.185 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:33.184 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:33.187 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:33.187 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:33.190 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:33.190 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:33.191 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:33.193 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:33.196 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:39.344 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:01:39.345 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:01:39.345 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:39.345 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:01:39.346 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:01:39.346 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:01:39.346 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:01:39.346 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:39.346 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:39.347 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:39.348 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:39.348 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:01:39.348 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:39.369 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:01:39.370 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:01:39.371 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:01:39.372 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:01:39.374 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:01:39.374 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:01:39.374 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:01:39.374 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:01:39.375 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-25 17:01:39.375 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:01:39.375 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:01:39.375 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:01:39.376 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:01:39.376 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:01:39.376 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-25 17:01:39.377 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:01:39.377 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:01:39.377 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:01:39.378 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 17:01:39.378 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:01:39.379 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:01:39.381 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-25 17:01:39.381 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:01:39.391 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:39.392 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:39.393 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:39.393 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 35(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:39.396 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:39.397 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:39.399 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:39.399 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:39.399 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:39.402 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:39.403 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:39.407 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:42.655 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:01:42.656 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:01:42.656 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:42.656 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:01:42.657 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:01:42.661 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:01:42.661 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:01:42.661 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:01:42.662 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:01:42.662 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:42.663 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:01:42.663 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:01:42.663 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:01:42.666 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:01:42.667 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:01:42.668 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:01:42.670 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:01:42.672 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 17:01:42.672 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:01:42.674 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:01:42.674 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:01:42.675 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:01:42.675 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:01:42.676 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 17:01:42.676 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:01:42.676 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:01:42.677 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:01:42.678 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 17:01:42.678 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:01:42.685 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:01:42.685 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:01:42.687 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:01:42.688 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-25 17:01:42.688 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:42.688 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:01:42.689 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:42.691 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:42.693 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:42.697 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:42.697 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:42.698 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:42.699 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:42.700 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:01:42.701 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:01:42.708 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:01:42.712 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:36.334 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:02:36.335 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:02:36.336 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:02:36.336 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:36.336 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:02:36.336 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:02:36.337 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:36.338 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:36.338 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:36.360 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:02:36.362 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:02:36.363 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:02:36.364 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:02:36.366 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:02:36.367 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:02:36.368 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:02:36.369 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:02:36.369 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 33
2020-05-25 17:02:36.369 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:02:36.370 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:02:36.371 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:02:36.371 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:02:36.373 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 17:02:36.373 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:02:36.373 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:02:36.374 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 38
2020-05-25 17:02:36.374 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:02:36.374 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:02:36.375 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:02:36.378 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:02:36.380 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 44
2020-05-25 17:02:36.380 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:02:36.393 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:36.394 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:36.398 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:36.400 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 44(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:36.402 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:36.403 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:36.406 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:36.405 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 39(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:36.409 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:36.413 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 38(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:36.413 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:36.419 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:43.678 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:02:43.678 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:02:43.679 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:43.679 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:02:43.680 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:02:43.681 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:02:43.681 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:43.682 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:43.682 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:02:43.682 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:43.688 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:02:43.688 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:02:43.688 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:43.688 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:02:43.689 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:43.689 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:02:43.689 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:02:43.689 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:02:43.690 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:43.693 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:02:43.690 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:02:43.694 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:02:43.697 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:02:43.697 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:02:43.698 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:02:43.699 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:02:43.701 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:02:43.701 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:02:43.702 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:02:43.702 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:02:43.703 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:02:43.704 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 17:02:43.704 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:02:43.704 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:02:43.704 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:02:43.705 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:02:43.706 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 17:02:43.706 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:02:43.711 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:02:43.711 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:02:43.713 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:02:43.714 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 17:02:43.714 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:02:43.715 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:43.716 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:43.720 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:43.721 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:43.721 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:43.724 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:43.725 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:43.727 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:43.727 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:02:43.728 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:02:43.730 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:02:43.734 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:32.208 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:03:32.208 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:32.209 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:03:32.210 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:03:32.218 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:03:32.218 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:03:32.219 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:32.219 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:32.219 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:32.219 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:32.220 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:03:32.220 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:03:32.220 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:32.220 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:32.228 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:03:32.229 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:03:32.231 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:03:32.232 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:03:32.233 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:03:32.241 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:03:32.242 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:03:32.244 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:32.245 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:32.246 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:03:32.247 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:03:32.247 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:03:32.248 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:03:32.248 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:03:32.249 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:03:32.250 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:32.250 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:03:32.251 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-25 17:03:32.251 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:03:32.251 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:03:32.251 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:03:32.252 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 17:03:32.252 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:03:32.253 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:03:32.254 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-25 17:03:32.254 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:03:32.263 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:32.264 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 43(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:32.266 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:32.267 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:32.269 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:32.269 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:32.270 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:32.272 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:32.276 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:41.787 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:03:41.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:03:41.787 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:03:41.787 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:41.787 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:03:41.788 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:03:41.789 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:41.797 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:03:41.798 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:03:41.799 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:03:41.800 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 17:03:41.800 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:03:41.800 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:03:41.800 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:03:41.801 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:03:41.801 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:03:41.802 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:03:41.802 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:03:41.803 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:03:41.803 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:03:41.803 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 17:03:41.804 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:03:41.804 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:03:41.806 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 17:03:41.806 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:41.807 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:03:41.807 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:41.812 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:41.814 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:41.814 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 16(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:41.817 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:41.818 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:41.819 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:41.824 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:03:42.028 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:03:42.028 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:03:42.028 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:03:42.029 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:03:42.029 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:03:42.033 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:03:42.034 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:03:42.035 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:03:42.036 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-25 17:03:42.037 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:03:42.046 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:03:42.047 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:03:42.051 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:09.246 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:04:09.248 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:04:09.248 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:09.248 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:04:09.248 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:04:09.258 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:04:09.259 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:04:09.264 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:04:09.265 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:04:09.266 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:04:09.269 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:04:09.271 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 17:04:09.272 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:04:09.277 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:04:09.277 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:09.278 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:09.279 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:04:09.279 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:09.284 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:09.286 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 25(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:09.297 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:04:09.299 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:04:09.302 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:04:09.302 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:09.302 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 17:04:09.303 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:04:09.313 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:09.314 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 25(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:09.319 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:09.579 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:04:09.580 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:09.581 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:09.581 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:04:09.582 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:04:09.582 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:09.582 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:09.582 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:09.583 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:04:09.583 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:09.591 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:04:09.592 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:04:09.594 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:04:09.595 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 17:04:09.596 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:04:09.610 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:04:09.611 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:04:09.613 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:04:09.614 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-25 17:04:09.615 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:04:09.615 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:09.616 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:09.622 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:09.624 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:09.625 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:09.630 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:12.755 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:04:12.755 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:04:12.756 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:12.756 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:04:12.757 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:12.758 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:12.759 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:04:12.759 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:12.759 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:04:12.759 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:12.768 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:04:12.769 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:04:12.769 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:04:12.769 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:04:12.771 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:04:12.771 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 17:04:12.772 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:04:12.772 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:04:12.773 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:04:12.773 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:04:12.774 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:04:12.775 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:04:12.776 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:04:12.777 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 17:04:12.778 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:04:12.778 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:12.778 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:04:12.779 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:12.780 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-25 17:04:12.780 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:04:12.784 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:12.784 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:12.785 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:12.789 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:12.790 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:12.790 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 25(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:12.796 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:04:13.060 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:04:13.061 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:04:13.061 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:04:13.061 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:04:13.062 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:04:13.068 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:04:13.068 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:04:13.071 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:04:13.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 17:04:13.072 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:04:13.077 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:04:13.078 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 12(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:04:13.082 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:13.819 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:07:13.819 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:07:13.819 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:07:13.820 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:13.819 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:13.819 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:07:13.820 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:13.820 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:13.820 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:13.821 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:13.855 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:07:13.857 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:07:13.860 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:07:13.861 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:07:13.862 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-25 17:07:13.862 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:07:13.862 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:07:13.864 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:07:13.865 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:07:13.865 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:07:13.866 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:07:13.866 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:07:13.867 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:07:13.867 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 48
2020-05-25 17:07:13.868 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:07:13.869 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:07:13.871 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 52
2020-05-25 17:07:13.871 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:07:13.872 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:13.873 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:13.880 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:13.889 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:13.890 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 48(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:13.895 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:13.896 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:13.897 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 52(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:13.903 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:14.121 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:07:14.121 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:14.121 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:14.122 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:07:14.122 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:14.136 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:07:14.137 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:07:14.139 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:07:14.140 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 17:07:14.141 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:07:14.151 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:14.152 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:14.157 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:47.333 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:07:47.334 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:07:47.335 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:47.336 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:07:47.336 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:07:47.335 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:07:47.336 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:47.336 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:07:47.336 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:47.337 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:47.337 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:47.338 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:07:47.338 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:07:47.338 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:47.338 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:47.370 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:07:47.372 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:07:47.375 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:07:47.376 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:07:47.376 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:07:47.377 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:07:47.378 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:07:47.379 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:07:47.379 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:07:47.380 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:07:47.380 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 44
2020-05-25 17:07:47.381 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:07:47.381 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:07:47.381 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 48
2020-05-25 17:07:47.383 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:07:47.383 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:07:47.384 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 48
2020-05-25 17:07:47.384 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:07:47.398 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:47.400 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 44(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:47.404 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:47.406 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 48(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:47.409 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:47.410 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 48(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:47.414 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:47.417 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:47.417 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:07:47.640 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:07:47.640 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:07:47.641 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:07:47.641 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:07:47.642 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:07:47.651 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:07:47.652 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:07:47.654 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:07:47.656 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 17:07:47.656 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:07:47.666 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:07:47.667 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:07:47.672 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:08:29.468 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:08:29.469 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:08:29.470 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:08:29.470 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:08:29.470 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:08:29.471 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:08:29.471 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:08:29.471 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:08:29.471 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:08:29.492 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:08:29.494 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:08:29.497 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:08:29.498 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:08:29.499 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:08:29.501 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:08:29.502 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:08:29.502 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:08:29.502 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:08:29.503 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:08:29.503 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-25 17:08:29.503 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:08:29.504 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:08:29.504 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:08:29.506 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 37
2020-05-25 17:08:29.506 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:08:29.507 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-25 17:08:29.508 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:08:29.518 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:08:29.520 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:08:29.526 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:08:29.527 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:08:29.529 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 37(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:08:29.533 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:08:29.534 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 39(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:08:29.536 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:08:29.540 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:08:29.769 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:08:29.770 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:08:29.770 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:08:29.771 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:08:29.771 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:08:29.777 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:08:29.778 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:08:29.779 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:08:29.780 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 17:08:29.782 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:08:29.789 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:08:29.791 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:08:29.797 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:10:40.688 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:10:40.689 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:10:40.690 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:10:40.690 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:10:40.689 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:10:40.690 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:10:40.690 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:10:40.690 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:10:40.691 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:10:40.691 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:10:40.691 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:10:40.691 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:10:40.692 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:10:40.691 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:10:40.692 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:10:40.717 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:10:40.719 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:10:40.720 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:10:40.721 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:10:40.723 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:10:40.725 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-25 17:10:40.726 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:10:40.726 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:10:40.726 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:10:40.727 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:10:40.727 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:10:40.728 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:10:40.731 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:10:40.732 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:10:40.732 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 42
2020-05-25 17:10:40.734 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:10:40.735 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 47
2020-05-25 17:10:40.736 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:10:40.740 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:10:40.741 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:10:40.748 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:10:40.756 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:10:40.757 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 47(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:10:40.759 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:10:40.761 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:10:40.764 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:10:40.767 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:10:40.842 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:10:40.843 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:10:40.843 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:10:40.845 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:10:40.845 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:10:40.859 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:10:40.860 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:10:40.863 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:10:40.864 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-25 17:10:40.865 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:10:40.876 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:10:40.877 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:10:40.885 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:11:19.970 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 17:11:19.971 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:11:19.972 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:11:19.972 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 17:11:19.973 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 17:11:19.984 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 17:11:19.985 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 17:11:19.987 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 17:11:19.989 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 17:11:19.990 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 17:11:20.000 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:11:20.002 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:11:20.009 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:10.309 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 17:17:10.310 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:17:10.311 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:17:10.311 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 17:17:10.311 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 17:17:10.322 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 17:17:10.323 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 17:17:10.325 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 17:17:10.326 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 17:17:10.326 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 17:17:10.332 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:10.333 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:10.347 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:10.557 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:17:10.557 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:17:10.557 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:17:10.558 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:17:10.558 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:17:10.563 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:17:10.564 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:17:10.566 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:17:10.566 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:17:10.567 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:17:10.568 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:17:10.569 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 17:17:10.570 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:17:10.574 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:10.575 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:10.581 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:10.818 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:17:10.819 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:17:10.819 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:17:10.819 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:17:10.820 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:17:10.825 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:17:10.826 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:17:10.827 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:17:10.828 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:17:10.829 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:17:10.833 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:17:10.834 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:17:10.834 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:17:10.834 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:17:10.835 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:17:10.836 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:10.837 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 10(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:10.839 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:17:10.839 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:17:10.842 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:17:10.842 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 17:17:10.843 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:17:10.844 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:17:10.844 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:17:10.847 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:17:10.847 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 17:17:10.848 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:17:10.849 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:10.850 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:10.851 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:10.853 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:10.854 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:10.854 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:10.859 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:20.578 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:20:20.579 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:20:20.579 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:20:20.580 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:20:20.580 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:20:20.581 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:20:20.581 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:20:20.581 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:20:20.581 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:20:20.581 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:20:20.582 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:20:20.583 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:20:20.596 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:20:20.597 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:20:20.598 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:20:20.599 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:20:20.600 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:20:20.601 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:20:20.601 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:20:20.601 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:20:20.601 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:20:20.601 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:20:20.601 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 21
2020-05-25 17:20:20.602 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:20:20.602 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:20:20.603 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:20:20.605 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:20:20.605 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:20:20.606 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:20:20.606 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:20:20.606 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-25 17:20:20.607 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:20:20.608 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:20:20.608 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-25 17:20:20.609 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:20:20.620 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:20.620 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:20.622 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:20.622 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:20.624 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:20.624 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:20.625 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:20.627 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:20.628 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 28(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:20.630 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:20.631 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:20.635 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:01.501 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:23:01.502 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:23:01.502 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:23:01.502 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:23:01.502 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:23:01.509 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:23:01.510 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:23:01.513 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:23:01.513 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:23:01.514 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:23:01.515 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:23:01.516 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 17:23:01.516 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:23:01.521 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:01.521 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:01.536 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:33.902 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:23:33.902 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:23:33.903 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:23:33.910 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:23:33.910 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:23:33.911 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:23:33.912 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 17:23:33.912 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:23:33.912 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:23:33.912 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:23:33.914 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:23:33.915 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:23:33.916 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:23:33.918 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:33.919 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:33.923 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:33.925 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:23:33.925 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:23:33.927 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:23:33.927 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 17:23:33.927 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:33.928 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:23:33.928 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:33.933 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:33.932 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:33.934 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 12(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:33.939 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:48.602 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /user/login
2020-05-25 17:24:48.602 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:24:48.603 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:48.603 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UserController.login
2020-05-25 17:24:48.603 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-25 17:24:48.613 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-05-25 17:24:48.613 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: whzs(String)
2020-05-25 17:24:48.618 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 17:24:48.619 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-25 17:24:48.620 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}
2020-05-25 17:24:48.626 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:48.627 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=whzs, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"user":{"nickname":"染柒","password":"","sex":1,"userEmail":"1667669979@qq.com","userId":3,"username":"whzs"},"token":"0A3CF3F5E1048E0E6833F3ACF541E81A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:48.634 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:48.852 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:24:48.853 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:24:48.853 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:48.853 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:24:48.853 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:24:48.859 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:24:48.859 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:24:48.861 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:24:48.862 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:24:48.862 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:24:48.863 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:24:48.865 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 17:24:48.865 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:24:48.871 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:48.872 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:48.877 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:49.091 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:24:49.092 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:49.092 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:49.092 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:24:49.092 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:49.097 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:24:49.098 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:24:49.100 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:24:49.101 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 17:24:49.101 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:24:49.101 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:24:49.101 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:49.102 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:49.102 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:24:49.102 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:49.105 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:24:49.105 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:49.106 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:49.106 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:24:49.106 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:49.112 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:49.113 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:49.115 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:24:49.116 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:24:49.118 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:24:49.118 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:24:49.118 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-25 17:24:49.119 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:24:49.119 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:49.119 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:24:49.120 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:24:49.121 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 17:24:49.121 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:24:49.123 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:49.124 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:49.128 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:49.128 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:49.129 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:49.135 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:52.227 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 17:24:52.227 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:52.228 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:52.228 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 17:24:52.228 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:52.255 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:24:52.256 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:24:52.257 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:24:52.258 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-25 17:24:52.264 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 17:24:52.271 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:52.271 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:52.276 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:52.728 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 17:24:52.728 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:52.728 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:52.728 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 17:24:52.729 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:52.735 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 17:24:52.736 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 17:24:52.740 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 17:24:52.743 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 17:24:52.746 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 17:24:52.752 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:52.753 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:52.757 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:53.295 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /about/read
2020-05-25 17:24:53.296 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:53.296 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:53.297 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AboutController.read
2020-05-25 17:24:53.298 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:53.316 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-05-25 17:24:53.317 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 17:24:53.326 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 17:24:53.328 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-05-25 17:24:53.329 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 关于染柒(String), <p>sdf</p>(String), 12(Integer), 1(Integer), 14(Integer)
2020-05-25 17:24:53.334 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-05-25 17:24:53.338 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-25 17:24:53.341 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":12,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-25 15:10:00","version":14},"msg":"操作成功！"}
2020-05-25 17:24:53.347 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:53.348 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":12,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-25 15:10:00","version":14},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:53.353 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:53.810 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-25 17:24:53.810 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:53.810 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:53.810 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-25 17:24:53.811 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:53.817 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-25 17:24:53.817 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-25 17:24:53.819 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-25 17:24:53.820 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 17:24:53.820 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-25 17:24:53.825 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:53.826 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:53.839 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:54.263 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 17:24:54.264 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:24:54.264 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:54.264 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 17:24:54.265 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:24:54.269 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:24:54.270 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:24:54.271 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:24:54.271 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-25 17:24:54.272 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 17:24:54.276 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:54.276 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:54.281 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:24:54.775 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:24:54.776 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:24:54.776 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:24:54.776 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:24:54.776 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:24:54.780 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:24:54.780 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:24:54.791 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:24:54.792 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:24:54.793 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:24:54.794 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:24:54.795 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 17:24:54.795 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:24:54.800 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:24:54.801 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:24:54.805 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:21.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:30:21.542 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:30:21.542 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:30:21.542 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:30:21.543 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:30:21.544 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:30:21.552 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:30:21.552 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:30:21.553 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:30:21.554 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:30:21.554 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 17:30:21.554 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:30:21.554 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:30:21.554 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:30:21.555 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:30:21.578 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:30:21.578 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:30:21.580 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 38
2020-05-25 17:30:21.580 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:30:21.581 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:30:21.581 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:30:21.582 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:30:21.583 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:21.583 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:21.584 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 42
2020-05-25 17:30:21.584 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:30:21.586 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:21.587 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:21.587 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:21.592 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:21.592 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:21.593 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 42(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":242,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 15:20:24"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:21.599 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:21.774 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:30:21.774 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:30:21.775 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:21.775 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:30:21.775 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:30:21.780 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:30:21.781 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:30:21.783 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:30:21.784 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 17:30:21.784 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:30:21.788 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:21.788 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:21.796 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:25.551 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 17:30:25.551 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:30:25.552 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:25.552 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 17:30:25.552 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 17:30:25.555 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 17:30:25.556 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 17:30:25.559 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:30:25.564 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 17:30:25.564 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 243(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 9(Integer)
2020-05-25 17:30:25.566 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:30:25.585 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 17:30:25.586 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 17:30:25.587 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:30:25.592 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 41
2020-05-25 17:30:25.593 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":243,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 17:30:25.598 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:25.598 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 41(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":243,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:25.604 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:29.763 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:30:29.763 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:30:29.763 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:29.763 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:30:29.764 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:30:29.769 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:30:29.769 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:30:29.771 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:30:29.772 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:30:29.772 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:30:29.773 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:30:29.774 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 17:30:29.779 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":243,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:30:25"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:30:29.784 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:29.784 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":243,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:30:25"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:29.798 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:31.860 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 17:30:31.861 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:30:31.861 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:30:31.861 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 17:30:31.861 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 17:30:31.867 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 17:30:31.867 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 17:30:31.868 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:30:31.869 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 17:30:31.873 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 244(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 10(Integer)
2020-05-25 17:30:31.875 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:30:31.876 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 17:30:31.876 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 17:30:31.878 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:30:31.883 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-25 17:30:31.883 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":244,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 17:30:31.888 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:31.889 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":244,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:31.894 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:29.520 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 17:31:29.521 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:29.522 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:29.522 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 17:31:29.523 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 17:31:29.529 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 17:31:29.530 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 17:31:29.531 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:29.532 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 17:31:29.533 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 245(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 11(Integer)
2020-05-25 17:31:29.536 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:31:29.537 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 17:31:29.538 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 17:31:29.539 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:29.544 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:31:29.544 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":245,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 17:31:29.549 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:29.550 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":245,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:29.556 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:34.961 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:31:34.961 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 17:31:34.961 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:34.961 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:31:34.962 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:34.970 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 17:31:34.971 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 17:31:34.972 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:31:34.973 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:34.973 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:31:34.974 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 17:31:34.974 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:31:34.975 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 17:31:34.975 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 246(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 12(Integer)
2020-05-25 17:31:34.975 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:31:34.977 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:31:34.978 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 17:31:34.978 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 17:31:34.981 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:34.981 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:34.982 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:34.985 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:31:34.986 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 17:31:34.988 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:34.991 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:34.991 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 24(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:34.998 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:35.263 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:31:35.264 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:35.264 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:35.265 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:31:35.265 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:35.277 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:31:35.278 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:35.278 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:35.278 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:31:35.279 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:35.279 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:31:35.280 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:31:35.282 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:31:35.283 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-25 17:31:35.284 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:31:35.285 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:31:35.286 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:31:35.287 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:31:35.288 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 17:31:35.288 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:31:35.289 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:35.290 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:35.293 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:35.293 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:35.294 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:35.299 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:42.342 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:31:42.343 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:31:42.343 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:42.344 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:31:42.344 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:31:42.354 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:31:42.355 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:31:42.357 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:31:42.358 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:31:42.359 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:31:42.359 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:31:42.361 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-25 17:31:42.361 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:31:42.367 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:42.368 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:42.381 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:44.187 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:31:44.187 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:31:44.187 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:44.188 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:31:44.188 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:44.189 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:44.190 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-25 17:31:44.190 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:44.190 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-25 17:31:44.190 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:44.193 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:31:44.194 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:31:44.197 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:31:44.198 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:31:44.199 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:31:44.201 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:31:44.201 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-25 17:31:44.201 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-25 17:31:44.202 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 17:31:44.202 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:31:44.203 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-25 17:31:44.203 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 17:31:44.203 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 17:31:44.203 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 17:31:44.203 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-25 17:31:44.205 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 17:31:44.205 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-25 17:31:44.206 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 17:31:44.212 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:44.212 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:34"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:44.214 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:44.215 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:44.217 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:44.218 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:44.218 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":246,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:44.221 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:44.225 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:44.423 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-25 17:31:44.423 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:44.424 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:44.424 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-25 17:31:44.424 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 17:31:44.429 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-25 17:31:44.429 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 17:31:44.431 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-25 17:31:44.432 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 9
2020-05-25 17:31:44.433 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-25 17:31:44.438 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:44.439 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:44.443 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:46.964 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263816317509591040
2020-05-25 17:31:46.965 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 17:31:46.965 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:31:46.966 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-25 17:31:46.966 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263816317509591040]
2020-05-25 17:31:46.973 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 17:31:46.974 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263816317509591040(String)
2020-05-25 17:31:46.975 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:46.976 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 17:31:46.976 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试12(String), <p>请问</p>(String), 343(Integer), 247(Integer), 345(Integer), 7(Integer), 0(Integer), 1263816317509591040(String), 13(Integer)
2020-05-25 17:31:46.978 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:31:46.979 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 17:31:46.979 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-25 17:31:46.982 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:46.988 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-25 17:31:46.988 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}
2020-05-25 17:31:46.993 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:46.994 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263816317509591040(String), [1263816317509591040](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:46.999 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:34:39.530 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 17:34:39.530 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 17:34:39.531 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 17:34:39.531 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 17:34:39.531 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-25 17:34:39.536 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-25 17:34:39.537 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:34:39.539 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 17:34:39.539 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 17:34:39.540 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:34:39.542 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:34:39.544 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-25 17:34:39.545 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 17:34:39.551 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:34:39.552 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:34:39.566 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:33.307 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-25 20:59:33.312 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 20:59:33.312 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:33.313 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-25 20:59:33.313 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-25 20:59:33.333 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 20:59:33.336 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 20:59:33.350 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 20:59:33.362 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 55
2020-05-25 20:59:33.363 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":40002,"msg":"用户名或密码错误！"}
2020-05-25 20:59:33.370 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:33.371 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 55(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-05-25 20:59:33.383 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:37.255 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-25 20:59:37.255 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 20:59:37.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:37.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-25 20:59:37.256 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-25 20:59:37.263 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 20:59:37.264 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 20:59:37.265 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 20:59:37.266 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 20:59:37.267 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"24D7164B5A799817E72711F9B174F7BE"},"msg":"操作成功！"}
2020-05-25 20:59:37.273 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:37.273 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 11(Long), {"code":20000,"data":{"token":"24D7164B5A799817E72711F9B174F7BE"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:59:37.278 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:37.498 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-25 20:59:37.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 20:59:37.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:37.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-25 20:59:37.499 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 20:59:37.500 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-25 20:59:37.501 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 20:59:37.508 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:37.509 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:59:37.514 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:37.594 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 20:59:37.594 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 20:59:37.594 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:37.595 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 20:59:37.595 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 20:59:37.602 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 20:59:37.602 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 20:59:37.605 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 20:59:37.606 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-25 20:59:37.606 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 20:59:37.612 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:37.613 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:59:37.620 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:42.709 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/listBack
2020-05-25 20:59:42.709 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 20:59:42.709 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:42.710 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.list
2020-05-25 20:59:42.710 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 20:59:42.718 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-05-25 20:59:42.718 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 20:59:42.720 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-05-25 20:59:42.720 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 20:59:42.721 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"enable":0,"typeBlogCount":0,"typeId":4,"typeName":"linux"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 20:59:42.727 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:42.728 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"enable":0,"typeBlogCount":0,"typeId":4,"typeName":"linux"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:59:42.734 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:59:45.084 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 20:59:45.084 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 20:59:45.085 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 20:59:45.085 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 20:59:45.085 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 20:59:45.094 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 20:59:45.095 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 20:59:45.097 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 20:59:45.098 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 20:59:45.099 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 20:59:45.100 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 20:59:45.102 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-25 20:59:45.102 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 20:59:45.109 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:59:45.110 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:59:45.116 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:00:06.881 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:00:06.882 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:00:06.882 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:00:06.882 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:00:06.882 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6d233678]
2020-05-25 21:00:06.913 ERROR [http-nio-8090-exec-9]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:00:06.925 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:00:06.926 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6d233678](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":345,"blogComment":0,"blogContent":"<p>请问</p>","blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:00:06.932 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:00:06.939 ERROR [http-nio-8090-exec-9]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:00:06.945 ERROR [http-nio-8090-exec-9]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:00:06.945 ERROR [http-nio-8090-exec-9]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:03:05.781 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:03:05.781 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:03:05.782 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:03:05.782 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:03:05.782 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@36c806d]
2020-05-25 21:03:05.787 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:05.804 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:03:05.805 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@36c806d](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:03:05.811 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:03:05.813 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:05.816 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:05.817 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:03:10.477 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-25 21:03:10.478 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:03:10.478 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:03:10.479 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-25 21:03:10.479 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:03:10.480 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-25 21:03:10.480 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 21:03:10.489 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:03:10.489 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at com.whz.shiro.service.impl.UserServiceImpl.register(UserServiceImpl.java:74)
	at com.whz.shiro.controller.UserController.register(UserController.java:136)
	at com.whz.shiro.controller.UserController$$FastClassBySpringCGLIB$$c688f8aa.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UserController$$EnhancerBySpringCGLIB$$e0a955ad.register(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
(String), GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:03:10.495 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:03:10.664 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 21:03:10.665 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:03:10.665 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:03:10.665 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 21:03:10.665 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:03:10.672 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 21:03:10.673 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 21:03:10.674 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 21:03:10.674 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-25 21:03:10.675 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 21:03:10.688 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:03:10.689 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:03:10.695 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:03:10.969 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 21:03:10.969 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:03:10.970 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:03:10.970 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 21:03:10.970 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 21:03:10.977 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 21:03:10.977 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 21:03:10.979 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 21:03:10.980 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 21:03:10.980 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 21:03:10.982 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 21:03:10.984 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 21:03:10.984 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 21:03:10.991 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:03:10.992 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:03:10.998 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:03:20.288 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:03:20.289 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:03:20.289 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:03:20.289 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:03:20.290 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@50def03e]
2020-05-25 21:03:20.295 ERROR [http-nio-8090-exec-8]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:20.305 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:03:20.306 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@50def03e](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"24D7164B5A799817E72711F9B174F7BE"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:03:20.311 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:03:20.313 ERROR [http-nio-8090-exec-8]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:20.317 ERROR [http-nio-8090-exec-8]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:03:20.318 ERROR [http-nio-8090-exec-8]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:19:55.909 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:19:55.911 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:19:55.912 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:19:55.913 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:19:55.913 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d03fde7]
2020-05-25 21:19:55.930 ERROR [http-nio-8090-exec-5]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:19:55.953 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:19:55.954 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d03fde7](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:19:55.960 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:19:55.962 ERROR [http-nio-8090-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:19:55.966 ERROR [http-nio-8090-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:19:55.966 ERROR [http-nio-8090-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:21:28.892 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:21:28.894 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:21:28.894 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:21:28.895 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:21:28.896 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@70b18727]
2020-05-25 21:21:28.907 ERROR [http-nio-8090-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:21:28.920 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:21:28.921 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@70b18727](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:21:28.930 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:21:28.932 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:21:28.938 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:21:28.939 ERROR [http-nio-8090-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:27:44.070 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:27:44.071 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:27:44.071 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:27:44.071 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:27:44.072 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3143cbd1]
2020-05-25 21:27:44.077 ERROR [http-nio-8090-exec-7]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:27:44.090 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:27:44.091 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3143cbd1](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"enable":0,"typeBlogCount":0,"typeId":4,"typeName":"linux"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:27:44.095 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:27:44.097 ERROR [http-nio-8090-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$67f0bd4f.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:27:44.100 ERROR [http-nio-8090-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:27:44.101 ERROR [http-nio-8090-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:28:09.875 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-25 21:28:09.917 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-25 21:28:16.749 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 9308 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-25 21:28:16.752 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 21:28:16.753 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-25 21:28:18.136 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$334fad16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.181 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$75e4176b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.200 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5cbbbbad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.205 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-25 21:28:18.255 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:18.288 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.547 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-25 21:28:19.547 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.600 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.873 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.879 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.885 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.889 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.890 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.893 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.894 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.896 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.898 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.929 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:19.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-25 21:28:20.263 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-25 21:28:20.282 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-25 21:28:20.283 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-25 21:28:20.283 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-25 21:28:20.285 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-25 21:28:20.285 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-25 21:28:20.286 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-25 21:28:20.293 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-25 21:28:20.568 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-25 21:28:20.568 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3777 ms
2020-05-25 21:28:21.867 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-25 21:28:21.887 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-25 21:28:21.889 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.721 seconds (JVM running for 7.104)
2020-05-25 21:29:10.354 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-25 21:29:10.354 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-25 21:29:10.394 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 40 ms
2020-05-25 21:29:16.698 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-25 21:29:16.700 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:29:16.700 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:29:16.702 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-25 21:29:16.702 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-25 21:29:16.733 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 21:29:16.756 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 21:29:16.780 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 21:29:16.785 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 87
2020-05-25 21:29:16.787 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"03CDC0E2AE2A3038945D6333A9886270"},"msg":"操作成功！"}
2020-05-25 21:29:16.790 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:29:16.793 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 87(Long), {"code":20000,"data":{"token":"03CDC0E2AE2A3038945D6333A9886270"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:29:16.799 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:29:17.155 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-25 21:29:17.156 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:29:17.157 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:29:17.158 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-25 21:29:17.158 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:29:17.159 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-25 21:29:17.166 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 21:29:17.172 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:29:17.174 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:29:17.180 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:29:17.398 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 21:29:17.400 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:29:17.400 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:29:17.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 21:29:17.401 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:29:17.406 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 21:29:17.407 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 21:29:17.412 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 21:29:17.413 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-25 21:29:17.417 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 21:29:17.420 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:29:17.421 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:29:17.426 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:29:17.628 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 21:29:17.629 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:29:17.629 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:29:17.629 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 21:29:17.629 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 21:29:17.664 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 21:29:17.665 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 21:29:17.673 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 21:29:17.675 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 21:29:17.675 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 21:29:17.678 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 21:29:17.680 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 52
2020-05-25 21:29:17.685 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 21:29:17.688 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:29:17.689 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 52(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:29:17.696 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:29:22.251 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:29:22.252 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:29:22.252 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:29:22.253 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:29:22.253 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7a2f8b39]
2020-05-25 21:29:22.267 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:29:22.272 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:29:22.273 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7a2f8b39](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-25 21:29:22.277 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:29:22.284 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:29:22.290 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:29:22.290 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:43:03.761 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-25 21:43:03.762 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:43:03.762 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:43:03.763 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-25 21:43:03.764 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:43:03.765 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-25 21:43:03.765 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-25 21:43:03.770 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:43:03.772 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:43:03.784 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-25 21:43:03.922 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:43:03.923 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:43:03.923 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-25 21:43:03.923 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-25 21:43:03.928 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 21:43:03.930 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 21:43:03.932 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 21:43:03.933 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 21:43:03.933 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 21:43:03.933 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 11
2020-05-25 21:43:03.934 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-25 21:43:03.937 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:43:03.938 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:43:03.942 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-25 21:43:03.943 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:43:03.943 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 21:43:03.944 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 21:43:03.946 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 21:43:03.949 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-25 21:43:03.949 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-25 21:43:03.953 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:43:03.954 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 21:43:03.960 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:43:08.083 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-25 21:43:08.084 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-25 21:43:08.084 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-25 21:43:08.084 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-25 21:43:08.084 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3509375d]
2020-05-25 21:43:08.092 ERROR [http-nio-8090-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:43:08.100 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 21:43:08.101 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3509375d](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-25 21:43:08.107 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 21:43:08.109 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ad1382a3.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:43:08.110 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-25 21:43:08.111 ERROR [http-nio-8090-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-25 21:48:39.294 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-25 21:48:39.300 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
