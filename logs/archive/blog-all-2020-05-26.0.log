2020-05-26 13:34:07.629 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 14960 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 13:34:07.638 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 13:34:07.640 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 13:34:09.900 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$e717f9f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:09.948 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:09.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$29ac644e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:09.962 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$10840890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:09.965 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 13:34:10.018 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:10.032 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:10.057 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:12.209 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 13:34:12.210 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:12.381 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.107 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.150 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.160 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.166 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.173 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.176 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.183 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.188 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.294 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:13.370 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 13:34:14.088 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 13:34:14.109 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 13:34:14.111 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 13:34:14.113 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 13:34:14.115 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 13:34:14.116 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 13:34:14.117 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 13:34:14.135 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 13:34:14.782 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 13:34:14.783 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7092 ms
2020-05-26 13:34:18.230 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 13:34:18.279 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 13:34:18.288 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 11.289 seconds (JVM running for 13.748)
2020-05-26 13:43:48.331 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 13:43:48.332 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 13:43:48.367 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 34 ms
2020-05-26 13:43:48.432 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /link/list
2020-05-26 13:43:48.432 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/getAdmin
2020-05-26 13:43:48.435 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:43:48.435 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:43:48.436 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:43:48.432 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/recomRead
2020-05-26 13:43:48.437 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:43:48.438 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:43:48.438 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:43:48.443 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getAdmin
2020-05-26 13:43:48.445 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:43:48.446 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.LinkController.list
2020-05-26 13:43:48.448 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:43:48.447 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.recomRead
2020-05-26 13:43:48.449 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:43:48.528 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-26 13:43:48.529 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-05-26 13:43:48.528 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-05-26 13:43:48.633 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-26 13:43:48.633 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-05-26 13:43:48.633 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-05-26 13:43:48.685 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:43:48.686 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:43:48.687 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:43:48.688 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:43:48.689 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-26 13:43:48.737 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-26 13:43:48.745 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LinkMapper.getAll.debug:159 -<==      Total: 4
2020-05-26 13:43:48.745 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-05-26 13:43:48.747 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 315
2020-05-26 13:43:48.747 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 315
2020-05-26 13:43:48.747 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 315
2020-05-26 13:43:48.773 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-26 13:43:48.778 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:43:48.792 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:43:48.795 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:43:48.797 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:43:48.801 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:43:48.806 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 121
2020-05-26 13:43:48.905 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 13:43:48.909 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}
2020-05-26 13:43:48.918 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:43:48.921 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:43:48.915 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}
2020-05-26 13:43:48.925 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 315(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","id":2,"name":"染柒","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:43:48.935 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:43:48.938 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 315(Long), {"code":20000,"data":[{"createdTime":"2020-05-24 15:55:00","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com/","updateTime":"2020-05-24 16:29:31"},{"createdTime":"2020-05-24 15:55:20","linkId":2,"linkName":"GIT","linkUrl":"https://git-scm.com/","updateTime":"2020-05-24 16:33:32"},{"createdTime":"2020-05-24 16:32:38","linkId":3,"linkName":"CSDN","linkUrl":"https://www.csdn.net/","updateTime":"2020-05-24 16:32:38"},{"createdTime":"2020-05-24 16:33:08","linkId":4,"linkName":"Vue","linkUrl":"https://cn.vuejs.org/","updateTime":"2020-05-24 16:33:08"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:43:48.939 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:43:48.943 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 315(Long), {"code":20000,"data":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:43:48.944 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:43:48.947 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 121(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:43:48.962 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:43:48.963 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:43:48.963 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:43:48.963 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:43:59.270 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:43:59.272 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:43:59.272 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:43:59.273 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:43:59.275 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-05-26 13:43:59.287 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-05-26 13:43:59.289 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:43:59.302 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:43:59.304 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:43:59.306 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:43:59.308 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:43:59.313 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-26 13:43:59.314 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:43:59.321 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:43:59.323 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 43(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:43:59.332 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:01.158 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:01.159 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:01.160 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:01.161 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:01.161 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2020-05-26 13:44:01.168 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-05-26 13:44:01.169 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:01.177 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:01.179 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:01.180 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:01.182 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:01.186 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-26 13:44:01.186 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:01.194 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:01.196 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:01.203 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:02.570 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:02.571 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:02.572 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:02.572 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:02.573 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=blog_read, sortMethod=desc)]
2020-05-26 13:44:02.585 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-05-26 13:44:02.587 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:02.599 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:02.602 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:02.604 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:02.607 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:02.611 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 41
2020-05-26 13:44:02.613 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:02.623 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:02.627 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 41(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:02.636 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:03.298 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:03.299 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:03.299 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:03.301 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:03.301 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41)], params={}, sortColumn=blog_collection, sortMethod=desc)]
2020-05-26 13:44:03.309 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection desc limit ?, ? 
2020-05-26 13:44:03.311 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:03.317 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:03.319 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:03.321 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:03.323 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:03.326 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 28
2020-05-26 13:44:03.327 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:03.340 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:03.342 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 28(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:03.351 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:04.411 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:04.412 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:04.413 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:04.414 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:04.415 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_read, sortMethod=desc)]
2020-05-26 13:44:04.423 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-05-26 13:44:04.424 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:04.430 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:04.432 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:04.433 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:04.435 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:04.436 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-26 13:44:04.437 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:04.443 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:04.445 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 25(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:04.454 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:05.097 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:05.098 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:05.098 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:05.099 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:05.100 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2020-05-26 13:44:05.108 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-05-26 13:44:05.109 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:05.118 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:05.121 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:05.123 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:05.126 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:05.129 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-26 13:44:05.132 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:05.139 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:05.141 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 32(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:05.149 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:06.028 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:06.029 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:06.030 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:06.031 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:06.031 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-05-26 13:44:06.036 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-05-26 13:44:06.037 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:06.043 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:06.044 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:06.045 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:06.048 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:06.050 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-26 13:44:06.051 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:06.058 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:06.061 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:06.069 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:06.285 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:06.285 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:06.286 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:06.287 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:06.288 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-26 13:44:06.298 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-05-26 13:44:06.300 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:44:06.307 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:44:06.309 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:44:06.311 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:44:06.315 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:06.317 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-26 13:44:06.318 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:44:06.324 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:06.326 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11117, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-25 13:48:12), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 32(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:06.334 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:08.675 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/read/1263813104932773888
2020-05-26 13:44:08.676 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:08.676 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:08.676 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.read
2020-05-26 13:44:08.677 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[1263813104932773888]
2020-05-26 13:44:08.686 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-26 13:44:08.687 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1263813104932773888(String)
2020-05-26 13:44:08.692 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-26 13:44:08.697 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-26 13:44:08.699 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试9(String), <p>阿三大苏打</p>(String), 435(Integer), 11118(Integer), 567(Integer), 2(Integer), 0(Integer), 1263813104932773888(String), 2(Integer)
2020-05-26 13:44:08.704 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-26 13:44:08.711 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-26 13:44:08.713 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-26 13:44:08.716 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-26 13:44:08.721 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 46
2020-05-26 13:44:08.722 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"blogCollection":567,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},"msg":"操作成功！"}
2020-05-26 13:44:08.727 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:08.728 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1263813104932773888(String), [1263813104932773888](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":{"blogCollection":567,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:08.733 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:11.744 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 13:44:11.745 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:11.746 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:11.747 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 13:44:11.748 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:44:11.762 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 13:44:11.764 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 13:44:11.767 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 13:44:11.768 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-26 13:44:11.772 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 13:44:11.778 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:11.779 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:11.785 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:14.257 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:44:14.258 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:14.259 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:14.259 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:44:14.260 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=2}, sortColumn=created_time, sortMethod=desc)]
2020-05-26 13:44:14.287 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? order by created_time desc limit ?, ? 
2020-05-26 13:44:14.288 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2020-05-26 13:44:14.295 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 9
2020-05-26 13:44:14.298 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-05-26 13:44:14.300 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 2(String)
2020-05-26 13:44:14.302 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:44:14.305 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 48
2020-05-26 13:44:14.306 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{"typeId":"2"},"sortColumn":"created_time","sortMethod":"desc","totalCount":9,"totalPage":1},"msg":"操作成功！"}
2020-05-26 13:44:14.313 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:14.315 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=2}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 48(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{"typeId":"2"},"sortColumn":"created_time","sortMethod":"desc","totalCount":9,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:14.321 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:17.312 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getTimeLine
2020-05-26 13:44:17.312 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:17.313 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:17.313 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getTimeLine
2020-05-26 13:44:17.314 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:44:17.319 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-05-26 13:44:17.320 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-05-26 13:44:17.324 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 12
2020-05-26 13:44:17.325 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-26 13:44:17.328 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}
2020-05-26 13:44:17.334 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:17.336 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"list":[{"blogId":"1263816317509591040","blogMonth":"2020-05","blogTitle":"测试12","createdTime":"2020-05-22 20:57:45"},{"blogId":"1263813156384301056","blogMonth":"2020-05","blogTitle":"测试11","createdTime":"2020-05-22 20:45:11"},{"blogId":"1263813131239448576","blogMonth":"2020-05","blogTitle":"测试10","createdTime":"2020-05-22 20:45:05"},{"blogId":"1263813104932773888","blogMonth":"2020-05","blogTitle":"测试9","createdTime":"2020-05-22 20:44:59"},{"blogId":"1263813085076938752","blogMonth":"2020-05","blogTitle":"测试8","createdTime":"2020-05-22 20:44:54"},{"blogId":"1263813067829960704","blogMonth":"2020-05","blogTitle":"测试7","createdTime":"2020-05-22 20:44:50"},{"blogId":"1263813046816497664","blogMonth":"2020-05","blogTitle":"测试6","createdTime":"2020-05-22 20:44:45"},{"blogId":"1263813025689788416","blogMonth":"2020-05","blogTitle":"测试5","createdTime":"2020-05-22 20:44:40"},{"blogId":"1263813005695541248","blogMonth":"2020-05","blogTitle":"测试4","createdTime":"2020-05-22 20:44:35"},{"blogId":"1263812922329554944","blogMonth":"2020-05","blogTitle":"测试3","createdTime":"2020-05-22 20:44:15"},{"blogId":"1263812868600520704","blogMonth":"2020-05","blogTitle":"测试2","createdTime":"2020-05-22 20:44:03"},{"blogId":"1","blogMonth":"2020-05","blogTitle":"测试100","createdTime":"2020-05-22 19:39:16"}],"month":"2020-05"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:17.341 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:20.218 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /about/read
2020-05-26 13:44:20.219 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:20.219 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:20.219 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AboutController.read
2020-05-26 13:44:20.220 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:44:20.239 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-05-26 13:44:20.240 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-26 13:44:20.256 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-26 13:44:20.259 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-05-26 13:44:20.260 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 关于染柒(String), <p>sdf</p>(String), 13(Integer), 1(Integer), 15(Integer)
2020-05-26 13:44:20.264 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-05-26 13:44:20.269 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 51
2020-05-26 13:44:20.275 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":13,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-25 17:24:53","version":15},"msg":"操作成功！"}
2020-05-26 13:44:20.284 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:20.286 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":{"aboutContent":"<p>sdf</p>","aboutId":1,"aboutRead":13,"aboutTitle":"关于染柒","createdTime":"2020-05-23 16:01:20","updateTime":"2020-05-25 17:24:53","version":15},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:20.292 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:28.648 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 13:44:28.649 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:44:28.649 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:28.650 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 13:44:28.650 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 13:44:28.658 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 13:44:28.659 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 13:44:28.661 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 13:44:28.680 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-26 13:44:28.682 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"300FFCB6D1ADE6FB12BB8876DAD5C891"},"msg":"操作成功！"}
2020-05-26 13:44:28.688 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:28.689 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 32(Long), {"code":20000,"data":{"token":"300FFCB6D1ADE6FB12BB8876DAD5C891"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:28.696 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:28.721 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 13:44:28.721 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:28.722 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:28.722 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 13:44:28.722 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:44:28.722 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 13:44:28.723 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 13:44:28.730 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:28.731 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:28.736 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:44:28.868 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 13:44:28.868 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 13:44:28.869 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:44:28.870 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 13:44:28.870 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 13:44:28.878 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 13:44:28.879 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 13:44:28.882 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 13:44:28.883 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-26 13:44:28.883 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 13:44:28.890 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:44:28.891 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:44:28.897 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:45:02.258 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 13:45:02.260 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:45:02.261 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:45:02.262 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 13:45:02.263 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 13:45:02.282 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 13:45:02.284 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 13:45:02.289 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 13:45:02.291 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 13:45:02.292 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 13:45:02.295 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 13:45:02.297 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 39
2020-05-26 13:45:02.298 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 13:45:02.304 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:45:02.305 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 39(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:45:02.319 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:45:06.549 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 13:45:06.550 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 13:45:06.550 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 13:45:06.551 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 13:45:06.551 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@756c9a51]
2020-05-26 13:45:06.580 ERROR [http-nio-8090-exec-4]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 13:45:06.596 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 13:45:06.597 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@756c9a51](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11117,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-25 13:48:12"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 13:45:06.604 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 13:45:06.623 ERROR [http-nio-8090-exec-4]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 13:45:06.638 ERROR [http-nio-8090-exec-4]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 13:45:06.639 ERROR [http-nio-8090-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 14:10:08.562 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 14:10:08.564 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:10:08.565 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:10:08.566 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 14:10:08.567 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@15111b34]
2020-05-26 14:10:08.585 ERROR [http-nio-8090-exec-1]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:10:08.615 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:10:08.617 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@15111b34](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":567,"blogComment":0,"blogContent":"<p>阿三大苏打</p>","blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:10:08.626 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:10:08.628 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:10:08.631 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:10:08.632 ERROR [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 14:20:46.938 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 14:20:46.940 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:20:46.941 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:20:46.942 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 14:20:46.942 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@28d87482]
2020-05-26 14:20:46.960 ERROR [http-nio-8090-exec-2]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:20:46.977 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:20:46.979 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@28d87482](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:20:46.987 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:20:46.988 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$bf2ad2b5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:20:46.991 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:20:46.992 ERROR [http-nio-8090-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 14:20:52.908 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 14:20:52.909 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:20:52.909 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:20:52.910 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 14:20:52.910 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:20:52.911 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 14:20:52.911 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 14:20:52.920 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:20:52.921 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:20:52.934 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:20:53.077 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 14:20:53.078 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:20:53.078 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:20:53.079 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 14:20:53.079 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:20:53.085 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 14:20:53.085 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 14:20:53.088 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 14:20:53.089 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-26 14:20:53.089 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 14:20:53.096 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:20:53.098 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:20:53.103 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:20:53.217 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 14:20:53.218 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:20:53.218 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:20:53.219 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 14:20:53.219 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 14:20:53.232 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 14:20:53.232 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 14:20:53.237 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 14:20:53.238 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 14:20:53.239 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 14:20:53.242 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 14:20:53.244 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 27
2020-05-26 14:20:53.247 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 14:20:53.258 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:20:53.259 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:20:53.266 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:05.505 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 14:21:05.513 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 14:21:14.481 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 10840 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 14:21:14.485 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 14:21:14.486 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 14:21:15.911 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$635a44a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:15.947 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:15.957 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a5eeaef8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:15.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8cc6533a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:15.964 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 14:21:16.014 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:16.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:16.049 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.525 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 14:21:17.526 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.587 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.894 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.900 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.908 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.912 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.914 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.916 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.918 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.924 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.958 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:17.978 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:21:18.289 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 14:21:18.300 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 14:21:18.301 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 14:21:18.301 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 14:21:18.303 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 14:21:18.303 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 14:21:18.304 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 14:21:18.309 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 14:21:18.686 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 14:21:18.686 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4156 ms
2020-05-26 14:21:20.045 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 14:21:20.075 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 14:21:20.078 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 6.207 seconds (JVM running for 7.763)
2020-05-26 14:21:29.177 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 14:21:29.177 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 14:21:29.204 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 26 ms
2020-05-26 14:21:33.945 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 14:21:33.948 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:21:33.949 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:21:33.953 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 14:21:33.954 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 14:21:34.015 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 14:21:34.069 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 14:21:34.128 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 14:21:34.139 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 194
2020-05-26 14:21:34.142 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"DD1DF7736760814C6486FD129C126EAB"},"msg":"操作成功！"}
2020-05-26 14:21:34.150 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:21:34.157 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 194(Long), {"code":20000,"data":{"token":"DD1DF7736760814C6486FD129C126EAB"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:21:34.165 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:34.555 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 14:21:34.556 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:21:34.556 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:21:34.557 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 14:21:34.558 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:21:34.559 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 14:21:34.568 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 14:21:34.576 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:21:34.578 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:21:34.593 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:34.805 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 14:21:34.807 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:21:34.807 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:21:34.808 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 14:21:34.808 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:21:34.823 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 14:21:34.824 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 14:21:34.832 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 14:21:34.834 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-26 14:21:34.845 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 14:21:34.857 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:21:34.860 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:21:34.876 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:35.085 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 14:21:35.087 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:21:35.088 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:21:35.089 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 14:21:35.090 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 14:21:35.169 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 14:21:35.170 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 14:21:35.187 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 14:21:35.188 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 14:21:35.189 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 14:21:35.193 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 14:21:35.197 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 112
2020-05-26 14:21:35.210 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 14:21:35.218 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:21:35.221 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 112(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:21:35.227 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:39.368 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 14:21:39.369 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:21:39.370 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:21:39.370 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 14:21:39.370 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4fca87f3]
2020-05-26 14:21:39.399 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$575e2852.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:21:39.413 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:21:39.414 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4fca87f3](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$575e2852.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 14:21:39.431 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:21:39.446 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$575e2852.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:21:39.460 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:21:39.461 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 14:25:49.809 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 14:25:49.816 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 14:25:53.794 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 11652 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 14:25:53.798 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 14:25:53.798 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 14:25:54.691 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$80b65522] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.729 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.739 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c34abf77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.742 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$aa2263b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.746 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 14:25:54.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.804 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:54.823 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:55.988 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 14:25:55.989 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.042 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.249 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.257 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.260 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.262 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.264 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.266 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.270 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.299 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.321 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 14:25:56.582 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 14:25:56.593 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 14:25:56.594 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 14:25:56.594 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 14:25:56.596 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 14:25:56.596 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 14:25:56.596 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 14:25:56.600 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 14:25:56.693 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 14:25:56.694 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2849 ms
2020-05-26 14:25:58.021 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 14:25:58.040 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 14:25:58.043 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.84 seconds (JVM running for 6.128)
2020-05-26 14:26:38.860 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 14:26:38.860 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 14:26:38.881 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 21 ms
2020-05-26 14:26:43.133 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 14:26:43.136 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:26:43.137 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:26:43.141 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 14:26:43.142 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 14:26:43.199 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 14:26:43.244 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 14:26:43.290 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 14:26:43.300 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 167
2020-05-26 14:26:43.304 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"4BE85BFCAB60842ADE09E34F653AFA8E"},"msg":"操作成功！"}
2020-05-26 14:26:43.312 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:26:43.318 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 167(Long), {"code":20000,"data":{"token":"4BE85BFCAB60842ADE09E34F653AFA8E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:26:43.336 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:26:43.430 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 14:26:43.431 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:26:43.431 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:26:43.431 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 14:26:43.432 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:26:43.432 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 14:26:43.438 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 14:26:43.447 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:26:43.448 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:26:43.455 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:26:43.906 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 14:26:43.907 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 14:26:43.909 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:26:43.910 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 14:26:43.910 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 14:26:43.924 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 14:26:43.925 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 14:26:43.930 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 14:26:43.931 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 25
2020-05-26 14:26:43.938 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 14:26:43.938 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 14:26:43.939 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:26:43.939 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:26:43.940 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 14:26:43.940 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 14:26:43.945 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:26:43.947 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 25(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:26:43.961 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:26:43.991 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 14:26:43.992 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 14:26:44.001 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 14:26:44.002 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 14:26:44.003 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 14:26:44.006 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 14:26:44.008 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 70
2020-05-26 14:26:44.016 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 14:26:44.019 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:26:44.021 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 70(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 14:26:44.026 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:26:48.402 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 14:26:48.402 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 14:26:48.402 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 14:26:48.402 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 14:26:48.403 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@369b6a97]
2020-05-26 14:26:48.427 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:26:48.437 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 14:26:48.439 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@369b6a97](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 14:26:48.444 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 14:26:48.453 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:26:48.462 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 14:26:48.463 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 15:27:50.066 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 15:27:50.077 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:27:50.078 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:27:50.079 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 15:27:50.080 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 15:27:50.122 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 15:27:50.135 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 15:27:50.150 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 15:27:50.153 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 88
2020-05-26 15:27:50.154 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"153E1153CB7791F8FACF3D9DA7F3976D"},"msg":"操作成功！"}
2020-05-26 15:27:50.162 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:27:50.164 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 88(Long), {"code":20000,"data":{"token":"153E1153CB7791F8FACF3D9DA7F3976D"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:27:50.173 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:27:50.203 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 15:27:50.204 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:27:50.205 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:27:50.205 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 15:27:50.205 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:27:50.206 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 15:27:50.207 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 15:27:50.219 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:27:50.221 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:27:50.226 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:27:50.672 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 15:27:50.673 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:27:50.674 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:27:50.675 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 15:27:50.676 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:27:50.679 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 15:27:50.681 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:27:50.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:27:50.682 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 15:27:50.683 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 15:27:50.688 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 15:27:50.690 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 15:27:50.693 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 15:27:50.694 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-26 15:27:50.696 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 15:27:50.698 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 15:27:50.700 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 15:27:50.703 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:27:50.705 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:27:50.711 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:27:50.714 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 15:27:50.716 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 15:27:50.717 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 15:27:50.720 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 15:27:50.723 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 44
2020-05-26 15:27:50.724 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 15:27:50.731 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:27:50.733 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 44(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:27:50.738 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:27:54.998 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 15:27:54.999 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:27:54.999 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:27:55.000 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 15:27:55.000 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@47820e4f]
2020-05-26 15:27:55.008 ERROR [http-nio-8090-exec-2]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:27:55.016 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:27:55.016 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@47820e4f](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"4BE85BFCAB60842ADE09E34F653AFA8E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:27:55.024 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:27:55.027 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ef9423e7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:27:55.031 ERROR [http-nio-8090-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:27:55.032 ERROR [http-nio-8090-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 15:28:40.967 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 15:28:40.974 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 15:28:44.892 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 15460 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 15:28:44.925 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 15:28:44.925 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 15:28:45.808 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$46c633ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.855 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.865 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$895a9e00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.868 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$70324242] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.871 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 15:28:45.912 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.924 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:45.942 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:46.961 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 15:28:46.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.022 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.217 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.232 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.234 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.238 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.238 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.240 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.242 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.272 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.293 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:28:47.531 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 15:28:47.539 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 15:28:47.540 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 15:28:47.540 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 15:28:47.542 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 15:28:47.542 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 15:28:47.542 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 15:28:47.545 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 15:28:47.630 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 15:28:47.630 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2658 ms
2020-05-26 15:28:48.964 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 15:28:48.982 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 15:28:48.985 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.64 seconds (JVM running for 5.94)
2020-05-26 15:29:02.385 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 15:29:02.391 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 15:29:06.248 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 15028 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 15:29:06.253 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 15:29:06.254 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 15:29:07.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$3fb3c119] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.165 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$82482b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.168 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$691fcfb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.171 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 15:29:07.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.229 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:07.247 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.243 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 15:29:08.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.297 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.489 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.502 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.506 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.517 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.520 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.521 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.526 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.556 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.577 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:29:08.836 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 15:29:08.844 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 15:29:08.845 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 15:29:08.845 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 15:29:08.847 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 15:29:08.847 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 15:29:08.847 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 15:29:08.850 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 15:29:08.932 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 15:29:08.932 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2631 ms
2020-05-26 15:29:10.248 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 15:29:10.268 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 15:29:10.271 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.615 seconds (JVM running for 5.908)
2020-05-26 15:29:27.096 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 15:29:27.096 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 15:29:27.129 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 32 ms
2020-05-26 15:29:35.983 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 15:29:35.986 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:29:35.987 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:29:35.991 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 15:29:35.992 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 15:29:36.047 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 15:29:36.093 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 15:29:36.137 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 15:29:36.145 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 162
2020-05-26 15:29:36.149 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"FD94ED4982560A353DBC72E8C1D744FF"},"msg":"操作成功！"}
2020-05-26 15:29:36.155 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:29:36.162 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 162(Long), {"code":20000,"data":{"token":"FD94ED4982560A353DBC72E8C1D744FF"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:29:36.176 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:29:36.272 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 15:29:36.273 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:29:36.273 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:29:36.274 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 15:29:36.274 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:29:36.275 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 15:29:36.281 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 15:29:36.289 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:29:36.291 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:29:36.298 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:29:36.772 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 15:29:36.773 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:29:36.775 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:29:36.776 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 15:29:36.777 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:29:36.792 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 15:29:36.793 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 15:29:36.797 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 15:29:36.798 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 26
2020-05-26 15:29:36.800 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 15:29:36.800 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:29:36.801 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:29:36.801 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 15:29:36.802 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 15:29:36.803 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 15:29:36.810 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:29:36.812 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:29:36.819 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:29:36.869 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 15:29:36.871 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 15:29:36.885 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 15:29:36.887 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 15:29:36.887 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 15:29:36.890 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 15:29:36.893 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 93
2020-05-26 15:29:36.899 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 15:29:36.903 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:29:36.904 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 93(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:29:36.909 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:29:41.254 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 15:29:41.255 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:29:41.255 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:29:41.256 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 15:29:41.257 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@34aba26d]
2020-05-26 15:29:41.274 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:29:41.287 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:29:41.288 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@34aba26d](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 15:29:41.303 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:29:41.318 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:29:41.331 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:29:41.333 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 15:30:14.720 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 15:30:14.721 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:30:14.721 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:30:14.721 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 15:30:14.721 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:30:14.722 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 15:30:14.722 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 15:30:14.727 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:30:14.728 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:30:14.740 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:30:14.902 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 15:30:14.902 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:30:14.902 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:30:14.903 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 15:30:14.903 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:30:14.906 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 15:30:14.907 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 15:30:14.909 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 15:30:14.910 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 8
2020-05-26 15:30:14.911 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 15:30:14.916 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:30:14.917 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:30:14.931 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:30:15.043 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 15:30:15.044 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:30:15.045 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:30:15.045 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 15:30:15.046 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 15:30:15.054 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 15:30:15.055 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 15:30:15.068 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 15:30:15.070 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 15:30:15.070 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 15:30:15.072 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 15:30:15.074 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 31
2020-05-26 15:30:15.075 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 15:30:15.080 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:30:15.081 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 31(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:30:15.087 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:30:21.164 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 15:30:21.165 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:30:21.165 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:30:21.166 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 15:30:21.166 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@52462b44]
2020-05-26 15:30:21.172 ERROR [http-nio-8090-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:30:21.182 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:30:21.184 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@52462b44](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 15:30:21.202 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:30:21.205 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$70f3b9b7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:30:21.207 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:30:21.208 ERROR [http-nio-8090-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 15:33:47.699 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 15:33:47.714 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 15:33:51.734 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 4440 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 15:33:51.738 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 15:33:51.738 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 15:33:52.622 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$b0f4f7b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.659 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.669 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f389620a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.673 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$da61064c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.676 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 15:33:52.719 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.732 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:52.750 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:53.859 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 15:33:53.859 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:53.913 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.128 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.133 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.141 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.144 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.146 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.149 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.150 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.209 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 15:33:54.456 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 15:33:54.465 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 15:33:54.465 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 15:33:54.465 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 15:33:54.467 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 15:33:54.467 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 15:33:54.467 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 15:33:54.471 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 15:33:54.561 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 15:33:54.561 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2776 ms
2020-05-26 15:33:55.914 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 15:33:55.934 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 15:33:55.938 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.827 seconds (JVM running for 6.146)
2020-05-26 15:34:10.150 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 15:34:10.151 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 15:34:10.182 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 31 ms
2020-05-26 15:34:14.932 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 15:34:14.935 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:34:14.936 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:34:14.940 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 15:34:14.940 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 15:34:14.997 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 15:34:15.042 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 15:34:15.086 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 15:34:15.097 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 165
2020-05-26 15:34:15.100 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"E7C56BA3CEAC0501766A4C4E6726AEC5"},"msg":"操作成功！"}
2020-05-26 15:34:15.108 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:34:15.114 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 165(Long), {"code":20000,"data":{"token":"E7C56BA3CEAC0501766A4C4E6726AEC5"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:34:15.131 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:34:15.226 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 15:34:15.227 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:34:15.227 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:34:15.228 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 15:34:15.228 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:34:15.229 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 15:34:15.235 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 15:34:15.243 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:34:15.245 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:34:15.252 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:34:15.706 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 15:34:15.707 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 15:34:15.708 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:34:15.708 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 15:34:15.709 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 15:34:15.722 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 15:34:15.724 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 15:34:15.728 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 15:34:15.730 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 24
2020-05-26 15:34:15.735 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 15:34:15.735 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 15:34:15.735 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:34:15.736 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:34:15.736 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 15:34:15.736 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 15:34:15.741 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:34:15.743 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:34:15.756 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:34:15.800 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 15:34:15.802 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 15:34:15.821 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 15:34:15.823 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 15:34:15.825 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 15:34:15.831 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 15:34:15.835 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 100
2020-05-26 15:34:15.851 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 15:34:15.863 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:34:15.866 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 100(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 15:34:15.873 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:34:19.597 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 15:34:19.597 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 15:34:19.598 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 15:34:19.598 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 15:34:19.599 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2a0e26ef]
2020-05-26 15:34:19.620 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$c82184bb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:34:19.633 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 15:34:19.635 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2a0e26ef](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$c82184bb.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 15:34:19.641 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 15:34:19.657 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$c82184bb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:34:19.670 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 15:34:19.672 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:14:32.703 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 16:14:32.710 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 16:14:37.046 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 4536 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 16:14:37.052 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 16:14:37.053 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-05-26 16:14:37.983 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$4700abce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.019 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.029 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$89951623] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.033 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$706cba65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.036 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 16:14:38.080 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.093 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:38.111 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.195 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 16:14:39.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.455 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.460 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.467 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.473 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.476 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.477 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.480 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.482 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:14:39.768 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 16:14:39.777 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 16:14:39.777 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 16:14:39.777 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 16:14:39.779 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 16:14:39.779 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 16:14:39.779 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 16:14:39.782 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 16:14:39.869 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 16:14:39.870 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2750 ms
2020-05-26 16:14:41.201 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 16:14:41.219 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 16:14:41.222 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.133 seconds (JVM running for 6.472)
2020-05-26 16:15:45.275 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 16:15:45.276 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 16:15:45.312 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 35 ms
2020-05-26 16:15:49.680 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 16:15:49.685 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:15:49.686 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:15:49.690 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 16:15:49.691 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 16:15:49.748 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 16:15:49.792 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 16:15:49.837 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 16:15:49.847 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 167
2020-05-26 16:15:49.850 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"D328356F0E5D01FA90D00E4984E6B428"},"msg":"操作成功！"}
2020-05-26 16:15:49.858 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:15:49.864 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 167(Long), {"code":20000,"data":{"token":"D328356F0E5D01FA90D00E4984E6B428"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:15:49.875 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:15:49.968 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:15:49.969 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:15:49.969 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:15:49.970 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:15:49.970 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:15:49.971 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 16:15:49.978 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:15:49.987 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:15:49.989 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:15:49.996 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:15:50.431 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:15:50.432 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:15:50.432 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:15:50.433 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:15:50.433 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:15:50.446 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:15:50.447 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:15:50.451 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:15:50.453 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 23
2020-05-26 16:15:50.456 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:15:50.457 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:15:50.458 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:15:50.458 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:15:50.459 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:15:50.460 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:15:50.468 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:15:50.470 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:15:50.478 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:15:50.532 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:15:50.534 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:15:50.551 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:15:50.553 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:15:50.554 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:15:50.557 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:15:50.560 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 104
2020-05-26 16:15:50.570 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:15:50.577 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:15:50.579 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 104(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:15:50.586 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:16:04.023 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:16:04.024 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:16:04.025 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:16:04.025 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:16:04.026 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@25c361a7]
2020-05-26 16:16:04.053 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$75747ee0.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:16:04.065 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:16:04.067 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@25c361a7](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$75747ee0.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:16:04.077 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:16:04.090 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$75747ee0.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:16:04.103 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:16:04.104 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:16:50.475 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 16:16:50.481 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 16:24:47.044 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 13816 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 16:24:47.047 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 16:24:47.048 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 16:24:47.910 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$37a59676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:47.945 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:47.955 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7a3a00cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:47.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6111a50d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:47.962 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 16:24:48.006 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:48.020 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:48.039 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.116 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 16:24:49.117 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.172 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.378 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.384 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.391 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.394 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.396 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.399 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.400 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.405 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.437 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.458 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:24:49.718 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8090 (http)
2020-05-26 16:24:49.727 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8090"]
2020-05-26 16:24:49.728 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 16:24:49.728 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 16:24:49.729 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 16:24:49.730 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 16:24:49.730 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 16:24:49.733 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 16:24:49.826 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 16:24:49.827 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2732 ms
2020-05-26 16:24:52.076 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8090"]
2020-05-26 16:24:52.158 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8090 (http) with context path ''
2020-05-26 16:24:52.164 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.727 seconds (JVM running for 7.097)
2020-05-26 16:25:14.313 INFO  [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 16:25:14.314 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 16:25:14.328 INFO  [http-nio-8090-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 14 ms
2020-05-26 16:25:30.899 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 16:25:30.902 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:25:30.903 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:25:30.907 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 16:25:30.907 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 16:25:30.962 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 16:25:31.007 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 16:25:31.063 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 16:25:31.073 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 174
2020-05-26 16:25:31.076 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"DA7F7D6AC59B4C052BFCA0D141D4D73E"},"msg":"操作成功！"}
2020-05-26 16:25:31.085 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:25:31.090 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 174(Long), {"code":20000,"data":{"token":"DA7F7D6AC59B4C052BFCA0D141D4D73E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:25:31.099 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:25:31.191 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:25:31.192 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:25:31.192 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:25:31.193 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:25:31.194 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:25:31.194 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 16:25:31.201 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:25:31.208 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:25:31.210 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:25:31.218 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:25:31.588 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:25:31.590 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:25:31.591 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:25:31.592 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:25:31.593 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:25:31.623 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:25:31.625 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:25:31.633 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:25:31.635 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 47
2020-05-26 16:25:31.641 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:25:31.648 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:25:31.651 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:25:31.669 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:25:50.629 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:25:50.630 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:25:50.630 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:25:50.631 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:25:50.631 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:25:50.690 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:25:50.691 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:25:50.707 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:25:50.708 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:25:50.709 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:25:50.715 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:25:50.719 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 90
2020-05-26 16:25:50.733 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:25:50.740 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:25:50.742 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 90(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:25:50.752 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:25:56.767 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:25:56.767 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:25:56.768 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:25:56.769 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:25:56.769 INFO  [http-nio-8090-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@44612db8]
2020-05-26 16:25:56.796 ERROR [http-nio-8090-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:25:56.809 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:25:56.811 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@44612db8](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:25:56.818 DEBUG [http-nio-8090-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:25:56.834 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:25:56.848 ERROR [http-nio-8090-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:25:56.849 ERROR [http-nio-8090-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:42:58.148 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:42:58.151 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:42:58.152 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:42:58.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:42:58.153 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:42:58.154 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 6
2020-05-26 16:42:58.155 INFO  [http-nio-8090-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:42:58.171 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:42:58.175 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:42:58.195 DEBUG [http-nio-8090-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:42:58.561 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:42:58.563 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:42:58.565 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:42:58.567 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:42:58.569 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:42:58.569 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:42:58.571 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:42:58.573 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:42:58.574 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:42:58.575 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:42:58.593 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:42:58.597 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:42:58.609 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:42:58.612 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 51
2020-05-26 16:42:58.615 INFO  [http-nio-8090-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:42:58.617 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:42:58.621 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:42:58.633 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:42:58.637 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:42:58.649 DEBUG [http-nio-8090-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:42:58.690 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:42:58.693 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:42:58.695 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:42:58.699 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:42:58.703 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 134
2020-05-26 16:42:58.706 INFO  [http-nio-8090-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:42:58.717 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:42:58.719 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 134(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:42:58.730 DEBUG [http-nio-8090-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:43:10.911 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:43:10.912 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:43:10.913 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:43:10.913 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:43:10.914 INFO  [http-nio-8090-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@11b96288]
2020-05-26 16:43:10.924 ERROR [http-nio-8090-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:10.936 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:43:10.939 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@11b96288](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:43:10.947 DEBUG [http-nio-8090-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:43:10.950 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:10.953 ERROR [http-nio-8090-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:10.954 ERROR [http-nio-8090-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:43:56.430 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:43:56.432 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:43:56.432 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:43:56.433 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:43:56.434 INFO  [http-nio-8090-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@791f49cb]
2020-05-26 16:43:56.453 ERROR [http-nio-8090-exec-1]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:56.477 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:43:56.480 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@791f49cb](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:43:56.492 DEBUG [http-nio-8090-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:43:56.497 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:56.502 ERROR [http-nio-8090-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:43:56.503 ERROR [http-nio-8090-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:49:07.887 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:49:07.889 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:49:07.890 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:49:07.891 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:49:07.892 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:49:07.893 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 6
2020-05-26 16:49:07.894 INFO  [http-nio-8090-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:49:07.912 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:49:07.914 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:49:07.931 DEBUG [http-nio-8090-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:49:08.312 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:49:08.313 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:49:08.314 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:49:08.314 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:49:08.314 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:49:08.314 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:49:08.315 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:49:08.315 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:49:08.315 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:49:08.316 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:49:08.332 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:49:08.334 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:49:08.340 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:49:08.342 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:49:08.343 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:49:08.344 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 32
2020-05-26 16:49:08.345 INFO  [http-nio-8090-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:49:08.354 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:49:08.356 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:49:08.358 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:49:08.361 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:49:08.362 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:49:08.362 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:49:08.365 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 51
2020-05-26 16:49:08.367 INFO  [http-nio-8090-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:49:08.370 DEBUG [http-nio-8090-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:49:08.384 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:49:08.386 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 51(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:49:08.411 DEBUG [http-nio-8090-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:49:14.192 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:49:14.192 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:49:14.193 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:49:14.194 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:49:14.194 INFO  [http-nio-8090-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1c4a91d7]
2020-05-26 16:49:14.207 ERROR [http-nio-8090-exec-5]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:49:14.223 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:49:14.226 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1c4a91d7](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:49:14.234 DEBUG [http-nio-8090-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:49:14.237 ERROR [http-nio-8090-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$640b57fb.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:49:14.243 ERROR [http-nio-8090-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:49:14.244 ERROR [http-nio-8090-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:49:51.196 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 16:49:51.217 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 16:50:00.412 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 9728 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 16:50:00.422 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 16:50:00.424 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 16:50:02.722 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$ffd0a0f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:02.813 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:02.839 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$42650b4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:02.845 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$293caf8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:02.853 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 16:50:02.986 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:03.024 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:03.078 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:05.683 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 16:50:05.685 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:05.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.474 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.486 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.517 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.526 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.532 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.537 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.619 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:06.676 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 16:50:07.267 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 16:50:07.286 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 16:50:07.288 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 16:50:07.288 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 16:50:07.292 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 16:50:07.292 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 16:50:07.293 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 16:50:07.301 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 16:50:07.515 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 16:50:07.516 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6981 ms
2020-05-26 16:50:10.818 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 16:50:10.873 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 16:50:10.879 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 11.75 seconds (JVM running for 14.946)
2020-05-26 16:52:13.949 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 16:52:13.951 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 16:52:14.000 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 49 ms
2020-05-26 16:52:14.219 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 16:52:14.222 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:52:14.223 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:52:14.227 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 16:52:14.228 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 16:52:14.290 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 16:52:14.346 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 16:52:14.396 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 16:52:14.419 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 200
2020-05-26 16:52:14.538 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"6F84C6D4D3B04C88B4C5B3A05CF28DF5"},"msg":"操作成功！"}
2020-05-26 16:52:14.546 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:52:14.552 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 200(Long), {"code":20000,"data":{"token":"6F84C6D4D3B04C88B4C5B3A05CF28DF5"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:52:14.559 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:52:14.664 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:52:14.665 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:52:14.666 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:52:14.667 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:52:14.667 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:52:14.668 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 16:52:14.676 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:52:14.686 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:52:14.688 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:52:14.695 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:52:15.149 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:52:15.150 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:52:15.152 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:52:15.153 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:52:15.154 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:52:15.179 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:52:15.181 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:52:15.189 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:52:15.192 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 43
2020-05-26 16:52:15.205 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:52:15.218 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:52:15.222 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:52:15.242 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:52:19.234 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:52:19.236 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:52:19.237 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:52:19.238 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:52:19.239 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:52:19.337 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:52:19.339 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:52:19.360 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:52:19.362 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:52:19.363 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:52:19.368 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:52:19.372 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 138
2020-05-26 16:52:19.386 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:52:19.395 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:52:19.397 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 138(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:52:19.413 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:52:26.132 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:52:26.133 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:52:26.134 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:52:26.134 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:52:26.135 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@17338ccb]
2020-05-26 16:52:26.166 ERROR [http-nio-8080-exec-5]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:52:26.179 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:52:26.180 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@17338ccb](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:52:26.188 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:52:26.206 ERROR [http-nio-8080-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:52:26.223 ERROR [http-nio-8080-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:52:26.225 ERROR [http-nio-8080-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:56:39.710 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 16:56:39.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:56:39.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:56:39.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 16:56:39.712 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 16:56:39.716 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 16:56:39.717 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 16:56:39.719 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 16:56:39.720 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 10
2020-05-26 16:56:39.720 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"E9130D00BD10DBD81FDF8C1CD0F02478"},"msg":"操作成功！"}
2020-05-26 16:56:39.725 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:56:39.726 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"token":"E9130D00BD10DBD81FDF8C1CD0F02478"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:56:39.735 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:56:39.754 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 16:56:39.755 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:56:39.755 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:56:39.755 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 16:56:39.756 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:56:39.756 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 16:56:39.756 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 16:56:39.763 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:56:39.764 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:56:39.769 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:56:39.866 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 16:56:39.867 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 16:56:39.867 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:56:39.867 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 16:56:39.868 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 16:56:39.875 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 16:56:39.877 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 16:56:39.879 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 16:56:39.880 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-26 16:56:39.880 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 16:56:39.886 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:56:39.887 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:56:39.892 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:56:44.605 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 16:56:44.605 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:56:44.606 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:56:44.606 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 16:56:44.606 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 16:56:44.610 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 16:56:44.611 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 16:56:44.618 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 16:56:44.619 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 16:56:44.619 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 16:56:44.621 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 16:56:44.623 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-26 16:56:44.624 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 16:56:44.627 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:56:44.628 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:56:44.634 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:56:49.750 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:56:49.750 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:56:49.751 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:56:49.751 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:56:49.751 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@384d5c03]
2020-05-26 16:56:49.758 ERROR [http-nio-8080-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:56:49.764 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:56:49.765 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@384d5c03](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 16:56:49.770 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:56:49.771 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:56:49.773 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:56:49.774 ERROR [http-nio-8080-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 16:57:07.349 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 16:57:07.349 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 16:57:07.350 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 16:57:07.350 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 16:57:07.350 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@8c2e971]
2020-05-26 16:57:07.355 ERROR [http-nio-8080-exec-1]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:57:07.361 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 16:57:07.362 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@8c2e971](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"6F84C6D4D3B04C88B4C5B3A05CF28DF5"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 16:57:07.366 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 16:57:07.367 ERROR [http-nio-8080-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:44)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4b5d11ca.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:57:07.368 ERROR [http-nio-8080-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 16:57:07.369 ERROR [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:05:44.460 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:05:44.469 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:05:50.438 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 14216 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:05:50.441 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:05:50.442 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:05:51.322 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$50c32ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.359 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.369 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$935796f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.373 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7a2f3b3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.376 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:05:51.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:51.450 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.568 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:05:52.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.639 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.913 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.920 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.930 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.934 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.936 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.939 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.941 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.947 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:52.990 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:53.016 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:05:53.327 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:05:53.336 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:05:53.337 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:05:53.337 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:05:53.338 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:05:53.339 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:05:53.339 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:05:53.343 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:05:53.433 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:05:53.434 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2951 ms
2020-05-26 17:05:54.863 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:05:54.883 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:05:54.885 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.016 seconds (JVM running for 6.284)
2020-05-26 17:06:19.789 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:06:19.790 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:06:19.810 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-05-26 17:06:27.709 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:06:27.712 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:06:27.712 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:06:27.714 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:06:27.714 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:06:27.739 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:06:27.760 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:06:27.782 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:06:27.786 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 77
2020-05-26 17:06:27.788 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"3BE60D32DC16826085730D94E11B3E38"},"msg":"操作成功！"}
2020-05-26 17:06:27.792 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:06:27.795 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 77(Long), {"code":20000,"data":{"token":"3BE60D32DC16826085730D94E11B3E38"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:06:27.800 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:06:27.848 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:06:27.848 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:06:27.849 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:06:27.849 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:06:27.849 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:06:27.849 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 17:06:27.853 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:06:27.858 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:06:27.860 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:06:27.864 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:06:28.094 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:06:28.094 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:06:28.094 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:06:28.095 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:06:28.095 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:06:28.104 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:06:28.105 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:06:28.112 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:06:28.113 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-26 17:06:28.117 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:06:28.118 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:06:28.118 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:06:28.118 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:06:28.119 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:06:28.119 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:06:28.122 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:06:28.124 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:06:28.130 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:06:28.165 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:06:28.166 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:06:28.178 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:06:28.179 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:06:28.180 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:06:28.182 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:06:28.184 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 67
2020-05-26 17:06:28.190 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:06:28.195 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:06:28.196 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 67(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:06:28.202 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:06:58.680 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:06:58.681 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:06:58.681 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:06:58.681 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:06:58.681 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2f7a900c]
2020-05-26 17:06:58.689 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:06:58.690 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2f7a900c](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$19e60935.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:06:58.695 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:06:58.704 ERROR [http-nio-8080-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$19e60935.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:06:58.710 ERROR [http-nio-8080-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:06:58.711 ERROR [http-nio-8080-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:08:52.799 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:08:52.804 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:08:58.495 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 4076 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:08:58.499 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:08:58.500 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:08:59.391 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$240a7123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.427 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.436 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$669edb78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.440 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4d767fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.443 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:08:59.486 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.500 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:08:59.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.566 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:09:00.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.621 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.813 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.819 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.826 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.830 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.835 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.837 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.839 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.841 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.871 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:00.892 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:09:01.136 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:09:01.144 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:09:01.144 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:09:01.144 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:09:01.146 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:09:01.146 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:09:01.146 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:09:01.149 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:09:01.237 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:09:01.237 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2657 ms
2020-05-26 17:09:02.572 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:09:02.592 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:09:02.595 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.634 seconds (JVM running for 5.839)
2020-05-26 17:09:29.004 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:09:29.004 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:09:29.021 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-05-26 17:09:36.485 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:09:36.486 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:09:36.487 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:09:36.488 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:09:36.489 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:09:36.512 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:09:36.534 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:09:36.556 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:09:36.560 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 75
2020-05-26 17:09:36.562 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"44FDE4586F2C24CA80AB3988E6FDC805"},"msg":"操作成功！"}
2020-05-26 17:09:36.565 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:09:36.569 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 75(Long), {"code":20000,"data":{"token":"44FDE4586F2C24CA80AB3988E6FDC805"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:09:36.575 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:09:36.623 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:09:36.624 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:09:36.624 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:09:36.625 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:09:36.625 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:09:36.626 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 17:09:36.629 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:09:36.634 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:09:36.636 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:09:36.640 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:09:36.854 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:09:36.854 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:09:36.855 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:09:36.855 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:09:36.856 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:09:36.866 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:09:36.868 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:09:36.873 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:09:36.874 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 20
2020-05-26 17:09:36.878 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:09:36.883 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:09:36.885 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:09:36.888 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:09:36.889 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:09:36.889 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:09:36.890 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:09:36.890 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:09:36.890 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:09:36.933 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:09:36.934 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:09:36.944 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:09:36.945 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:09:36.946 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:09:36.948 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:09:36.951 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 63
2020-05-26 17:09:36.957 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:09:36.960 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:09:36.961 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 63(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:09:36.966 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:09:54.239 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:09:54.239 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:09:54.239 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:09:54.239 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:09:54.239 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@34aba26d]
2020-05-26 17:09:54.245 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:09:54.246 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@34aba26d](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$734afbfc.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:09:54.252 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:09:54.259 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$734afbfc.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:09:54.266 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:09:54.266 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:13:17.430 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:13:17.436 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:13:22.746 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 12988 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:13:22.749 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:13:22.750 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:13:23.595 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$3e14a57d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.632 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.644 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$80a90fd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.649 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6780b414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.654 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:13:23.697 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.710 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:23.727 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:24.756 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:13:24.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:24.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.002 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.014 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.019 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.021 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.024 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.029 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.058 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.080 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:13:25.322 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:13:25.329 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:13:25.330 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:13:25.330 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:13:25.332 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:13:25.332 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:13:25.332 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:13:25.335 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:13:25.421 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:13:25.422 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2628 ms
2020-05-26 17:13:26.739 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:13:26.759 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:13:26.762 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.575 seconds (JVM running for 5.76)
2020-05-26 17:15:29.266 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:15:29.267 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:15:29.286 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-05-26 17:15:33.989 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:15:33.990 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:15:33.991 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:15:33.992 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:15:33.993 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:15:34.018 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:15:34.038 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:15:34.059 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:15:34.064 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 75
2020-05-26 17:15:34.066 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"E4AE952350C8F3D7F68A2A15791DF0E3"},"msg":"操作成功！"}
2020-05-26 17:15:34.070 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:15:34.073 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 75(Long), {"code":20000,"data":{"token":"E4AE952350C8F3D7F68A2A15791DF0E3"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:15:34.079 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:15:34.138 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:15:34.139 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:15:34.139 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:15:34.140 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:15:34.140 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:15:34.141 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 17:15:34.144 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:15:34.149 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:15:34.151 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:15:34.156 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:15:34.376 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:15:34.376 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:15:34.377 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:15:34.377 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:15:34.377 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:15:34.390 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:15:34.391 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:15:34.397 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:15:34.397 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:15:34.398 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:15:34.398 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:15:34.398 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:15:34.404 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:15:34.405 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 29
2020-05-26 17:15:34.408 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:15:34.413 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:15:34.414 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:15:34.421 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:15:34.442 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:15:34.443 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:15:34.450 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:15:34.453 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:15:34.453 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:15:34.455 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:15:34.457 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 60
2020-05-26 17:15:34.462 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:15:34.466 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:15:34.468 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 60(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:15:34.474 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:15:48.851 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:15:48.851 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:15:48.851 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:15:48.851 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:15:48.852 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1c626499]
2020-05-26 17:15:48.857 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:15:48.858 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1c626499](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$c3211c0a.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:15:48.862 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:15:48.870 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:35)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$c3211c0a.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:15:48.876 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:15:48.876 ERROR [http-nio-8080-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:20:16.926 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:20:16.932 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:20:22.341 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 6736 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:20:22.345 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:20:22.345 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:20:23.182 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$7f062150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.218 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.228 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c19a8ba5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.232 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a8722fe7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.235 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:20:23.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.291 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:23.309 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.317 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:20:24.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.371 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.573 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.582 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.585 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.587 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.589 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.591 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.594 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.596 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.629 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.650 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:20:24.896 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:20:24.903 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:20:24.904 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:20:24.904 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:20:24.905 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:20:24.906 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:20:24.906 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:20:24.908 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:20:25.003 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:20:25.004 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2610 ms
2020-05-26 17:20:26.303 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:20:26.322 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:20:26.325 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.562 seconds (JVM running for 5.771)
2020-05-26 17:20:34.332 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:20:34.333 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:20:34.349 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-05-26 17:20:38.898 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:20:38.899 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:20:38.899 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:20:38.901 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:20:38.901 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:20:38.926 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:20:38.950 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:20:38.982 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:20:38.987 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 89
2020-05-26 17:20:38.988 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"6B44959E1022DAF83E43C6D8EFAE187C"},"msg":"操作成功！"}
2020-05-26 17:20:38.992 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:20:38.996 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 89(Long), {"code":20000,"data":{"token":"6B44959E1022DAF83E43C6D8EFAE187C"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:20:39.001 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:20:39.051 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:20:39.052 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:20:39.052 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:20:39.053 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:20:39.053 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:20:39.053 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 17:20:39.057 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:20:39.062 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:20:39.064 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:20:39.069 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:20:39.286 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:20:39.286 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:20:39.287 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:20:39.287 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:20:39.287 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:20:39.299 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:20:39.300 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:20:39.304 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:20:39.305 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 17:20:39.308 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:20:39.308 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:20:39.309 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:20:39.309 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:20:39.309 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:20:39.310 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:20:39.316 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:20:39.317 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:20:39.322 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:20:39.353 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:20:39.354 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:20:39.364 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:20:39.365 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:20:39.365 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:20:39.367 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:20:39.369 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 61
2020-05-26 17:20:39.374 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:20:39.379 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:20:39.380 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 61(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:20:39.384 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:20:44.173 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:20:44.173 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:20:44.173 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:20:44.174 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:20:44.174 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2abab233]
2020-05-26 17:20:44.181 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:20:44.182 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2abab233](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:37)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$9b3a56c7.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:20:44.186 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:20:44.195 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:37)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$9b3a56c7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:20:44.200 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:20:44.200 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:30:30.130 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:30:30.136 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:30:36.056 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 5472 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:30:36.061 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:30:36.062 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:30:36.914 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$354333f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:36.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:36.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$77d79e47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:36.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5eaf4289] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:36.966 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:30:37.008 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:37.023 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:37.041 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.095 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:30:38.095 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.347 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.353 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.365 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.370 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.371 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.374 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.375 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.405 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.427 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:30:38.678 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:30:38.687 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:30:38.687 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:30:38.687 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:30:38.689 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:30:38.689 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:30:38.689 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:30:38.692 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:30:38.777 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:30:38.777 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2672 ms
2020-05-26 17:30:40.094 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:30:40.115 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:30:40.118 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.663 seconds (JVM running for 5.988)
2020-05-26 17:31:04.309 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:31:04.314 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:31:09.785 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 3420 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:31:09.789 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:31:09.790 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:31:10.706 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0678736] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.745 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$32fbf18b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.759 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$19d395cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.762 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:31:10.811 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.825 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:10.844 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:11.881 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:31:11.881 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:11.936 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.149 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.155 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.163 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.167 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.174 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.178 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.180 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.237 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:31:12.524 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:31:12.532 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:31:12.533 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:31:12.533 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:31:12.535 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:31:12.535 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:31:12.536 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:31:12.539 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:31:12.629 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:31:12.629 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2792 ms
2020-05-26 17:31:13.976 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:31:13.995 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:31:13.997 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.787 seconds (JVM running for 6.075)
2020-05-26 17:32:00.614 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:32:00.614 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:32:00.634 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-05-26 17:32:09.029 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:32:09.030 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:32:09.031 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:32:09.032 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:32:09.032 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:32:09.058 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:32:09.078 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:32:09.099 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:32:09.107 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 78
2020-05-26 17:32:09.108 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"F29841CDE29E4FA97A132D5E813D7E0B"},"msg":"操作成功！"}
2020-05-26 17:32:09.112 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:32:09.114 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 78(Long), {"code":20000,"data":{"token":"F29841CDE29E4FA97A132D5E813D7E0B"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:32:09.129 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:32:09.183 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:32:09.184 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:32:09.185 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:32:09.185 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:32:09.186 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:32:09.187 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 17:32:09.192 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:32:09.196 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:32:09.197 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:32:09.202 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:32:09.427 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:32:09.428 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:32:09.428 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:32:09.429 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:32:09.429 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:32:09.440 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:32:09.441 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:32:09.445 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:32:09.446 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 17:32:09.449 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:32:09.452 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:32:09.453 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:32:09.453 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:32:09.454 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:32:09.454 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:32:09.455 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:32:09.456 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:32:09.461 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:32:09.496 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:32:09.497 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:32:09.506 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:32:09.507 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:32:09.508 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:32:09.510 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:32:09.512 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 60
2020-05-26 17:32:09.518 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:32:09.523 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:32:09.524 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 60(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:32:09.529 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:32:14.659 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:32:14.659 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:32:14.659 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:32:14.659 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:32:14.660 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@26f4c48d]
2020-05-26 17:32:14.666 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:32:14.667 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@26f4c48d](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$a1d63508.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:32:14.673 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:32:14.680 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$a1d63508.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:32:14.687 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:32:14.687 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:36:33.863 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:36:33.869 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:36:44.756 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 6784 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:36:44.760 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:36:44.760 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:36:46.141 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$6d9c7076] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.184 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b030dacb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.200 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$97087f0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.203 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:36:46.252 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:46.288 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.442 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:36:47.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.498 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.732 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.744 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.748 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.750 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.753 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.758 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.788 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:47.809 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:36:48.055 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:36:48.065 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:36:48.066 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:36:48.067 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:36:48.069 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:36:48.069 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:36:48.069 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:36:48.072 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:36:48.204 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:36:48.205 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3392 ms
2020-05-26 17:36:49.623 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:36:49.658 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:36:49.661 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.587 seconds (JVM running for 6.879)
2020-05-26 17:36:49.938 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:36:49.938 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:36:49.951 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-05-26 17:36:56.321 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:36:56.322 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:36:56.323 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:36:56.324 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:36:56.325 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:36:56.350 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:36:56.370 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:36:56.402 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:36:56.407 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 86
2020-05-26 17:36:56.408 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"435BBBFC181E85BF4ACB499F19D0CD98"},"msg":"操作成功！"}
2020-05-26 17:36:56.411 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:36:56.415 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 86(Long), {"code":20000,"data":{"token":"435BBBFC181E85BF4ACB499F19D0CD98"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:36:56.421 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:36:56.471 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:36:56.471 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:36:56.471 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:36:56.472 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:36:56.472 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:36:56.472 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 17:36:56.476 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:36:56.482 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:36:56.483 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:36:56.488 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:36:56.710 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:36:56.710 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:36:56.710 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:36:56.711 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:36:56.712 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:36:56.722 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:36:56.723 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:36:56.725 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:36:56.726 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 16
2020-05-26 17:36:56.730 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:36:56.735 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:36:56.736 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:36:56.737 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:36:56.737 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:36:56.737 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:36:56.737 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:36:56.737 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 16(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:36:56.742 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:36:56.782 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:36:56.783 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:36:56.790 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:36:56.791 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:36:56.791 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:36:56.793 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:36:56.796 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 61
2020-05-26 17:36:56.802 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:36:56.806 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:36:56.806 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 61(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:36:56.811 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:37:00.942 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:37:00.943 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:37:00.943 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:37:00.943 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:37:00.943 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2fd3b2c4]
2020-05-26 17:37:00.951 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:37:00.952 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2fd3b2c4](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$dad70bdc.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:37:00.956 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:37:00.965 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$dad70bdc.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:37:00.970 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:37:00.971 ERROR [http-nio-8080-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:44:59.642 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:44:59.649 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:45:05.489 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 6940 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:45:05.493 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:45:05.493 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:45:06.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$39283fec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.372 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.381 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7bbcaa41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.385 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$62944e83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.388 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:45:06.430 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:06.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.522 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:45:07.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.578 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.769 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.774 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.782 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.785 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.787 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.789 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.793 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.824 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:07.845 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:45:08.098 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:45:08.108 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:45:08.109 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:45:08.109 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:45:08.111 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:45:08.111 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:45:08.112 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:45:08.116 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:45:08.203 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:45:08.203 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2667 ms
2020-05-26 17:45:09.536 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:45:09.554 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:45:09.557 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.627 seconds (JVM running for 5.84)
2020-05-26 17:45:25.509 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:45:25.510 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:45:25.526 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-05-26 17:45:30.387 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:45:30.388 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:45:30.389 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:45:30.390 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:45:30.391 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:45:30.417 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:45:30.437 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:45:30.459 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:45:30.465 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 78
2020-05-26 17:45:30.466 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"EDA1BF7B85FA149D7E8319C5FBDD2399"},"msg":"操作成功！"}
2020-05-26 17:45:30.470 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:45:30.472 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 78(Long), {"code":20000,"data":{"token":"EDA1BF7B85FA149D7E8319C5FBDD2399"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:45:30.478 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:45:30.526 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:45:30.526 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:45:30.526 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:45:30.526 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:45:30.527 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:45:30.527 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 17:45:30.533 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:45:30.537 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:45:30.539 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:45:30.544 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:45:30.757 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:45:30.758 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:45:30.759 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:45:30.759 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:45:30.759 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:45:30.770 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:45:30.771 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:45:30.774 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:45:30.775 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 18
2020-05-26 17:45:30.779 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:45:30.780 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:45:30.780 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:45:30.781 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:45:30.782 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:45:30.783 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:45:30.786 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:45:30.787 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:45:30.792 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:45:30.827 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:45:30.828 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:45:30.838 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:45:30.839 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:45:30.839 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:45:30.841 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:45:30.843 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 64
2020-05-26 17:45:30.850 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:45:30.854 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:45:30.855 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 64(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:45:30.860 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:45:34.834 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:45:34.834 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:45:34.834 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:45:34.834 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:45:34.835 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2beeec08]
2020-05-26 17:45:34.841 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:45:34.841 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2beeec08](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$1548293c.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:45:34.847 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:45:34.855 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$1548293c.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:45:34.860 ERROR [http-nio-8080-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:45:34.860 ERROR [http-nio-8080-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:48:44.220 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:48:44.226 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:48:50.138 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 10000 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:48:50.143 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:48:50.143 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:48:51.041 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$41192a89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.078 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.087 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$83ad94de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.091 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6a853920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.094 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:48:51.137 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:51.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.247 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:48:52.248 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.302 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.509 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.516 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.520 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.522 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.526 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.528 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.561 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.582 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:48:52.857 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:48:52.880 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:48:52.881 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:48:52.881 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:48:52.883 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:48:52.883 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:48:52.883 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:48:52.888 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:48:53.047 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:48:53.047 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2850 ms
2020-05-26 17:48:54.616 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:48:54.644 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:48:54.647 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 5.106 seconds (JVM running for 6.366)
2020-05-26 17:49:53.673 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:49:53.674 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:49:53.692 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 18 ms
2020-05-26 17:49:59.515 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:49:59.516 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:49:59.516 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:49:59.517 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:49:59.518 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:49:59.544 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:49:59.565 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:49:59.588 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:49:59.594 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 80
2020-05-26 17:49:59.596 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"A2DC92CA22FCE9EC31D3F3C156A4ADEE"},"msg":"操作成功！"}
2020-05-26 17:49:59.599 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:49:59.601 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 80(Long), {"code":20000,"data":{"token":"A2DC92CA22FCE9EC31D3F3C156A4ADEE"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:49:59.610 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:49:59.657 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:49:59.658 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:49:59.659 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:49:59.659 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:49:59.659 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:49:59.660 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 17:49:59.664 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:49:59.668 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:49:59.669 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:49:59.676 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:49:59.877 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:49:59.878 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:49:59.879 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:49:59.879 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:49:59.880 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:49:59.891 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:49:59.893 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:49:59.898 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:49:59.899 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-26 17:49:59.903 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:49:59.904 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:49:59.905 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:49:59.905 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:49:59.906 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:49:59.907 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:49:59.908 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:49:59.910 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:49:59.915 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:49:59.950 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:49:59.951 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:49:59.962 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:49:59.963 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:49:59.964 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:49:59.966 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:49:59.968 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 64
2020-05-26 17:49:59.974 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:49:59.978 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:49:59.979 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 64(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:49:59.984 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:50:03.499 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:50:03.499 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:50:03.500 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:50:03.500 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:50:03.500 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@38fe81cf]
2020-05-26 17:50:03.508 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:50:03.508 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@38fe81cf](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4dcd5558.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:50:03.513 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:50:03.520 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4dcd5558.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:50:03.527 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:50:03.527 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:52:04.759 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:52:04.761 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:52:04.762 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:52:04.762 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:52:04.762 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:52:04.763 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 5
2020-05-26 17:52:04.763 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:52:04.770 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:52:04.771 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:52:04.780 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:52:04.987 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:52:04.988 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:52:04.988 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:52:04.988 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:52:04.989 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:52:04.989 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:52:04.989 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:52:04.989 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:52:04.990 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:52:04.991 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:52:04.997 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:52:04.997 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:52:04.999 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:52:05.000 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:52:05.000 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:52:05.001 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-26 17:52:05.001 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:52:05.007 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:52:05.010 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:52:05.015 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:52:05.016 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:52:05.017 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:52:05.019 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:52:05.022 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:52:05.025 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 37
2020-05-26 17:52:05.026 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:52:05.030 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:52:05.031 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 37(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:52:05.036 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:52:08.663 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:52:08.664 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:52:08.664 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:52:08.664 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:52:08.664 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1ad4a915]
2020-05-26 17:52:08.671 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:52:08.673 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1ad4a915](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4dcd5558.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:52:08.677 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:52:08.679 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$4dcd5558.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:52:08.680 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:52:08.681 ERROR [http-nio-8080-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:53:35.486 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:53:35.492 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:53:41.124 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 11352 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:53:41.128 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:53:41.128 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:53:42.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$54e9c08b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$977e2ae0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.075 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7e55cf22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.078 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:53:42.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.134 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:42.152 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.213 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:53:43.213 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.491 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.497 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.507 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.509 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.512 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.516 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.571 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:53:43.812 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:53:43.820 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:53:43.821 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:53:43.821 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:53:43.822 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:53:43.823 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:53:43.823 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:53:43.826 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:53:43.912 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:53:43.912 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2740 ms
2020-05-26 17:53:45.231 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:53:45.249 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:53:45.252 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.711 seconds (JVM running for 5.975)
2020-05-26 17:53:52.003 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:53:52.004 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:53:52.015 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 11 ms
2020-05-26 17:53:58.407 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:53:58.408 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:53:58.408 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:53:58.410 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:53:58.410 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:53:58.434 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:53:58.456 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:53:58.476 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:53:58.480 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 74
2020-05-26 17:53:58.482 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"88E56DE8A8F2C8BED204542C0277A308"},"msg":"操作成功！"}
2020-05-26 17:53:58.485 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:53:58.489 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 74(Long), {"code":20000,"data":{"token":"88E56DE8A8F2C8BED204542C0277A308"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:53:58.495 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:53:58.558 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:53:58.558 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:53:58.559 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:53:58.559 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:53:58.559 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:53:58.559 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 17:53:58.562 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:53:58.565 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:53:58.566 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:53:58.572 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:53:58.754 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:53:58.755 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:53:58.756 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:53:58.756 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:53:58.756 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:53:58.764 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:53:58.764 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:53:58.767 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:53:58.768 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-26 17:53:58.774 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:53:58.775 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:53:58.775 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:53:58.775 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:53:58.776 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:53:58.777 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:53:58.779 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:53:58.780 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:53:58.785 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:53:58.813 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:53:58.814 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:53:58.823 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:53:58.823 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:53:58.824 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:53:58.826 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:53:58.828 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 54
2020-05-26 17:53:58.833 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:53:58.837 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:53:58.838 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 54(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:53:58.844 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:02.798 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:54:02.798 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:54:02.799 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:54:02.799 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:54:02.799 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@403d96fa]
2020-05-26 17:54:02.812 ERROR [http-nio-8080-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:02.818 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:54:02.819 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@403d96fa](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:54:02.823 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:02.829 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:02.835 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:02.836 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:54:26.904 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:54:26.905 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:54:26.905 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:54:26.905 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:54:26.905 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:54:26.905 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 1
2020-05-26 17:54:26.906 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:54:26.909 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:54:26.910 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:54:26.915 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:27.163 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:54:27.163 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:54:27.164 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:54:27.164 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:54:27.164 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:54:27.165 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:54:27.166 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:54:27.167 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:54:27.168 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:54:27.169 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:54:27.170 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:54:27.171 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:54:27.174 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:54:27.175 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 12
2020-05-26 17:54:27.176 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:54:27.176 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:54:27.177 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:54:27.181 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:54:27.181 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:54:27.188 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:27.192 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:54:27.193 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:54:27.194 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:54:27.197 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:54:27.200 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 35
2020-05-26 17:54:27.202 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:54:27.208 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:54:27.209 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:54:27.214 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:37.614 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:54:37.615 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:54:37.615 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:54:37.615 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:54:37.615 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@67c1b5b6]
2020-05-26 17:54:37.622 ERROR [http-nio-8080-exec-10]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:37.627 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:54:37.628 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@67c1b5b6](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:54:37.633 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:54:37.636 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$d084b6d5.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:37.637 ERROR [http-nio-8080-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:54:37.637 ERROR [http-nio-8080-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 17:56:12.788 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 17:56:12.794 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 17:56:18.336 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 16376 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 17:56:18.340 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 17:56:18.341 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 17:56:19.174 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$f1c7f27c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.209 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.219 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$345c5cd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$1b340113] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.226 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 17:56:19.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.285 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:19.303 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.336 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 17:56:20.337 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.392 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.585 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.590 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.601 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.603 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.605 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.606 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.609 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.610 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.640 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.662 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 17:56:20.907 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 17:56:20.916 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 17:56:20.917 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 17:56:20.917 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 17:56:20.918 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 17:56:20.919 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 17:56:20.919 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 17:56:20.922 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 17:56:21.005 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 17:56:21.006 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2618 ms
2020-05-26 17:56:22.314 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 17:56:22.335 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 17:56:22.337 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.663 seconds (JVM running for 5.909)
2020-05-26 17:57:07.378 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 17:57:07.378 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 17:57:07.395 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 17 ms
2020-05-26 17:57:13.224 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 17:57:13.225 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:57:13.226 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:57:13.227 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 17:57:13.228 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 17:57:13.254 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 17:57:13.275 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 17:57:13.302 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 17:57:13.307 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 83
2020-05-26 17:57:13.308 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"79130F100617C352E483BC746A6CE810"},"msg":"操作成功！"}
2020-05-26 17:57:13.311 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:57:13.314 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 83(Long), {"code":20000,"data":{"token":"79130F100617C352E483BC746A6CE810"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:57:13.319 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:57:13.364 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 17:57:13.365 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:57:13.366 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:57:13.368 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 17:57:13.368 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:57:13.368 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 17:57:13.372 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 17:57:13.375 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:57:13.376 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:57:13.381 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:57:13.583 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 17:57:13.585 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 17:57:13.585 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:57:13.586 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 17:57:13.586 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 17:57:13.596 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 17:57:13.597 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 17:57:13.604 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 17:57:13.605 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 22
2020-05-26 17:57:13.609 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 17:57:13.610 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 17:57:13.611 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:57:13.611 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:57:13.611 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 17:57:13.612 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 17:57:13.613 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:57:13.616 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:57:13.621 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:57:13.653 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 17:57:13.654 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 17:57:13.662 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 17:57:13.663 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 17:57:13.665 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 17:57:13.667 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 17:57:13.669 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 59
2020-05-26 17:57:13.674 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 17:57:13.677 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:57:13.678 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 59(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 17:57:13.683 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:57:23.479 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 17:57:23.479 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 17:57:23.479 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 17:57:23.480 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 17:57:23.480 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5c1afd1e]
2020-05-26 17:57:23.494 ERROR [http-nio-8080-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$37171768.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:57:23.500 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 17:57:23.501 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5c1afd1e](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$37171768.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 17:57:23.505 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 17:57:23.511 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:45)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$37171768.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:57:23.518 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 17:57:23.518 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 18:00:42.053 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 18:00:42.058 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 18:00:47.682 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 11908 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 18:00:47.686 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 18:00:47.686 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 18:00:48.579 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$17f7ad01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.614 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.624 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5a8c1756] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.628 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4163bb98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.630 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 18:00:48.674 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.689 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:48.709 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:49.763 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 18:00:49.764 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:49.817 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.012 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.018 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.030 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.033 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.035 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.037 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.039 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.069 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.089 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:00:50.338 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 18:00:50.346 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 18:00:50.346 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 18:00:50.346 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 18:00:50.348 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 18:00:50.348 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 18:00:50.348 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 18:00:50.352 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 18:00:50.449 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 18:00:50.449 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2719 ms
2020-05-26 18:00:51.787 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 18:00:51.809 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 18:00:51.812 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.735 seconds (JVM running for 6.011)
2020-05-26 18:00:56.969 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 18:00:56.970 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 18:00:56.991 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 21 ms
2020-05-26 18:01:02.923 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 18:01:02.924 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:01:02.924 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:02.925 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 18:01:02.926 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 18:01:02.952 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 18:01:02.972 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 18:01:02.992 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 18:01:02.996 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 74
2020-05-26 18:01:02.998 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"FD1B371BA2F3DF83964FA1D336746E9C"},"msg":"操作成功！"}
2020-05-26 18:01:03.002 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:03.005 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 74(Long), {"code":20000,"data":{"token":"FD1B371BA2F3DF83964FA1D336746E9C"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:03.018 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:03.064 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:01:03.064 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:01:03.065 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:03.065 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:01:03.065 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:01:03.066 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 18:01:03.072 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:01:03.076 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:03.077 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:03.082 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:03.289 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:01:03.289 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:01:03.290 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:03.290 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:01:03.291 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:01:03.301 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:01:03.302 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:01:03.307 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:01:03.308 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 18:01:03.311 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:01:03.315 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:01:03.316 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:03.316 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:01:03.317 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:03.318 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:01:03.318 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:03.318 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:01:03.323 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:03.358 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:01:03.359 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:01:03.366 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:01:03.367 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:01:03.368 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:01:03.370 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:01:03.371 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 56
2020-05-26 18:01:03.377 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:01:03.380 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:03.381 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 56(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:03.386 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:16.386 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 18:01:16.386 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:01:16.386 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:16.386 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 18:01:16.386 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2e672d25]
2020-05-26 18:01:16.392 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:16.393 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2e672d25](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:37)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ed372ae8.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 18:01:16.397 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:16.405 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:37)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$ed372ae8.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:01:16.411 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:01:16.411 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 18:01:21.061 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:01:21.062 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:01:21.062 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:21.063 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:01:21.064 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:01:21.064 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 18:01:21.065 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:01:21.070 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:21.071 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:21.084 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:21.331 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:01:21.331 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:01:21.332 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:21.332 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:01:21.333 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:01:21.337 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:01:21.337 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:01:21.337 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:01:21.338 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:01:21.338 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:01:21.339 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:01:21.340 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:01:21.342 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:01:21.343 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-26 18:01:21.344 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:01:21.345 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:01:21.346 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:01:21.349 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:21.351 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:21.359 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:01:21.362 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:01:21.363 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:01:21.364 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:01:21.368 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:01:21.371 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-26 18:01:21.372 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:01:21.378 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:01:21.379 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:01:21.384 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:03:09.626 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 18:03:09.632 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 18:03:15.263 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 15292 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 18:03:15.267 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 18:03:15.267 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 18:03:16.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$bb2816bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.166 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$fdbc8111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e4942553] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.173 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 18:03:16.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.229 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:16.248 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.253 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 18:03:17.254 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.503 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.508 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.515 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.519 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.521 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.528 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:03:17.827 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 18:03:17.836 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 18:03:17.837 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 18:03:17.837 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 18:03:17.839 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 18:03:17.839 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 18:03:17.839 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 18:03:17.842 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 18:03:17.928 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 18:03:17.928 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2617 ms
2020-05-26 18:03:19.242 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 18:03:19.261 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 18:03:19.264 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.588 seconds (JVM running for 5.889)
2020-05-26 18:03:52.319 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 18:03:52.319 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 18:03:52.339 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-05-26 18:03:57.605 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 18:03:57.606 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:03:57.607 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:03:57.608 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 18:03:57.609 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 18:03:57.633 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 18:03:57.652 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 18:03:57.681 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 18:03:57.685 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 80
2020-05-26 18:03:57.687 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"B7BF943A7C05E0079CBD1512BA6B92F5"},"msg":"操作成功！"}
2020-05-26 18:03:57.690 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:03:57.692 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 80(Long), {"code":20000,"data":{"token":"B7BF943A7C05E0079CBD1512BA6B92F5"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:03:57.697 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:03:57.740 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:03:57.740 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:03:57.741 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:03:57.741 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:03:57.741 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:03:57.742 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 18:03:57.745 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:03:57.750 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:03:57.752 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:03:57.756 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:03:58.012 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:03:58.013 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:03:58.014 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:03:58.014 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:03:58.015 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:03:58.025 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:03:58.026 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:03:58.029 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:03:58.031 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 18:03:58.035 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:03:58.038 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:03:58.038 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:03:58.039 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:03:58.039 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:03:58.040 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:03:58.040 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:03:58.041 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:03:58.045 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:03:58.081 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:03:58.082 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:03:58.088 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:03:58.089 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:03:58.090 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:03:58.092 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:03:58.093 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 55
2020-05-26 18:03:58.099 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:03:58.103 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:03:58.104 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 55(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:03:58.108 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:04:07.710 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 18:04:07.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:04:07.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:04:07.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 18:04:07.711 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@388edb59]
2020-05-26 18:04:07.718 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:04:07.719 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@388edb59](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:38)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$932b32d1.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 18:04:07.723 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:04:07.731 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:38)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$932b32d1.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:04:07.737 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:04:07.737 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 18:07:21.557 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 18:07:21.564 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 18:07:27.038 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 11564 (D:\资料文档\后台\SpringBoot\blog\target\classes started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 18:07:27.042 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.7.RELEASE, Spring v5.2.6.RELEASE
2020-05-26 18:07:27.043 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 18:07:27.920 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$c00f9617] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:27.956 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:27.966 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2a4006c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:27.969 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e97ba4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:27.972 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 18:07:28.027 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:28.046 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:28.064 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.138 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 18:07:29.139 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.193 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.386 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.391 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.399 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.402 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.404 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.406 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.407 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.410 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.412 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.441 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.463 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:07:29.703 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 18:07:29.711 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 18:07:29.711 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 18:07:29.712 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-05-26 18:07:29.713 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 18:07:29.714 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 18:07:29.714 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 18:07:29.717 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 18:07:29.806 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 18:07:29.807 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2716 ms
2020-05-26 18:07:31.109 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 18:07:31.128 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 18:07:31.131 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.687 seconds (JVM running for 5.887)
2020-05-26 18:07:39.629 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 18:07:39.629 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 18:07:39.651 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 21 ms
2020-05-26 18:07:45.285 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 18:07:45.286 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:07:45.286 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:07:45.287 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 18:07:45.288 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 18:07:45.314 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 18:07:45.334 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 18:07:45.355 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 18:07:45.359 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 75
2020-05-26 18:07:45.361 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"2D0C5A012ADA794E43B32B9646EE9A2F"},"msg":"操作成功！"}
2020-05-26 18:07:45.365 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:07:45.368 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 75(Long), {"code":20000,"data":{"token":"2D0C5A012ADA794E43B32B9646EE9A2F"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:07:45.381 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:07:45.429 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:07:45.430 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:07:45.430 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:07:45.431 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:07:45.432 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:07:45.433 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 18:07:45.437 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:07:45.440 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:07:45.441 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:07:45.447 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:07:45.656 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:07:45.657 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:07:45.657 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:07:45.657 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:07:45.658 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:07:45.669 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:07:45.670 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:07:45.674 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:07:45.675 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 18:07:45.680 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:07:45.682 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:07:45.683 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:07:45.683 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:07:45.684 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:07:45.684 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:07:45.687 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:07:45.688 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:07:45.693 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:07:45.727 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:07:45.729 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:07:45.736 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:07:45.737 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:07:45.738 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:07:45.740 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:07:45.741 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 59
2020-05-26 18:07:45.748 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:07:45.752 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:07:45.753 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 59(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:07:45.757 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:07:57.194 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 18:07:57.195 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:07:57.195 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:07:57.196 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 18:07:57.196 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@38b5b8d6]
2020-05-26 18:07:57.202 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:07:57.203 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@38b5b8d6](String), 0(Integer), 	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$2ba2b3b7.uploadImage(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 18:07:57.205 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:07:57.214 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:36)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:31)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$2ba2b3b7.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:07:57.220 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:07:57.221 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 18:09:45.291 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:09:45.293 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:09:45.294 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:09:45.294 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:09:45.295 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:09:45.295 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 4
2020-05-26 18:09:45.295 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:09:45.299 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:09:45.300 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:09:45.304 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:09:45.552 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:09:45.552 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:09:45.553 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:09:45.553 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:09:45.553 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:09:45.554 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:09:45.554 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:09:45.554 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:09:45.554 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:09:45.555 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:09:45.562 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:09:45.563 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:09:45.565 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:09:45.566 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:09:45.567 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 15
2020-05-26 18:09:45.567 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:09:45.567 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:09:45.574 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:09:45.575 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:09:45.583 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:09:45.584 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:09:45.585 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:09:45.587 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:09:45.589 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 36
2020-05-26 18:09:45.590 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:09:45.591 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:09:45.597 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:09:45.599 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 36(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:09:45.604 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:26:06.090 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 18:26:06.095 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 18:35:19.342 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 4232 (started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 18:35:19.346 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-26 18:35:19.347 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 18:35:20.690 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.777 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$8f504c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.836 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4b896f16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.852 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$32611358] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.855 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 18:35:20.906 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:20.942 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.105 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 18:35:22.105 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.161 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.422 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.429 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.436 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.439 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.441 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.444 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.445 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.447 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.449 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.482 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:35:22.842 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 18:35:22.857 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 18:35:22.858 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 18:35:22.858 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-26 18:35:22.860 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 18:35:22.861 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 18:35:22.861 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 18:35:22.875 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 18:35:22.974 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 18:35:22.974 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3572 ms
2020-05-26 18:35:24.849 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 18:35:24.871 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 18:35:24.874 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 6.172 seconds (JVM running for 7.402)
2020-05-26 18:36:21.129 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 18:36:21.130 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 18:36:21.149 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-05-26 18:36:26.547 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 18:36:26.549 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:36:26.549 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:36:26.551 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 18:36:26.551 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 18:36:26.577 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 18:36:26.597 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 18:36:26.623 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 18:36:26.628 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 81
2020-05-26 18:36:26.629 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"AEF1899A9CA6BC4EC96EED3E405BE502"},"msg":"操作成功！"}
2020-05-26 18:36:26.632 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:36:26.635 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"data":{"token":"AEF1899A9CA6BC4EC96EED3E405BE502"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:36:26.648 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:36:26.697 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:36:26.697 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:36:26.698 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:36:26.698 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:36:26.698 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:36:26.699 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 2
2020-05-26 18:36:26.702 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:36:26.707 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:36:26.708 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:36:26.716 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:36:26.929 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:36:26.930 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:36:26.930 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:36:26.931 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:36:26.931 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:36:26.942 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:36:26.943 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:36:26.947 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:36:26.948 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 18:36:26.951 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:36:26.955 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:36:26.956 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:36:26.957 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:36:26.958 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:36:26.957 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:36:26.959 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:36:26.960 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:36:26.964 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:36:26.998 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:36:26.998 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:36:27.006 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:36:27.007 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:36:27.007 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:36:27.010 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:36:27.012 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 57
2020-05-26 18:36:27.018 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:36:27.023 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:36:27.024 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 57(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:36:27.031 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:36:31.731 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 18:36:31.731 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:36:31.731 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:36:31.732 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 18:36:31.732 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@cfb8744]
2020-05-26 18:36:31.811 ERROR [http-nio-8080-exec-6]com.github.tobato.fastdfs.domain.conn.ConnectionManager.executeFdfsTrackerCmd:78 -Unable to borrow buffer from pool
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:56)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$1be8b6bc.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:36:31.816 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:36:31.817 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@cfb8744](String), 0(Integer), java.lang.RuntimeException: Unable to borrow buffer from pool
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:56)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$1be8b6bc.uploadImage(<generated>)
Caused by: com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-05-26 18:36:31.823 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:36:31.830 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: Unable to borrow buffer from pool] with root cause
com.github.tobato.fastdfs.exception.FdfsUnavailableException: 无法获取服务端连接资源：找不到可用的tracker 
	at com.github.tobato.fastdfs.domain.fdfs.TrackerLocator.getTrackerAddress(TrackerLocator.java:112)
	at com.github.tobato.fastdfs.domain.conn.TrackerConnectionManager.executeFdfsTrackerCmd(TrackerConnectionManager.java:70)
	at com.github.tobato.fastdfs.service.DefaultTrackerClient.getStoreStorage(DefaultTrackerClient.java:32)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.getStorageNode(DefaultFastFileStorageClient.java:167)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:110)
	at com.github.tobato.fastdfs.service.DefaultFastFileStorageClient.uploadFile(DefaultFastFileStorageClient.java:68)
	at com.whz.shiro.utils.UploadService.uploadImage(UploadService.java:56)
	at com.whz.shiro.controller.UploadController.uploadImage(UploadController.java:30)
	at com.whz.shiro.controller.UploadController$$FastClassBySpringCGLIB$$a2d922a0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.whz.shiro.aspect.RequestAspect.doAround(RequestAspect.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.whz.shiro.controller.UploadController$$EnhancerBySpringCGLIB$$1be8b6bc.uploadImage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:36:31.836 ERROR [http-nio-8080-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-05-26 18:36:31.836 ERROR [http-nio-8080-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.whz.shiro.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.whz.shiro.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-05-26 18:37:48.238 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-26 18:37:48.243 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-26 18:37:52.586 INFO  [main]com.whz.shiro.ShiroApplication.logStarting:55 -Starting ShiroApplication on DESKTOP-VN7JL54 with PID 2428 (started by 86188 in D:\资料文档\后台\SpringBoot\blog)
2020-05-26 18:37:52.590 DEBUG [main]com.whz.shiro.ShiroApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-05-26 18:37:52.591 INFO  [main]com.whz.shiro.ShiroApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-26 18:37:53.417 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.whz.shiro.config.ShiroConfig$$EnhancerBySpringCGLIB$$a66d8097] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.532 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.543 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e901eaec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.547 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cfd98f2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.550 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-26 18:37:53.596 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.610 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:53.631 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.704 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-26 18:37:54.705 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.967 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.974 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.980 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.986 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.whz.shiro.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.990 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.991 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.994 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.whz.shiro.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:54.995 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.whz.shiro.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:55.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:55.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-26 18:37:55.307 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 8080 (http)
2020-05-26 18:37:55.315 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-8080"]
2020-05-26 18:37:55.316 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-26 18:37:55.316 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-05-26 18:37:55.318 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
2020-05-26 18:37:55.318 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-26 18:37:55.318 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-26 18:37:55.322 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
2020-05-26 18:37:55.414 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-26 18:37:55.415 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2774 ms
2020-05-26 18:37:56.758 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-8080"]
2020-05-26 18:37:56.779 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 8080 (http) with context path ''
2020-05-26 18:37:56.781 INFO  [main]com.whz.shiro.ShiroApplication.logStarted:61 -Started ShiroApplication in 4.831 seconds (JVM running for 6.121)
2020-05-26 18:38:04.895 INFO  [http-nio-8080-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-26 18:38:04.896 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-26 18:38:04.918 INFO  [http-nio-8080-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 21 ms
2020-05-26 18:38:11.012 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/login
2020-05-26 18:38:11.013 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:38:11.014 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:38:11.015 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.login
2020-05-26 18:38:11.015 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-05-26 18:38:11.042 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-26 18:38:11.062 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-26 18:38:11.083 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-26 18:38:11.091 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 79
2020-05-26 18:38:11.093 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"token":"BB86D372FABC595BBD4433555246D80A"},"msg":"操作成功！"}
2020-05-26 18:38:11.096 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:38:11.098 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 79(Long), {"code":20000,"data":{"token":"BB86D372FABC595BBD4433555246D80A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:38:11.104 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:38:11.151 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:38:11.151 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:38:11.152 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:38:11.153 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:38:11.153 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:38:11.154 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 3
2020-05-26 18:38:11.160 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:38:11.163 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:38:11.164 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:38:11.169 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:38:11.278 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:38:11.279 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:38:11.279 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:38:11.279 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:38:11.280 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:38:11.290 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:38:11.291 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:38:11.295 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:38:11.295 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 17
2020-05-26 18:38:11.299 INFO  [http-nio-8080-exec-5]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:38:11.304 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:38:11.306 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":1,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:38:11.311 DEBUG [http-nio-8080-exec-5]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:38:14.447 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:38:14.447 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:38:14.448 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:38:14.448 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:38:14.448 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:38:14.488 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:38:14.489 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:38:14.496 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:38:14.497 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:38:14.497 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:38:14.499 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:38:14.501 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 54
2020-05-26 18:38:14.509 INFO  [http-nio-8080-exec-6]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:38:14.513 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:38:14.513 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 54(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:38:14.519 DEBUG [http-nio-8080-exec-6]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:38:18.299 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /upload/uploadImage
2020-05-26 18:38:18.299 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:38:18.299 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:38:18.300 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.UploadController.uploadImage
2020-05-26 18:38:18.300 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6e08c13d]
2020-05-26 18:38:18.506 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 207
2020-05-26 18:38:18.507 INFO  [http-nio-8080-exec-8]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":"http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg","msg":"上传成功！"}
2020-05-26 18:38:18.514 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:38:18.515 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6e08c13d](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":"http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg","msg":"上传成功！"}(String), 127.0.0.1(String)
2020-05-26 18:38:18.520 DEBUG [http-nio-8080-exec-8]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:16.118 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/save
2020-05-26 18:42:16.118 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:42:16.119 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:42:16.119 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.save
2020-05-26 18:42:16.119 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Blog(blogId=, blogTitle=dfsg, blogImage=http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg, blogContent=<p>ascdffadf</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-26 18:42:16.125 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:16.126 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.BlogMapper.save.debug:159 -==> Parameters: 1265231772644376576(String), dfsg(String), http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg(String), <p>ascdffadf</p>(String), 7(Integer), null, null
2020-05-26 18:42:16.131 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:16.132 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-26 18:42:16.133 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-05-26 18:42:16.136 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-26 18:42:16.137 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-05-26 18:42:16.138 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.update.debug:159 -==> Parameters: SpringBoot(String), 2(Integer), 1(Integer), 7(Integer)
2020-05-26 18:42:16.147 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-05-26 18:42:16.152 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-26 18:42:16.153 INFO  [http-nio-8080-exec-7]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"msg":"添加成功！"}
2020-05-26 18:42:16.156 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:16.156 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=dfsg, blogImage=http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg, blogContent=<p>ascdffadf</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-05-26 18:42:16.161 DEBUG [http-nio-8080-exec-7]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:16.188 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:42:16.188 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:42:16.189 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:42:16.189 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:42:16.189 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11118, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-26 13:44:08), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:42:16.194 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:42:16.195 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:42:16.202 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:42:16.203 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:42:16.203 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:42:16.205 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:42:16.207 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 19
2020-05-26 18:42:16.207 INFO  [http-nio-8080-exec-9]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:42:16.212 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:16.213 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11118, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-26 13:44:08), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:42:16.220 DEBUG [http-nio-8080-exec-9]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:55.381 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /admin/info
2020-05-26 18:42:55.382 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:42:55.383 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:42:55.385 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.AdminController.getLoginInfo
2020-05-26 18:42:55.386 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:42:55.386 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 5
2020-05-26 18:42:55.387 INFO  [http-nio-8080-exec-10]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}
2020-05-26 18:42:55.392 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:55.394 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"https://wpimg.wallstcn.com/69a1c46c-eb1c-4b46-8bd4-e9e686ef5251.png","name":"染柒","password":"","signature":"脚踏实地，仰望星空。","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:42:55.400 DEBUG [http-nio-8080-exec-10]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:55.603 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /type/getList
2020-05-26 18:42:55.604 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : GET
2020-05-26 18:42:55.604 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:42:55.604 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.TypeController.getList
2020-05-26 18:42:55.605 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[]
2020-05-26 18:42:55.605 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:42:55.606 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:42:55.606 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:42:55.606 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:42:55.606 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:42:55.609 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-26 18:42:55.611 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-26 18:42:55.615 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-26 18:42:55.616 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-26 18:42:55.616 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:42:55.618 INFO  [http-nio-8080-exec-1]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":2,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}
2020-05-26 18:42:55.619 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:42:55.623 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:55.624 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":10,"typeId":2,"typeName":"mysql"},{"typeBlogCount":0,"typeId":3,"typeName":"jsp"},{"typeBlogCount":2,"typeId":7,"typeName":"SpringBoot"},{"typeBlogCount":0,"typeId":8,"typeName":"c#"},{"typeBlogCount":0,"typeId":9,"typeName":"vue"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:42:55.629 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:42:55.630 DEBUG [http-nio-8080-exec-1]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:42:55.632 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:42:55.633 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:42:55.637 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:42:55.639 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 34
2020-05-26 18:42:55.640 INFO  [http-nio-8080-exec-4]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:42:55.644 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:42:55.645 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:42:55.653 DEBUG [http-nio-8080-exec-4]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:43:04.106 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:43:04.107 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:43:04.107 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:43:04.107 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:43:04.107 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=2, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11118, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-26 13:44:08), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:43:04.112 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:43:04.113 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 10(Integer), 10(Integer)
2020-05-26 18:43:04.116 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-05-26 18:43:04.117 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:43:04.118 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:43:04.119 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:43:04.120 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 14
2020-05-26 18:43:04.120 INFO  [http-nio-8080-exec-3]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1265231772644376576","blogImage":"http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg","blogRead":0,"blogTitle":"dfsg","createdTime":"2020-05-26 18:42:16","typeName":"SpringBoot","updateTime":"2020-05-26 18:42:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:43:04.123 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:43:04.124 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=2, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1, blogTitle=测试100, blogImage=null, blogContent=null, blogGoods=20, blogRead=345, blogCollection=123, typeName=java, blogSource=null, blogRemark=null, blogComment=1, blogMonth=null, createdTime=2020-05-22 19:39:16, updateTime=2020-05-25 13:03:28), BlogVo(blogId=1263812922329554944, blogTitle=测试3, blogImage=null, blogContent=null, blogGoods=345, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:15, updateTime=2020-05-25 13:03:30), BlogVo(blogId=1263813005695541248, blogTitle=测试4, blogImage=null, blogContent=null, blogGoods=43, blogRead=67, blogCollection=123, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:35, updateTime=2020-05-25 13:03:31), BlogVo(blogId=1263813025689788416, blogTitle=测试5, blogImage=null, blogContent=null, blogGoods=435, blogRead=12, blogCollection=4432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:40, updateTime=2020-05-25 13:03:37), BlogVo(blogId=1263813046816497664, blogTitle=测试6, blogImage=null, blogContent=null, blogGoods=43, blogRead=13, blogCollection=2342, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:45, updateTime=2020-05-25 13:03:41), BlogVo(blogId=1263813067829960704, blogTitle=测试7, blogImage=null, blogContent=null, blogGoods=33, blogRead=14, blogCollection=675, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:50, updateTime=2020-05-25 13:03:44), BlogVo(blogId=1263813085076938752, blogTitle=测试8, blogImage=null, blogContent=null, blogGoods=44, blogRead=15, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:54, updateTime=2020-05-25 13:03:45), BlogVo(blogId=1263813104932773888, blogTitle=测试9, blogImage=null, blogContent=null, blogGoods=435, blogRead=11118, blogCollection=567, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:44:59, updateTime=2020-05-26 13:44:08), BlogVo(blogId=1263813131239448576, blogTitle=测试10, blogImage=null, blogContent=null, blogGoods=345, blogRead=16, blogCollection=432, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:05, updateTime=2020-05-25 13:03:51), BlogVo(blogId=1263813156384301056, blogTitle=测试11, blogImage=null, blogContent=null, blogGoods=345, blogRead=17, blogCollection=234, typeName=mysql, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:45:11, updateTime=2020-05-25 15:20:28)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":345,"blogComment":0,"blogGoods":343,"blogId":"1263816317509591040","blogRead":247,"blogTitle":"测试12","createdTime":"2020-05-22 20:57:45","typeName":"SpringBoot","updateTime":"2020-05-25 17:31:46"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1265231772644376576","blogImage":"http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg","blogRead":0,"blogTitle":"dfsg","createdTime":"2020-05-26 18:42:16","typeName":"SpringBoot","updateTime":"2020-05-26 18:42:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:43:04.129 DEBUG [http-nio-8080-exec-3]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-26 18:43:12.030 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:106 -请求地址 : /blog/getByPage
2020-05-26 18:43:12.031 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:107 -请求方式 : POST
2020-05-26 18:43:12.031 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:110 -IP : 127.0.0.1
2020-05-26 18:43:12.031 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:112 -方法 : com.whz.shiro.controller.BlogController.getByPage
2020-05-26 18:43:12.031 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.printRequestLog:114 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1265231772644376576, blogTitle=dfsg, blogImage=http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-26 18:42:16, updateTime=2020-05-26 18:42:16)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-26 18:43:12.035 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-26 18:43:12.036 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-26 18:43:12.039 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 10
2020-05-26 18:43:12.040 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-26 18:43:12.040 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-26 18:43:12.042 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-26 18:43:12.043 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAround:61 -耗时 : 13
2020-05-26 18:43:12.044 INFO  [http-nio-8080-exec-2]com.whz.shiro.aspect.RequestAspect.doAfterReturning:75 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2020-05-26 18:43:12.048 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-26 18:43:12.049 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1263816317509591040, blogTitle=测试12, blogImage=null, blogContent=null, blogGoods=343, blogRead=247, blogCollection=345, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-22 20:57:45, updateTime=2020-05-25 17:31:46), BlogVo(blogId=1265231772644376576, blogTitle=dfsg, blogImage=http://152.136.134.15/group1/M00/00/00/rBUAA17M8SqAaZzMAAA7QCkJrNU084.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=SpringBoot, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-05-26 18:42:16, updateTime=2020-05-26 18:42:16)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":123,"blogComment":1,"blogGoods":20,"blogId":"1","blogRead":345,"blogTitle":"测试100","createdTime":"2020-05-22 19:39:16","typeName":"java","updateTime":"2020-05-25 13:03:28"},{"blogCollection":123,"blogComment":0,"blogGoods":345,"blogId":"1263812922329554944","blogRead":67,"blogTitle":"测试3","createdTime":"2020-05-22 20:44:15","typeName":"mysql","updateTime":"2020-05-25 13:03:30"},{"blogCollection":123,"blogComment":0,"blogGoods":43,"blogId":"1263813005695541248","blogRead":67,"blogTitle":"测试4","createdTime":"2020-05-22 20:44:35","typeName":"mysql","updateTime":"2020-05-25 13:03:31"},{"blogCollection":4432,"blogComment":0,"blogGoods":435,"blogId":"1263813025689788416","blogRead":12,"blogTitle":"测试5","createdTime":"2020-05-22 20:44:40","typeName":"mysql","updateTime":"2020-05-25 13:03:37"},{"blogCollection":2342,"blogComment":0,"blogGoods":43,"blogId":"1263813046816497664","blogRead":13,"blogTitle":"测试6","createdTime":"2020-05-22 20:44:45","typeName":"mysql","updateTime":"2020-05-25 13:03:41"},{"blogCollection":675,"blogComment":0,"blogGoods":33,"blogId":"1263813067829960704","blogRead":14,"blogTitle":"测试7","createdTime":"2020-05-22 20:44:50","typeName":"mysql","updateTime":"2020-05-25 13:03:44"},{"blogCollection":567,"blogComment":0,"blogGoods":44,"blogId":"1263813085076938752","blogRead":15,"blogTitle":"测试8","createdTime":"2020-05-22 20:44:54","typeName":"mysql","updateTime":"2020-05-25 13:03:45"},{"blogCollection":567,"blogComment":0,"blogGoods":435,"blogId":"1263813104932773888","blogRead":11118,"blogTitle":"测试9","createdTime":"2020-05-22 20:44:59","typeName":"mysql","updateTime":"2020-05-26 13:44:08"},{"blogCollection":432,"blogComment":0,"blogGoods":345,"blogId":"1263813131239448576","blogRead":16,"blogTitle":"测试10","createdTime":"2020-05-22 20:45:05","typeName":"mysql","updateTime":"2020-05-25 13:03:51"},{"blogCollection":234,"blogComment":0,"blogGoods":345,"blogId":"1263813156384301056","blogRead":17,"blogTitle":"测试11","createdTime":"2020-05-22 20:45:11","typeName":"mysql","updateTime":"2020-05-25 15:20:28"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-26 18:43:12.065 DEBUG [http-nio-8080-exec-2]com.whz.shiro.mapper.LogMapper.save.debug:159 -<==    Updates: 1
